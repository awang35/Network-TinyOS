<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="30:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b08b4480318"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b08b41b99c0"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b08b41b99c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b08b41c6e28"/></to>
    </wire>
    <wire loc="33:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="sendDelay" scoped="" ref="0x2b08b44a77f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4771020"/></to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b4771020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45a6510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="pingTimeoutTimer" scoped="" ref="0x2b08b4475e38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4584420"/></to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b4584420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45a6510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="neighborDiscovey" scoped="" ref="0x2b08b448a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4767a60"/></to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b4767a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45a6510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="neighborMap" scoped="" ref="0x2b08b4485200"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4760020"/></to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b4760020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45a6510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="helloProtocol" scoped="" ref="0x2b08b4494678"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b475a5e8"/></to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b475a5e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45a6510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="waitTimer" scoped="" ref="0x2b08b449a658"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4778aa0"/></to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b4778aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45a6510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b08b4491b88"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b08b4587080"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b08b4587080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b08b459e020"/></to>
    </wire>
    <wire loc="42:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08b44b14c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08b52d4c38"/></to>
    </wire>
    <wire loc="65:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08b52d4c38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08b58ad020"/></to>
    </wire>
    <wire loc="43:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08b44bbc28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08b52d2888"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08b52d2888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08b58adbd8"/></to>
    </wire>
    <wire loc="44:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08b44cb958"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08b52d4080"/></to>
    </wire>
    <wire loc="64:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08b52d4080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08b58ae398"/></to>
    </wire>
    <wire loc="45:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b08b44c76d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08b478e248"/></to>
    </wire>
    <wire loc="76:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08b478e248"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08b47ad310"/></to>
    </wire>
    <wire loc="47:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08b44c3c58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b52c8390"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08b52c8390"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b478b348"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b51a50e0"/></to>
    </wire>
    <wire loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b50fa9e0"/></to>
    </wire>
    <wire loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b50cb5a8"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4f85020"/></to>
    </wire>
    <wire loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4ecfb80"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b49348e0"/></to>
    </wire>
    <wire loc="96:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b5789620"/></to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4c6b5d8"/></to>
    </wire>
    <wire loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4887080"/></to>
    </wire>
    <wire loc="53:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b45a1e48"/></to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b45835f0"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b08b4366490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b08b40bbbe8"/></to>
    </wire>
    <wire loc="53:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b08b40bbbe8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b08b4178c00"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b08b4366e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b41badb8"/></to>
    </wire>
    <wire loc="58:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b41badb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b41ca4f0"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b4365560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></to>
    </wire>
    <wire loc="26:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b08b41c49a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4a10190"/></to>
    </wire>
    <wire loc="59:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08b41cec88"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08b434a7e8"/></to>
    </wire>
    <wire loc="61:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b08b41c9398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b434a1b8"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b08b41cab90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4dde020"/></to>
    </wire>
    <wire loc="62:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b08b41cab90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b08b41cca18"/></to>
    </wire>
    <wire loc="46:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b08b41cca18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b08b41d0460"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b08b41d3108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b08b41c49a0"/></to>
    </wire>
    <wire loc="48:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b08b41d7690"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b08b41e81a0"/></to>
    </wire>
    <wire loc="141:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b08b41e81a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08b426e430"/></to>
    </wire>
    <wire loc="49:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b08b41dc808"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b08b41d3108"/></to>
    </wire>
    <wire loc="191:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b08b421fc78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b42f8970"/></to>
    </wire>
    <wire loc="165:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b08b41fa7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08b4299020"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08b4299020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b545d100"/></to>
    </wire>
    <wire loc="176:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b08b420e7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08b429bd60"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08b429bd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b54a1100"/></to>
    </wire>
    <wire loc="185:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b08b42144d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08b42b05b8"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08b42b05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5549100"/></to>
    </wire>
    <wire loc="143:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b08b41e64d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08b426c740"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08b426c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b532a020"/></to>
    </wire>
    <wire loc="183:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b08b42161a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08b42b22a8"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08b42b22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b554f100"/></to>
    </wire>
    <wire loc="146:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b08b41e47e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08b4274930"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08b4274930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b537e180"/></to>
    </wire>
    <wire loc="157:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b08b41f5968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08b4284740"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08b4284740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5412100"/></to>
    </wire>
    <wire loc="168:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b08b4206c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08b4296430"/></to>
    </wire>
    <wire loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08b4296430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5453100"/></to>
    </wire>
    <wire loc="179:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b08b420bc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08b42a9120"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08b42a9120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b54f1100"/></to>
    </wire>
    <wire loc="138:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b08b41dec78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08b4261020"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08b4261020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b533a020"/></to>
    </wire>
    <wire loc="149:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b08b41efc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08b4271d60"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08b4271d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5374100"/></to>
    </wire>
    <wire loc="160:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b08b41ffe00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08b4280bd8"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08b4280bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5408100"/></to>
    </wire>
    <wire loc="171:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b08b42021a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08b42938c8"/></to>
    </wire>
    <wire loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08b42938c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b544a100"/></to>
    </wire>
    <wire loc="188:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b08b4211968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08b42bea50"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08b42bea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b553f100"/></to>
    </wire>
    <wire loc="194:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b08b421b7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b4310020"/></to>
    </wire>
    <wire loc="174:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b08b42004d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08b429da50"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08b429da50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b54a7100"/></to>
    </wire>
    <wire loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08b426e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5330020"/></to>
    </wire>
    <wire loc="152:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b08b41eb348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08b427c120"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08b427c120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b53c0100"/></to>
    </wire>
    <wire loc="192:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b08b421d4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b4306ab0"/></to>
    </wire>
    <wire loc="155:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b08b41f7658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08b4286500"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08b4286500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5418180"/></to>
    </wire>
    <wire loc="166:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b08b41f9968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08b4298120"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08b4298120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b545a100"/></to>
    </wire>
    <wire loc="177:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b08b420d968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08b42ace18"/></to>
    </wire>
    <wire loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08b42ace18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b549d100"/></to>
    </wire>
    <wire loc="186:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b08b4213658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08b42af740"/></to>
    </wire>
    <wire loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08b42af740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5546100"/></to>
    </wire>
    <wire loc="144:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b08b41e5658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08b426b8c8"/></to>
    </wire>
    <wire loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08b426b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5327020"/></to>
    </wire>
    <wire loc="147:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b08b41f1968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08b4273a50"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08b4273a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b537b100"/></to>
    </wire>
    <wire loc="158:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b08b41f3af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08b42828c8"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08b42828c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b540e100"/></to>
    </wire>
    <wire loc="169:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b08b4205e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08b42955b8"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08b42955b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5450100"/></to>
    </wire>
    <wire loc="180:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b08b420ae00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08b42a82a8"/></to>
    </wire>
    <wire loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08b42a82a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b54ee100"/></to>
    </wire>
    <wire loc="139:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b08b41dde00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08b4260120"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08b4260120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5336020"/></to>
    </wire>
    <wire loc="150:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b08b41eee00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08b4270e18"/></to>
    </wire>
    <wire loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08b4270e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5371100"/></to>
    </wire>
    <wire loc="161:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b08b41fd020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08b4291d60"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08b4291d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5405100"/></to>
    </wire>
    <wire loc="189:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b08b4210af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08b42bdbd8"/></to>
    </wire>
    <wire loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08b42bdbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b553c100"/></to>
    </wire>
    <wire loc="164:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b08b41fb348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08b4289e40"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08b4289e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5460180"/></to>
    </wire>
    <wire loc="175:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b08b420f658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08b429cbd8"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08b429cbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b54a4100"/></to>
    </wire>
    <wire loc="184:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b08b4215348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08b42b1430"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08b42b1430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b554c100"/></to>
    </wire>
    <wire loc="195:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b08b421a968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b430b180"/></to>
    </wire>
    <wire loc="142:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b08b41e7348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08b426d5b8"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08b426d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b532d020"/></to>
    </wire>
    <wire loc="153:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b08b41f84d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08b427b2a8"/></to>
    </wire>
    <wire loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08b427b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b53bd100"/></to>
    </wire>
    <wire loc="182:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b08b4208020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08b42b31e8"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08b42b31e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b54f7180"/></to>
    </wire>
    <wire loc="156:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b08b41f67e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08b42855b8"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08b42855b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5415100"/></to>
    </wire>
    <wire loc="167:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b08b4207af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08b42972a8"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08b42972a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5457100"/></to>
    </wire>
    <wire loc="178:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b08b420caf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08b42aa020"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08b42aa020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b54f4100"/></to>
    </wire>
    <wire loc="187:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b08b42127e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08b42ae8c8"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08b42ae8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5542100"/></to>
    </wire>
    <wire loc="137:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b08b41d2ac0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08b4263dc0"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08b4263dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b533d020"/></to>
    </wire>
    <wire loc="148:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b08b41f0af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08b4272bd8"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08b4272bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5378100"/></to>
    </wire>
    <wire loc="159:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b08b41f2c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08b4281a50"/></to>
    </wire>
    <wire loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08b4281a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b540b100"/></to>
    </wire>
    <wire loc="170:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b08b4203020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08b4294740"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08b4294740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b544d100"/></to>
    </wire>
    <wire loc="193:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b08b421c658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b4302c38"/></to>
    </wire>
    <wire loc="173:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b08b4201348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08b429e930"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08b429e930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b54aa180"/></to>
    </wire>
    <wire loc="162:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b08b41fc1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08b4290e18"/></to>
    </wire>
    <wire loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08b4290e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5402100"/></to>
    </wire>
    <wire loc="140:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b08b41e9020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08b426f2a8"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08b426f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b5333020"/></to>
    </wire>
    <wire loc="151:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b08b41ec100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08b427e020"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08b427e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08b536e100"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b4177b08"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b08b4174020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b08b40c5dd8"/></to>
    </wire>
    <wire loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b08b41977f0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b08b465f790"/></to>
    </wire>
    <wire loc="74:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <from><interface-ref name="sendBufferTask" scoped="" ref="0x2b08b44d36e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b08b4588020"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b08b4583e48"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b45891f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b45835f0"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45a6510"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45bbb68"/></to>
    </wire>
    <wire loc="61:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45bbb68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b47450c8"/></to>
    </wire>
    <wire loc="59:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b45a1e48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b45b16f8"/></to>
    </wire>
    <wire loc="65:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b08b45b5108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b08b4736c38"/></to>
    </wire>
    <wire loc="35:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b45b16f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b46ca7d8"/></to>
    </wire>
    <wire loc="62:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b08b473f5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b46e0290"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08b46fd648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b08b45ae020"/></to>
    </wire>
    <wire loc="36:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b08b45ae020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08b46c9020"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08b4758e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b08b45c11d8"/></to>
    </wire>
    <wire loc="37:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b08b45c11d8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08b46c5128"/></to>
    </wire>
    <wire loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08b46c5128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08b55ed128"/></to>
    </wire>
    <wire loc="35:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b46ca7d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b55f2720"/></to>
    </wire>
    <wire loc="36:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08b46c9020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08b55f1020"/></to>
    </wire>
    <wire loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b55eb228"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4657248"/></to>
    </wire>
    <wire loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b4657248"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4649400"/></to>
    </wire>
    <wire loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b55e50c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b4652220"/></to>
    </wire>
    <wire loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b4652220"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b4664558"/></to>
    </wire>
    <wire loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08b55e4020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b08b4651210"/></to>
    </wire>
    <wire loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08b4651210"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b08b4663670"/></to>
    </wire>
    <wire loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b08b55e10a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b08b464d3c8"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b08b464d3c8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b08b465e020"/></to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b08b46f95e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b08b473a618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08b47ad310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08b47d1020"/></to>
    </wire>
    <wire loc="78:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08b478d208"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08b47ac2b0"/></to>
    </wire>
    <wire loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08b47ac2b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08b51b8938"/></to>
    </wire>
    <wire loc="80:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b08b478a020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b08b47aa020"/></to>
    </wire>
    <wire loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b08b47aa020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b08b51b5628"/></to>
    </wire>
    <wire loc="81:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08b478a5f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08b47a8bd8"/></to>
    </wire>
    <wire loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08b47a8bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08b51b32a8"/></to>
    </wire>
    <wire loc="91:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b08b4787020"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b08b501e130"/></to>
    </wire>
    <wire loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b08b501e130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b08b5010060"/></to>
    </wire>
    <wire loc="84:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b4794848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b47c3628"/></to>
    </wire>
    <wire loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b47c3628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b47e2668"/></to>
    </wire>
    <wire loc="79:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08b478b348"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b47ab3c8"/></to>
    </wire>
    <wire loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08b47ab3c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b51b7ab0"/></to>
    </wire>
    <wire loc="83:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b4780290"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b47a67e0"/></to>
    </wire>
    <wire loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b47a67e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b47e4658"/></to>
    </wire>
    <wire loc="82:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08b47892c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08b47aa610"/></to>
    </wire>
    <wire loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08b47aa610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08b51b5c18"/></to>
    </wire>
    <wire loc="92:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08b479ee48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08b501a020"/></to>
    </wire>
    <wire loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08b501a020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08b500c020"/></to>
    </wire>
    <wire loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08b47d1020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08b5199470"/></to>
    </wire>
    <wire loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b47ba700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b51b1020"/></to>
    </wire>
    <wire loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b08b47b71c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b08b51b2400"/></to>
    </wire>
    <wire loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b47c5888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b47e67e8"/></to>
    </wire>
    <wire loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b47e67e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50234b8"/></to>
    </wire>
    <wire loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b47e2668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b519a8f8"/></to>
    </wire>
    <wire loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b47e4658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b08b50203b8"/></to>
    </wire>
    <wire loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b08b47d6450"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b08b47e1128"/></to>
    </wire>
    <wire loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b08b47e1128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b08b5187ca0"/></to>
    </wire>
    <wire loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b47c17b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b47e2020"/></to>
    </wire>
    <wire loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b47e2020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b501f6b0"/></to>
    </wire>
    <wire loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b08b51aa698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b47d0340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08b51b0020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b08b47ee4c8"/></to>
    </wire>
    <wire loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b08b47ee4c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b08b51190c8"/></to>
    </wire>
    <wire loc="99:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08b51b0cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b08b47e61d0"/></to>
    </wire>
    <wire loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b08b47e61d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b08b5119d90"/></to>
    </wire>
    <wire loc="101:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08b51ac8d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08b4e8f2b8"/></to>
    </wire>
    <wire loc="102:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b51af368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50234b8"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50234b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50132e8"/></to>
    </wire>
    <wire loc="103:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b51ae188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5020d08"/></to>
    </wire>
    <wire loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5020d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5012b60"/></to>
    </wire>
    <wire loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b08b51aeab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b08b4868af8"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b08b4868af8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b08b48864b0"/></to>
    </wire>
    <wire loc="106:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b08b51ab6a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b47dc678"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b47dc678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b47fd948"/></to>
    </wire>
    <wire loc="109:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08b51a82a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08b4dc93c8"/></to>
    </wire>
    <wire loc="51:/home/adrian/local/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08b4dc93c8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08b4dc3c38"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08b5199470"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b08b5196410"/></to>
    </wire>
    <wire loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b501f6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b5011630"/></to>
    </wire>
    <wire loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b08b5187ca0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b08b5182080"/></to>
    </wire>
    <wire loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b08b51190c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b08b510f828"/></to>
    </wire>
    <wire loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b519a8f8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b5195838"/></to>
    </wire>
    <wire loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b08b47ca020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b511aa20"/></to>
    </wire>
    <wire loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08b511aa20"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b08b510f1b8"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b08b50203b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b08b5012210"/></to>
    </wire>
    <wire loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b47d0340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b511b1c8"/></to>
    </wire>
    <wire loc="96:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b511b1c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b5112758"/></to>
    </wire>
    <wire loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b08b47e5330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b511bdb0"/></to>
    </wire>
    <wire loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08b511bdb0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b08b51114b8"/></to>
    </wire>
    <wire loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b08b47ca6a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b08b51184a0"/></to>
    </wire>
    <wire loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b08b51184a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b08b510ed08"/></to>
    </wire>
    <wire loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b08b5119d90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b08b510e688"/></to>
    </wire>
    <wire loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b08b5196410"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08b47e0780"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08b47e0780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08b47fe140"/></to>
    </wire>
    <wire loc="101:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08b5117840"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b50d0210"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08b50d0210"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b50ce8e8"/></to>
    </wire>
    <wire loc="102:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08b50cf020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b5187080"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08b5187080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08b51869c0"/></to>
    </wire>
    <wire loc="103:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08b51869c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b519d540"/></to>
    </wire>
    <wire loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08b519d540"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08b5197020"/></to>
    </wire>
    <wire loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08b5197020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b47dd2d8"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08b47dd2d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b47febe0"/></to>
    </wire>
    <wire loc="107:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08b51171f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b519a2b0"/></to>
    </wire>
    <wire loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08b519a2b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08b5197cc8"/></to>
    </wire>
    <wire loc="108:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08b5197cc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b5101a30"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08b5101a30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b50fdcd8"/></to>
    </wire>
    <wire loc="109:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08b50fe870"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b47dc020"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08b47dc020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b4f8a2f0"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08b4f8a2f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08b4f847a0"/></to>
    </wire>
    <wire loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b47fc798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4878e10"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b4878e10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b48876b0"/></to>
    </wire>
    <wire loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b08b47f4a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b08b48738b0"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b08b48738b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b08b4884318"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b08b47f1500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b08b4eb4c58"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b08b47f1500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b08b4f8b080"/></to>
    </wire>
    <wire loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b08b4f8b080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b08b4f85660"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b08b4eb4c58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b08b4ece310"/></to>
    </wire>
    <wire loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b08b4811cc8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b08b4eb1480"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b08b4eb1480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b4eceb70"/></to>
    </wire>
    <wire loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b08b47f9a70"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b4eb0140"/></to>
    </wire>
    <wire loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b4eb0140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b4ecd948"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b480fde0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50234b8"/></to>
    </wire>
    <wire loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b4803020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5020d08"/></to>
    </wire>
    <wire loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b08b47f3908"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b08b4587080"/></to>
    </wire>
    <wire loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b08b4821540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b08b50da740"/></to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b08b50da740"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b08b4c39860"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08b4805760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08b4dc93c8"/></to>
    </wire>
    <wire loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b08b481db80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b08b481ecf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b08b481fe68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b08b488bd28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b08b4883658"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b08b4880370"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b08b49312a0"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b08b49312a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08b492b3b8"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b08b487b4f8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b08b4aec638"/></to>
    </wire>
    <wire loc="100:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b08b4aec638"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b08b41e47e0"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b08b487a688"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b08b4ae9ae0"/></to>
    </wire>
    <wire loc="103:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b08b4ae9ae0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b08b41e64d0"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b08b48a2810"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b08b4ae7df0"/></to>
    </wire>
    <wire loc="105:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b08b4ae7df0"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b08b41e7348"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b08b489ce80"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b08b4b0f020"/></to>
    </wire>
    <wire loc="59:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b08b4b0f020"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b08b4bab458"/></to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b08b48b4550"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4dfb280"/></to>
    </wire>
    <wire loc="112:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b4dfb280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4bd5208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b08b48b3768"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b08b4df8a50"/></to>
    </wire>
    <wire loc="118:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b08b4df8a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b08b48b3e40"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b08b4df7cd0"/></to>
    </wire>
    <wire loc="121:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b08b4df7cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b08b48b5e40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b08b4dfade8"/></to>
    </wire>
    <wire loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b08b4dfade8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b48b5560"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b4df6368"/></to>
    </wire>
    <wire loc="122:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b4df6368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b08b488f1d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b08b4e2f838"/></to>
    </wire>
    <wire loc="140:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b08b4e2f838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b08b488fa40"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b08b4e2c7c0"/></to>
    </wire>
    <wire loc="144:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b08b4e2c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b08b48963b8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b08b4e2b020"/></to>
    </wire>
    <wire loc="145:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b08b4e2b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4896c40"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4df2dd8"/></to>
    </wire>
    <wire loc="133:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4df2dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4891558"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4df15c0"/></to>
    </wire>
    <wire loc="134:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4df15c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b08b4892c18"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b08b4e267c0"/></to>
    </wire>
    <wire loc="156:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b08b4e267c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b08b48922e0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b08b4e26020"/></to>
    </wire>
    <wire loc="155:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b08b4e26020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4891dd0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4e30c90"/></to>
    </wire>
    <wire loc="139:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4e30c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b08b48b7680"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b08b4df1d60"/></to>
    </wire>
    <wire loc="135:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b08b4df1d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b08b48b6020"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4e31cc8"/></to>
    </wire>
    <wire loc="137:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4e31cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b08b48b1140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4e16a48"/></to>
    </wire>
    <wire loc="112:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b4e16a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4bd5208"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b08b48b23c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4e331a8"/></to>
    </wire>
    <wire loc="112:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b4e331a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4bd5208"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08b4897338"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08b4e8f2b8"/></to>
    </wire>
    <wire loc="100:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b08b487e998"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b08b4e91d18"/></to>
    </wire>
    <wire loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b08b48a7720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b08b48a88d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b49348e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4af0438"/></to>
    </wire>
    <wire loc="93:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b4af0438"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4af43a0"/></to>
    </wire>
    <wire loc="94:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08b492b3b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08b56831a8"/></to>
    </wire>
    <wire loc="36:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08b56831a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08b56db3b8"/></to>
    </wire>
    <wire loc="37:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b08b56d5860"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08b567d670"/></to>
    </wire>
    <wire loc="41:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08b567d670"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08b56ccbc8"/></to>
    </wire>
    <wire loc="38:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08b56d8648"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08b4a55db0"/></to>
    </wire>
    <wire loc="33:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08b4a55db0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08b4a8c878"/></to>
    </wire>
    <wire loc="43:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b08b56c9c18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4940538"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b4940538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b49773a8"/></to>
    </wire>
    <wire loc="44:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b08b56c3c68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b08b4953e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b495e7d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b4972568"/></to>
    </wire>
    <wire loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b08b4939108"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b08b4971ca0"/></to>
    </wire>
    <wire loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08b4953e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b08b496c540"/></to>
    </wire>
    <wire loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08b4953e18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b08b49688e8"/></to>
    </wire>
    <wire loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08b4953e18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b08b4964b88"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b08b498b020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b4652220"/></to>
    </wire>
    <wire loc="27:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b4a108b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4940538"/></to>
    </wire>
    <wire loc="34:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b08b4aa2b10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08b4a4d318"/></to>
    </wire>
    <wire loc="31:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08b4a4d318"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08b4a67098"/></to>
    </wire>
    <wire loc="32:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b4a65168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08b4940538"/></to>
    </wire>
    <wire loc="101:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b08b4aeb7d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b08b41f84d0"/></to>
    </wire>
    <wire loc="102:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b08b4aea960"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b08b420bc78"/></to>
    </wire>
    <wire loc="99:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b08b4aed428"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b08b4203020"/></to>
    </wire>
    <wire loc="104:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b08b4ae8c58"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b08b4206c78"/></to>
    </wire>
    <wire loc="49:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b08b4b0a3c0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b08b4b08180"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b08b4b0fbe8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b08b4b259a0"/></to>
    </wire>
    <wire loc="50:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2b08b4b08d38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b08b4939108"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b08b4b24480"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b08b4b3c518"/></to>
    </wire>
    <wire loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2b08b4b3c518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b08b4b87970"/></to>
    </wire>
    <wire loc="60:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2b08b4baa020"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b08b4aed428"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b08b4b41518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b08b4b687a8"/></to>
    </wire>
    <wire loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2b08b4b3e518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b08b4b8fcd8"/></to>
    </wire>
    <wire loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2b08b4b3b518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b08b4b826a8"/></to>
    </wire>
    <wire loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b08b4b40518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b08b4b633e0"/></to>
    </wire>
    <wire loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2b08b4b3d518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b08b4b8b9d8"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b08b4b10560"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b08b4b4aa70"/></to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b08b4b3f518"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b08b4b5f020"/></to>
    </wire>
    <wire loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b6b908"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2b08b4b34208"/></to>
    </wire>
    <wire loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b665f8"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2b08b4b34940"/></to>
    </wire>
    <wire loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b622e8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2b08b4b360a8"/></to>
    </wire>
    <wire loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b5fde0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2b08b4b367e0"/></to>
    </wire>
    <wire loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b8eb10"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2b08b4b35020"/></to>
    </wire>
    <wire loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b8a908"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2b08b4b35758"/></to>
    </wire>
    <wire loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b86780"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2b08b4b32020"/></to>
    </wire>
    <wire loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b815f8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2b08b4b32758"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2b08b4ba88e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b08b4df8438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4e2e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b08b4e2c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4e227c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b08b4e247c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4df76b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4e257c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b08b4e29020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4dfbe78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4bd4020"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4bd4020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4bcc0c0"/></to>
    </wire>
    <wire loc="124:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4df5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b08b4df5638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b08b4df5d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4e24020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b4e31528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4e22020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b08b4e23020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b08b4e297c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b08b4e25020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b08b4e2b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4e21020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b08b4dfa7d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b08b4df2638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b4e304f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4e2e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4df43a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b08b4df2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4df6980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b4e287c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b08b4e237c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b4e28020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b08b4df70a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b08b4e2a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b08b4e2a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b08b4df49b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4e200a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bc91c8"/></to>
    </wire>
    <wire loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bc83d8"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bfd1c8"/></to>
    </wire>
    <wire loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b4bd5208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4bcb020"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bfc020"/></to>
    </wire>
    <wire loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b08b4bfa0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b08b4c3b100"/></to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b08b4c3b100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b08b4c39860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b08b4bfc740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4dcc020"/></to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b4dcc020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4d9f880"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b08b4bf7388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b08b4dccc18"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b08b4dccc18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b08b4c842f0"/></to>
    </wire>
    <wire loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4bf0860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4dcb2a8"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4dcb2a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4c83490"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08b4bfae50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08b4dc93c8"/></to>
    </wire>
    <wire loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b08b4bedb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/adrian/local/tinyos-2.1.1/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b08b4c39860"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b08b4c6a1c8"/></to>
    </wire>
    <wire loc="96:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4c83490"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4c79450"/></to>
    </wire>
    <wire loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b08b4c842f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b08b4c7a330"/></to>
    </wire>
    <wire loc="51:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b4dcd960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4c87b60"/></to>
    </wire>
    <wire loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b4c87b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4c7dd20"/></to>
    </wire>
    <wire loc="53:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2b08b4d9c700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4c821c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b08b4d9b4a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b08b41e47e0"/></to>
    </wire>
    <wire loc="95:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b08b4c7e8d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b08b4c7a938"/></to>
    </wire>
    <wire loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b4c821c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4c771c8"/></to>
    </wire>
    <wire loc="99:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b08b4c94888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4da8200"/></to>
    </wire>
    <wire loc="98:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b4da8200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b5787a28"/></to>
    </wire>
    <wire loc="100:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08b4c90d40"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08b4da7760"/></to>
    </wire>
    <wire loc="100:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08b4da7760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08b5784020"/></to>
    </wire>
    <wire loc="101:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b08b4c955a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b08b4cf3020"/></to>
    </wire>
    <wire loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b08b4cf3020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b08b4cf0dd0"/></to>
    </wire>
    <wire loc="102:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b08b4c92530"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b08b4199240"/></to>
    </wire>
    <wire loc="296:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b08b4caa830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b08b4ce3350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b08b4199240"/></to>
    </wire>
    <wire loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b08b4ce6c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b08b41e47e0"/></to>
    </wire>
    <wire loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b08b4ceade0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b08b41f1968"/></to>
    </wire>
    <wire loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b08b4ce5020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b08b41f0af0"/></to>
    </wire>
    <wire loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b08b4ce4190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b08b41efc78"/></to>
    </wire>
    <wire loc="99:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b08b4da7020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b08b5785820"/></to>
    </wire>
    <wire loc="101:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08b57848c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08b4da5020"/></to>
    </wire>
    <wire loc="103:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b08b57830a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b08b5789bf8"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b08b5783b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/adrian/local/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08b4dde020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08b4dc3670"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b08b4dc13b8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b08b4dc4b18"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b08b4dc4b18"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b08b41dde00"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b08b4dbf648"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b08b4de1ca8"/></to>
    </wire>
    <wire loc="57:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b08b4de1ca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b08b41dec78"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b08b4dbe7d0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b08b4de0e30"/></to>
    </wire>
    <wire loc="58:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b08b4de0e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b08b41d2ac0"/></to>
    </wire>
    <wire loc="139:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4e497c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b08b4e14cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4e4d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4e472e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b08b4e47a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4e3b2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b08b4e3e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4e12020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4e3f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b08b4e4c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4e4b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b08b4e44a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b08b4e462e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4e15740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4bd4020"/></to>
    </wire>
    <wire loc="124:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4e51900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b08b4e4f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b08b4e4f738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4e3fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b4e12c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b4e4b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4e4c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b08b4e146b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4e3ca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b08b4e3ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b08b4e422e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b08b4e40a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b08b4e452e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4e3ba88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b08b4e140a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b08b4e4d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b4e49020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b08b4e46a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b08b4e482e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b08b4e13368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4e48a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4e4fd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b08b4e4e9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b08b4e402e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b08b4e41a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4e512e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b4e412e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b08b4e3c2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b4e42a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b08b4e13980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b08b4e442e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b08b4e12638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b08b4e45a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b08b4e4e3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4e39020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4e67c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b08b4e713a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4e6bdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4e657c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b08b4e64020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4e597c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b08b4e5b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4e6f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4e5d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b08b4e69d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4e68cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b08b4e60020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b08b4e647c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4e33da0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4bd4020"/></to>
    </wire>
    <wire loc="124:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4e6d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b08b4e6d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b08b4e6dd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4e5b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b4e6e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b4e68528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4e695c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b08b4e32d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4e59020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b08b4e5a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b08b4e607c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b08b4e5d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b08b4e627c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4e58020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b08b4e32748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b08b4e6b638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b4e674f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b08b4e62020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b08b4e66838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b08b4e719b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4e65020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4e6c3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b08b4e6b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b08b4e5e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b08b4e5e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4e6e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b4e5f7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b08b4e5a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b4e5f020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b08b4e6f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b08b4e617c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b08b4e6fc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b08b4e61020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b08b4e6c9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4e570a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b08b4eafcc0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b08b4ecc8c0"/></to>
    </wire>
    <wire loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b08b4eae458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b08b4ecb060"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b08b4ecb9d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b08b49312a0"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b08b4ec08b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b08b4aed428"/></to>
    </wire>
    <wire loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b08b4ebfc98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b08b4aec638"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b08b4eb9e20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b08b4ae8c58"/></to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b08b4eb8d60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b08b4b0a3c0"/></to>
    </wire>
    <wire loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b08b4eb6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4f6e7d0"/></to>
    </wire>
    <wire loc="112:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b4f6e7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4bd5208"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4eb6cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4f6d430"/></to>
    </wire>
    <wire loc="111:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4f6d430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4bd4020"/></to>
    </wire>
    <wire loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b08b4ef5670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b08b4f6dd58"/></to>
    </wire>
    <wire loc="115:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b08b4f6dd58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b08b4ef5d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b08b4f6b638"/></to>
    </wire>
    <wire loc="119:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b08b4f6b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4ef4478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4f6bc50"/></to>
    </wire>
    <wire loc="120:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4f6bc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4ef4b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4f69638"/></to>
    </wire>
    <wire loc="124:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4f69638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4ef6da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4f63470"/></to>
    </wire>
    <wire loc="137:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4f63470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4eb5720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4f975f8"/></to>
    </wire>
    <wire loc="168:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4f975f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4ef6538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4f9dc10"/></to>
    </wire>
    <wire loc="158:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4f9dc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4ef33d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4f65c10"/></to>
    </wire>
    <wire loc="134:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4f65c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4ef1558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4f605f8"/></to>
    </wire>
    <wire loc="141:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4f605f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4ef1de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4f60d98"/></to>
    </wire>
    <wire loc="142:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4f60d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b08b4ef3e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b08b4f66020"/></to>
    </wire>
    <wire loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b08b4f66020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4eef6f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4f99470"/></to>
    </wire>
    <wire loc="163:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4f99470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b08b4ef0650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b08b4f9cc10"/></to>
    </wire>
    <wire loc="160:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b08b4f9cc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b08b4ef0e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b08b4f9b470"/></to>
    </wire>
    <wire loc="161:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b08b4f9b470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b08b4eea750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b08b4f8b868"/></to>
    </wire>
    <wire loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b08b4f8b868"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b08b4f85e48"/></to>
    </wire>
    <wire loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b4ec79a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50234b8"/></to>
    </wire>
    <wire loc="99:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b4ec67f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5020d08"/></to>
    </wire>
    <wire loc="100:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08b4ec5460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b08b501e130"/></to>
    </wire>
    <wire loc="101:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08b4eb81d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08b5017ac8"/></to>
    </wire>
    <wire loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08b5017ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08b5051ac8"/></to>
    </wire>
    <wire loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08b4eed0c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08b4dc93c8"/></to>
    </wire>
    <wire loc="139:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4f61470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b08b4f6c9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4f65470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b08b4f5f5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4f99c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b08b4f64470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b08b4f5c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b08b4f5fd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b08b4f69c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b08b4f673a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4f9c470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b4f6a900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b4f64c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b08b4f6c3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b08b4f5cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b08b4f9d470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b08b4f5ecc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4f98470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b08b4f66c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b4f63c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b08b4f5e528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b08b4f61e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b08b4f6b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4f679b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b08b4f66638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b08b4f9ec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b08b4f9e470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4f69020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b4f9fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b08b4f9bc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b4f9f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b08b4f5dc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b08b4f6a2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b08b4f5d4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b08b4f8aa48"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b08b4f83020"/></to>
    </wire>
    <wire loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08b4fb6ba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08b4dc93c8"/></to>
    </wire>
    <wire loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b08b4f836b8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b08b4aec638"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b08b4f82998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b08b4aeb7d0"/></to>
    </wire>
    <wire loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b08b4f81b28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b08b4aea960"/></to>
    </wire>
    <wire loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b08b4f80d40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b08b4b0fbe8"/></to>
    </wire>
    <wire loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b08b4f7e900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b50820e0"/></to>
    </wire>
    <wire loc="112:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08b50820e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08b4bd5208"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4fc36a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b08b50af020"/></to>
    </wire>
    <wire loc="167:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b08b50af020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4fc2c10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b507d900"/></to>
    </wire>
    <wire loc="123:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b507d900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b08b4fc2520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b08b507c638"/></to>
    </wire>
    <wire loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b08b507c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b4fc13a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50234b8"/></to>
    </wire>
    <wire loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b4fc0350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5020d08"/></to>
    </wire>
    <wire loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08b4fbed08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b08b501e130"/></to>
    </wire>
    <wire loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b08b4fc0cb8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b08b4868af8"/></to>
    </wire>
    <wire loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4fb9020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b50bc020"/></to>
    </wire>
    <wire loc="141:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b50bc020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4fb98a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b50bc7c0"/></to>
    </wire>
    <wire loc="142:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b50bc7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4fba8e0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b08b507a3a0"/></to>
    </wire>
    <wire loc="127:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b08b507a3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4fb7208"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b08b50b17c0"/></to>
    </wire>
    <wire loc="164:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b08b50b17c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b08b4fb8130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b08b50b37c0"/></to>
    </wire>
    <wire loc="160:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b08b50b37c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b08b4fb8960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b08b50b2020"/></to>
    </wire>
    <wire loc="161:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b08b50b2020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4fb7a70"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b50b3020"/></to>
    </wire>
    <wire loc="159:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b50b3020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b08b4fb6398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b08b5080678"/></to>
    </wire>
    <wire loc="115:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b08b5080678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b08b4fa9020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08b508e720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08b4a55db0"/></to>
    </wire>
    <wire loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b08b504f520"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b08b5090528"/></to>
    </wire>
    <wire loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b08b504e788"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b08b45b5108"/></to>
    </wire>
    <wire loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08b508a730"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45a6510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b5076c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b08b507f2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b5079dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b08b50bb020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b08b507e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b50b47c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b08b5078d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b08b5077cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b08b50b8020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b08b50bb7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b5082cd8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4bd4020"/></to>
    </wire>
    <wire loc="124:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b507c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b08b507cd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b507d2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b5077528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b50785c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b08b5080c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b08b50b1020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b08b50b87c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b08b50b4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b08b50ba7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b08b5079638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b50764f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b08b50ba020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b08b50bd838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b08b507f900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b08b5079020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b08b50b57c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b08b50b5020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b50b67c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b08b50b27c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b50b6020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b08b507e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b08b50b97c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b08b507ec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b08b50b9020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b08b507a9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b08b50ae0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08b50cbc78"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08b50cf020"/></to>
    </wire>
    <wire loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b08b50ca8c0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b08b50cdc58"/></to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b08b50cdc58"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b08b4c39860"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b08b50c9740"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b08b4587080"/></to>
    </wire>
    <wire loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b50c8020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5020d08"/></to>
    </wire>
    <wire loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b08b50fe168"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b08b50fa418"/></to>
    </wire>
    <wire loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08b50f9128"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08b50fe870"/></to>
    </wire>
    <wire loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b50f9768"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5020d08"/></to>
    </wire>
    <wire loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08b510da40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08b5117840"/></to>
    </wire>
    <wire loc="95:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08b51587f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08b51171f0"/></to>
    </wire>
    <wire loc="100:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b5158e08"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50234b8"/></to>
    </wire>
    <wire loc="101:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5157c40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5020d08"/></to>
    </wire>
    <wire loc="102:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b08b5156678"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b08b51a56b8"/></to>
    </wire>
    <wire loc="180:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b08b5177080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b08b5198020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b08b51946c8"/></to>
    </wire>
    <wire loc="74:/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b08b51946c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b08b4c39860"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b5182d98"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b47e4658"/></to>
    </wire>
    <wire loc="63:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08b58ae398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08b58a2530"/></to>
    </wire>
    <wire loc="64:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08b58ad020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08b478a5f8"/></to>
    </wire>
    <wire loc="65:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08b58adbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08b47892c0"/></to>
    </wire>
    <wire loc="67:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b08b52d0020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b08b58ab2a8"/></to>
    </wire>
    <wire loc="66:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b08b58ab2a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b4780290"/></to>
    </wire>
    <wire loc="60:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08b58a12c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b528f9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08b58a1e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08b47892c0"/></to>
    </wire>
    <wire loc="53:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08b528f9b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08b5296e40"/></to>
    </wire>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08b5295bd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08b478d208"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08b52e6888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08b47892c0"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08b52e4020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08b478a5f8"/></to>
    </wire>
    <wire loc="169:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b08b52e4c58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b08b52e3470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08b52c8928"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08b478a5f8"/></to>
    </wire>
    <wire loc="56:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08b52c6578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08b47892c0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/adrian/local/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="1:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/adrian/local/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/adrian/local/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Node" loc="26:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NodeC.pingTimeoutTimer" loc="44(NodeC.pingTimeoutTimer):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b08b45d7068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.neighborDiscovery" loc="44(NodeC.neighborDiscovery):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.neighborMap" loc="44(NodeC.neighborMap):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.helloProtocol" loc="44(NodeC.helloProtocol):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.waitTimer" loc="44(NodeC.waitTimer):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.sendDelay" loc="44(NodeC.sendDelay):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b08b416f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/adrian/local/tinyos-2.1.1/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/adrian/local/tinyos-2.1.1/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/adrian/local/tinyos-2.1.1/tos/system/StateImplC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/adrian/local/tinyos-2.1.1/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/adrian/local/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/adrian/local/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/adrian/local/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NodeC.AMSenderC" loc="47(NodeC.AMSenderC):/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.AMSenderC.SenderC" loc="47(NodeC.AMSenderC.SenderC):/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NodeC.AMSenderC.SenderC.AMQueueEntryP):/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.AMReceiverC" loc="43(NodeC.AMReceiverC):/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b08b4226ba8" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b08b4223020" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b08b4223368" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b08b4229610" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b08b4229978" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b08b4229ce0" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b08b4236060" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b08b42c7020" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b08b42c7388" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b08b42c76f0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b08b42c7a20" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b08b45d7068" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b08b45d7068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b08b45d7358" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b08b45ce730" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b08b45ce730"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b08b45cea20" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08b46bf300" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08b46bf300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08b46f76a8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08b46f76a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b08b46f79b8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08b4737730" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08b4737730"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b08b4a0f1f8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08b4a0f1f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b08b4a0f548" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b08b4a14a28" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b08b4a14a28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b08b4a2b1f8" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08b4a2b1f8"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b08b4a2b4f8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b08b4a79620" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b08b4a79620"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b08b4a79d70" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08b4a79d70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b08b4a4ed80" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b08b4a4ed80"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b08b4a8b528" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b08b4a8b528"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b08b4a8b8f0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b08b4a8b8f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b08b4a8a0a8" loc="58:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b08b4a8a0a8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b08b4a8a450" loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b08b4a8abe0" loc="60:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b08b4a8abe0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b08b4a9dc10" loc="52:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b08b4a9dc10"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b08b4a9a3c0" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b08b4a9a3c0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b08b4a9a788" loc="54:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b08b4a9a788"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b08b4a99020" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b08b4a99020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b08b4a993c8" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2b08b4b387e8" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2b08b4b38b50" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2b08b4b49020" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b08b4b49350" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b08b4d4d578" loc="83:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/adrian/local/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b08b4d41510" loc="42:/home/adrian/local/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b08b52607f8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b08b5256348" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b08b5252e30" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b08b528ada8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b08b52cc020" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b08b41bbe48" loc="58:/home/adrian/local/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b41bbe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41ba1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b08b41b99c0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b08b41b99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b08b41b9d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b08b41c49a0" loc="52:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b08b41c49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41c4cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b41badb8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b41badb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41c5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b08b41cec88" loc="50:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08b41cec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b08b41c4020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b08b41c41a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b08b41c4330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b08b41c44b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b08b41c4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b08b41cab90" loc="45:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b08b41cab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b41ca4f0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b41ca4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41ca840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b08b41c9398" loc="46:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b08b41c9398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41c96e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b08b41d3108" loc="41:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b08b41d3108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41d3458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b08b41cca18" loc="40:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b08b41cca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41ccd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b08b41dc808" loc="45:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b08b41dc808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41dcb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b08b41d7690" loc="44:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b08b41d7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41d79e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41d7b68"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41d7cf0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41d7e78"/>
        <function-ref name="get" scoped="" ref="0x2b08b41dc030"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41dc1b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41dc340"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41dc4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b08b41d0460" loc="43:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b08b41d0460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b41d07b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b08b421fc78" loc="100:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b08b421fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b421e5e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b421e770"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b421e8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b421ea80"/>
        <function-ref name="get" scoped="" ref="0x2b08b421ec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b421ed90"/>
        <function-ref name="set" scoped="" ref="0x2b08b421d020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b421d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b08b41fa7e0" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b08b41fa7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41fab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41facb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41fae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41f9020"/>
        <function-ref name="get" scoped="" ref="0x2b08b41f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41f9330"/>
        <function-ref name="set" scoped="" ref="0x2b08b41f94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b08b420e7e0" loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b08b420e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b420eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b420ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b420ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b420d020"/>
        <function-ref name="get" scoped="" ref="0x2b08b420d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b420d330"/>
        <function-ref name="set" scoped="" ref="0x2b08b420d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b420d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b08b42144d0" loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b08b42144d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4214820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42149a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4214b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4214cb8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4214e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4213020"/>
        <function-ref name="set" scoped="" ref="0x2b08b42131a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4213330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b08b41e64d0" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b08b41e64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41e6820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41e69a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41e6b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41e6cb8"/>
        <function-ref name="get" scoped="" ref="0x2b08b41e6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41e5020"/>
        <function-ref name="set" scoped="" ref="0x2b08b41e51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41e5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b08b42161a0" loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b08b42161a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42164f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4216678"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4216800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4216988"/>
        <function-ref name="get" scoped="" ref="0x2b08b4216b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4216c98"/>
        <function-ref name="set" scoped="" ref="0x2b08b4216e20"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4215020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b08b41e47e0" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b08b41e47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41e4b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41e4cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41e4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41f1020"/>
        <function-ref name="get" scoped="" ref="0x2b08b41f11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41f1330"/>
        <function-ref name="set" scoped="" ref="0x2b08b41f14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41f1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b08b41f5968" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b08b41f5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41f5cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41f5e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41f31a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b41f3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41f34b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41f3640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41f37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b08b4206c78" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b08b4206c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4205020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42051a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4205330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42054b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4205640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42057c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4205950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4205ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b08b420bc78" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b08b420bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b420a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b420a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b420a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b420a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b420a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b420a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b420a950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b420aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b08b41dec78" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b08b41dec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41dd020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41dd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41dd330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41dd4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b41dd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41dd7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41dd950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41ddad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b08b41efc78" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b08b41efc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41ee020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41ee1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41ee330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41ee4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b41ee640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41ee7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41ee950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41eead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b08b41ffe00" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b08b41ffe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41fe1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41fe330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41fe4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41fe640"/>
        <function-ref name="get" scoped="" ref="0x2b08b41fe7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41fe950"/>
        <function-ref name="set" scoped="" ref="0x2b08b41fead8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41fec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b08b42021a0" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b08b42021a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42024f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4202678"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4202800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4202988"/>
        <function-ref name="get" scoped="" ref="0x2b08b4202b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4202c98"/>
        <function-ref name="set" scoped="" ref="0x2b08b4202e20"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4201020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b08b4211968" loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b08b4211968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4211cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4211e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4210020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42101a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4210330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42104b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4210640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42107c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b08b421b7e0" loc="103:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b08b421b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b421bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b421bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b421be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b421a020"/>
        <function-ref name="get" scoped="" ref="0x2b08b421a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b421a330"/>
        <function-ref name="set" scoped="" ref="0x2b08b421a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b421a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b08b42004d0" loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b08b42004d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4200820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42009a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4200b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4200cb8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4200e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b420f020"/>
        <function-ref name="set" scoped="" ref="0x2b08b420f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b420f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b08b41e81a0" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b08b41e81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41e84f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41e8678"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41e8800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41e8988"/>
        <function-ref name="get" scoped="" ref="0x2b08b41e8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41e8c98"/>
        <function-ref name="set" scoped="" ref="0x2b08b41e8e20"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b08b41eb348" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b08b41eb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41eb698"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41eb820"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41eb9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41ebb30"/>
        <function-ref name="get" scoped="" ref="0x2b08b41ebcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41ebe40"/>
        <function-ref name="set" scoped="" ref="0x2b08b41f8020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b08b421d4d0" loc="101:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b08b421d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b421d820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b421d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b421db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b421dcb8"/>
        <function-ref name="get" scoped="" ref="0x2b08b421de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b421c020"/>
        <function-ref name="set" scoped="" ref="0x2b08b421c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b421c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b08b41f7658" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b08b41f7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41f79a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41f7b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41f7cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41f7e40"/>
        <function-ref name="get" scoped="" ref="0x2b08b41f6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41f61a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41f6330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b08b41f9968" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b08b41f9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41f9cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41f9e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4207020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42071a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4207330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42074b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4207640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b08b420d968" loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b08b420d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b420dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b420de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b420c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b420c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b420c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b420c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b420c640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b420c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b08b4213658" loc="95:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b08b4213658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42139a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4213b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4213cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4213e40"/>
        <function-ref name="get" scoped="" ref="0x2b08b4212020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42121a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4212330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42124b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b08b41e5658" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b08b41e5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41e59a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41e5b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41e5cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41e5e40"/>
        <function-ref name="get" scoped="" ref="0x2b08b41e4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41e41a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41e4330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41e44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b08b41f1968" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b08b41f1968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41f1cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41f1e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41f0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41f01a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b41f0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41f04b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41f0640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41f07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b08b41f3af0" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b08b41f3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41f3e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41f2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41f21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41f2330"/>
        <function-ref name="get" scoped="" ref="0x2b08b41f24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41f2640"/>
        <function-ref name="set" scoped="" ref="0x2b08b41f27c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41f2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b08b4205e00" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b08b4205e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42041a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4204330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42044b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4204640"/>
        <function-ref name="get" scoped="" ref="0x2b08b42047c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4204950"/>
        <function-ref name="set" scoped="" ref="0x2b08b4204ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4204c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b08b420ae00" loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b08b420ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42091a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4209330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42094b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4209640"/>
        <function-ref name="get" scoped="" ref="0x2b08b42097c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4209950"/>
        <function-ref name="set" scoped="" ref="0x2b08b4209ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4209c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b08b41dde00" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b08b41dde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41ea1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41ea330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41ea4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41ea640"/>
        <function-ref name="get" scoped="" ref="0x2b08b41ea7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41ea950"/>
        <function-ref name="set" scoped="" ref="0x2b08b41eaad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41eac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b08b41eee00" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b08b41eee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41ed2e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41ed470"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41ed5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41ed780"/>
        <function-ref name="get" scoped="" ref="0x2b08b41ed908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41eda90"/>
        <function-ref name="set" scoped="" ref="0x2b08b41edc18"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41edda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b08b41fd020" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b08b41fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41fd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41fd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41fd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41fd808"/>
        <function-ref name="get" scoped="" ref="0x2b08b41fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41fdb18"/>
        <function-ref name="set" scoped="" ref="0x2b08b41fdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41fde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b08b4210af0" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b08b4210af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4210e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b421f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b421f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b421f330"/>
        <function-ref name="get" scoped="" ref="0x2b08b421f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b421f640"/>
        <function-ref name="set" scoped="" ref="0x2b08b421f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b421f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b08b41fb348" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b08b41fb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41fb898"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41fba20"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41fbba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41fbd30"/>
        <function-ref name="get" scoped="" ref="0x2b08b41fa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41fa1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41fa330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41fa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b08b420f658" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b08b420f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b420f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b420fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b420fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b420fe40"/>
        <function-ref name="get" scoped="" ref="0x2b08b420e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b420e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b420e330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b420e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b08b4215348" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b08b4215348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4215698"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4215820"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42159a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4215b30"/>
        <function-ref name="get" scoped="" ref="0x2b08b4215cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4215e40"/>
        <function-ref name="set" scoped="" ref="0x2b08b4214020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b08b421a968" loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b08b421a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b421acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b421ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4219020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42191a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4219330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42194b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4219640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42197c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b08b41e7348" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b08b41e7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41e7698"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41e7820"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41e79a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41e7b30"/>
        <function-ref name="get" scoped="" ref="0x2b08b41e7cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41e7e40"/>
        <function-ref name="set" scoped="" ref="0x2b08b41e6020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b08b41f84d0" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b08b41f84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41f8820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41f89a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41f8b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41f8cb8"/>
        <function-ref name="get" scoped="" ref="0x2b08b41f8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41f7020"/>
        <function-ref name="set" scoped="" ref="0x2b08b41f71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41f7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b08b4208020" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b08b4208020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4208370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42084f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4208680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4208808"/>
        <function-ref name="get" scoped="" ref="0x2b08b4208990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4208b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b4208ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4208e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b08b41f67e0" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b08b41f67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41f6b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41f6cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41f6e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41f5020"/>
        <function-ref name="get" scoped="" ref="0x2b08b41f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41f5330"/>
        <function-ref name="set" scoped="" ref="0x2b08b41f54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b08b4207af0" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b08b4207af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4207e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4206020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42061a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4206330"/>
        <function-ref name="get" scoped="" ref="0x2b08b42064b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4206640"/>
        <function-ref name="set" scoped="" ref="0x2b08b42067c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4206950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b08b420caf0" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b08b420caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b420ce40"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b420b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b420b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b420b330"/>
        <function-ref name="get" scoped="" ref="0x2b08b420b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b420b640"/>
        <function-ref name="set" scoped="" ref="0x2b08b420b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b420b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b08b42127e0" loc="96:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b08b42127e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4212b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4212cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4212e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4211020"/>
        <function-ref name="get" scoped="" ref="0x2b08b42111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4211330"/>
        <function-ref name="set" scoped="" ref="0x2b08b42114b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4211640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b08b41d2ac0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b08b41d2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41d2e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41de020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41de1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41de330"/>
        <function-ref name="get" scoped="" ref="0x2b08b41de4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41de640"/>
        <function-ref name="set" scoped="" ref="0x2b08b41de7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41de950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b08b41f0af0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b08b41f0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41f0e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41ef020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41ef1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41ef330"/>
        <function-ref name="get" scoped="" ref="0x2b08b41ef4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41ef640"/>
        <function-ref name="set" scoped="" ref="0x2b08b41ef7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41ef950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b08b41f2c78" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b08b41f2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41ff020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41ff1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41ff330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41ff4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b41ff640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41ff7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41ff950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41ffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b08b4203020" loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b08b4203020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4203370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42034f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4203680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4203808"/>
        <function-ref name="get" scoped="" ref="0x2b08b4203990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4203b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b4203ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4203e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b08b421c658" loc="102:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b08b421c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b421c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b421cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b421ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b421ce40"/>
        <function-ref name="get" scoped="" ref="0x2b08b421b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b421b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b421b330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b421b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b08b4201348" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b08b4201348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4201698"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4201820"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42019a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4201b30"/>
        <function-ref name="get" scoped="" ref="0x2b08b4201cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4201e40"/>
        <function-ref name="set" scoped="" ref="0x2b08b4200020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42001a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b08b41fc1a0" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b08b41fc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41fc4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41fc678"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41fc800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41fc988"/>
        <function-ref name="get" scoped="" ref="0x2b08b41fcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41fcc98"/>
        <function-ref name="set" scoped="" ref="0x2b08b41fce20"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b08b41e9020" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b08b41e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41e9370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41e94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41e9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41e9808"/>
        <function-ref name="get" scoped="" ref="0x2b08b41e9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41e9b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b41e9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41e9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b08b41ec100" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b08b41ec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b41ec450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b41ec5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b41ec760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b41ec8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b41eca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b41ecbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b41ecd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b41eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08b4260120" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08b4260120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4260470"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42605f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4260780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4260908"/>
        <function-ref name="get" scoped="" ref="0x2b08b4260a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4260c18"/>
        <function-ref name="set" scoped="" ref="0x2b08b4260da0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b426f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08b426d5b8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08b426d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b426d908"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b426da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b426dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b426dda0"/>
        <function-ref name="get" scoped="" ref="0x2b08b426c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b426c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b426c330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b426c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08b4263dc0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08b4263dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4262170"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42622f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4262480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4262608"/>
        <function-ref name="get" scoped="" ref="0x2b08b4262790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4262918"/>
        <function-ref name="set" scoped="" ref="0x2b08b4262aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4262c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08b426f2a8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08b426f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b426f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b426f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b426f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b426fa90"/>
        <function-ref name="get" scoped="" ref="0x2b08b426fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b426fda0"/>
        <function-ref name="set" scoped="" ref="0x2b08b426e020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b426e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08b426c740" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08b426c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b426ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b426cc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b426cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b426b020"/>
        <function-ref name="get" scoped="" ref="0x2b08b426b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b426b330"/>
        <function-ref name="set" scoped="" ref="0x2b08b426b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b426b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08b4261020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08b4261020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4261370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42614f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4261680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4261808"/>
        <function-ref name="get" scoped="" ref="0x2b08b4261990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4261b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b4261ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4261e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08b426e430" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08b426e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b426e780"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b426e908"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b426ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b426ec18"/>
        <function-ref name="get" scoped="" ref="0x2b08b426eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b426d020"/>
        <function-ref name="set" scoped="" ref="0x2b08b426d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b426d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08b426b8c8" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08b426b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b426bc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b426bda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b426a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b426a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b426a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b426a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b426a640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b426a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b533d020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b533d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b533d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b533d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b533d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b533d808"/>
        <function-ref name="get" scoped="" ref="0x2b08b533d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b533db18"/>
        <function-ref name="set" scoped="" ref="0x2b08b533dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b533de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b533a020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b533a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b533a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b533a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b533a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b533a808"/>
        <function-ref name="get" scoped="" ref="0x2b08b533a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b533ab18"/>
        <function-ref name="set" scoped="" ref="0x2b08b533aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b533ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5336020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5336020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5336370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b53364f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5336680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b5336808"/>
        <function-ref name="get" scoped="" ref="0x2b08b5336990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5336b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b5336ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5336e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5333020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5333020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5333370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b53334f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5333680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b5333808"/>
        <function-ref name="get" scoped="" ref="0x2b08b5333990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5333b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b5333ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5333e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5330020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5330020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5330370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b53304f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5330680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b5330808"/>
        <function-ref name="get" scoped="" ref="0x2b08b5330990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5330b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b5330ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5330e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b532d020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b532d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b532d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b532d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b532d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b532d808"/>
        <function-ref name="get" scoped="" ref="0x2b08b532d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b532db18"/>
        <function-ref name="set" scoped="" ref="0x2b08b532dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b532de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b532a020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b532a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b532a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b532a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b532a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b532a808"/>
        <function-ref name="get" scoped="" ref="0x2b08b532a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b532ab18"/>
        <function-ref name="set" scoped="" ref="0x2b08b532aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b532ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5327020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5327020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5327370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b53274f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5327680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b5327808"/>
        <function-ref name="get" scoped="" ref="0x2b08b5327990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5327b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b5327ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5327e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08b4272bd8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08b4272bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4271020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42711a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4271330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42714b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4271640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42717c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4271950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4271ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08b427e020" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08b427e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b427e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b427e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b427e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b427e808"/>
        <function-ref name="get" scoped="" ref="0x2b08b427e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b427eb18"/>
        <function-ref name="set" scoped="" ref="0x2b08b427eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b427ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08b4274930" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08b4274930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4274c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4274e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4273020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42731a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4273330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42734b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4273640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42737c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08b4271d60" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08b4271d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42700d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4270260"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42703e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4270570"/>
        <function-ref name="get" scoped="" ref="0x2b08b42706f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4270880"/>
        <function-ref name="set" scoped="" ref="0x2b08b4270a08"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4270b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08b427c120" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08b427c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b427c470"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b427c5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b427c780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b427c908"/>
        <function-ref name="get" scoped="" ref="0x2b08b427ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b427cc18"/>
        <function-ref name="set" scoped="" ref="0x2b08b427cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b427b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08b4273a50" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08b4273a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4273da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4272020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42721a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4272330"/>
        <function-ref name="get" scoped="" ref="0x2b08b42724b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4272640"/>
        <function-ref name="set" scoped="" ref="0x2b08b42727c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4272950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08b4270e18" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08b4270e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b427f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b427f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b427f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b427f640"/>
        <function-ref name="get" scoped="" ref="0x2b08b427f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b427f950"/>
        <function-ref name="set" scoped="" ref="0x2b08b427fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b427fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08b427b2a8" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08b427b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b427b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b427b780"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b427b908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b427ba90"/>
        <function-ref name="get" scoped="" ref="0x2b08b427bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b427bda0"/>
        <function-ref name="set" scoped="" ref="0x2b08b427a020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b427a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b537e180" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b537e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b537e4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b537e658"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b537e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b537e968"/>
        <function-ref name="get" scoped="" ref="0x2b08b537eaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b537ec78"/>
        <function-ref name="set" scoped="" ref="0x2b08b537ee00"/>
        <function-ref name="clr" scoped="" ref="0x2b08b537d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b537b100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b537b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b537b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b537b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b537b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b537b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b537ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b537bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b537bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b537a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5378100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5378100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5378450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b53785d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5378760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b53788e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5378a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5378bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5378d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5376020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5374100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5374100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5374450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b53745d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5374760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b53748e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5374a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5374bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5374d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5373020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5371100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5371100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5371450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b53715d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5371760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b53718e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5371a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5371bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5371d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5370020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b536e100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b536e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b536e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b536e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b536e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b536e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b536ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b536ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b536ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b53c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b53c0100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b53c0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b53c0450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b53c05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b53c0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b53c08e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b53c0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b53c0bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b53c0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b53bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b53bd100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b53bd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b53bd450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b53bd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b53bd760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b53bd8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b53bda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b53bdbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b53bdd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b53bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08b4284740" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08b4284740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4284a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4284c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4284da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4282020"/>
        <function-ref name="get" scoped="" ref="0x2b08b42821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4282330"/>
        <function-ref name="set" scoped="" ref="0x2b08b42824b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4282640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08b4280bd8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08b4280bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4291020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42911a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4291330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42914b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4291640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42917c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4291950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4291ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08b4286500" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08b4286500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4286850"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42869d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4286b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4286ce8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4286e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4285020"/>
        <function-ref name="set" scoped="" ref="0x2b08b42851a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4285330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08b42828c8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08b42828c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4282c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4282da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4281020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42811a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4281330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42814b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4281640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42817c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08b4291d60" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08b4291d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42900d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4290260"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42903e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4290570"/>
        <function-ref name="get" scoped="" ref="0x2b08b42906f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4290880"/>
        <function-ref name="set" scoped="" ref="0x2b08b4290a08"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4290b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08b42855b8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08b42855b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4285908"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4285a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4285c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4285da0"/>
        <function-ref name="get" scoped="" ref="0x2b08b4284020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42841a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4284330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42844b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08b4281a50" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08b4281a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4281da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4280020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42801a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4280330"/>
        <function-ref name="get" scoped="" ref="0x2b08b42804b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4280640"/>
        <function-ref name="set" scoped="" ref="0x2b08b42807c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4280950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08b4290e18" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08b4290e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b428f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b428f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b428f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b428f640"/>
        <function-ref name="get" scoped="" ref="0x2b08b428f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b428f950"/>
        <function-ref name="set" scoped="" ref="0x2b08b428fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b428fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5418180" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5418180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54184d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b5418658"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54187e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b5418968"/>
        <function-ref name="get" scoped="" ref="0x2b08b5418af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5418c78"/>
        <function-ref name="set" scoped="" ref="0x2b08b5418e00"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5417020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5415100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5415100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5415450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54155d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5415760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54158e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5415a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5415bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5415d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5414020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5412100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5412100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5412450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54125d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5412760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54128e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5412a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5412bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5412d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5410020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b540e100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b540e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b540e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b540e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b540e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b540e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b540ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b540ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b540ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b540d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b540b100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b540b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b540b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b540b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b540b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b540b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b540ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b540bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b540bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b540a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5408100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5408100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5408450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54085d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5408760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54088e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5408a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5408bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5408d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5407020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5405100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5405100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5405450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54055d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5405760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54058e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5405a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5405bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5405d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5404020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5402100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5402100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5402450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54025d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5402760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54028e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5402a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5402bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5402d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5401020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08b4298120" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08b4298120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4298470"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42985f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4298780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4298908"/>
        <function-ref name="get" scoped="" ref="0x2b08b4298a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4298c18"/>
        <function-ref name="set" scoped="" ref="0x2b08b4298da0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4297020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08b42955b8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08b42955b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4295908"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4295a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4295c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4295da0"/>
        <function-ref name="get" scoped="" ref="0x2b08b4294020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42941a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4294330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42944b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08b4289e40" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08b4289e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b429a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b429a348"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b429a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b429a658"/>
        <function-ref name="get" scoped="" ref="0x2b08b429a7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b429a968"/>
        <function-ref name="set" scoped="" ref="0x2b08b429aaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b429ac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08b42972a8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08b42972a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42975f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4297780"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4297908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4297a90"/>
        <function-ref name="get" scoped="" ref="0x2b08b4297c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4297da0"/>
        <function-ref name="set" scoped="" ref="0x2b08b4296020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08b4294740" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08b4294740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4294a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4294c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4294da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4293020"/>
        <function-ref name="get" scoped="" ref="0x2b08b42931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4293330"/>
        <function-ref name="set" scoped="" ref="0x2b08b42934b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4293640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08b4299020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08b4299020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4299370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42994f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4299680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4299808"/>
        <function-ref name="get" scoped="" ref="0x2b08b4299990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4299b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b4299ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4299e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08b4296430" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08b4296430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4296780"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4296908"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4296a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4296c18"/>
        <function-ref name="get" scoped="" ref="0x2b08b4296da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4295020"/>
        <function-ref name="set" scoped="" ref="0x2b08b42951a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4295330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08b42938c8" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08b42938c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4293c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4293da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4292020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42921a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4292330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42924b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4292640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42927c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5460180" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5460180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54604d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b5460658"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54607e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b5460968"/>
        <function-ref name="get" scoped="" ref="0x2b08b5460af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5460c78"/>
        <function-ref name="set" scoped="" ref="0x2b08b5460e00"/>
        <function-ref name="clr" scoped="" ref="0x2b08b545f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b545d100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b545d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b545d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b545d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b545d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b545d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b545da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b545dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b545dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b545c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b545a100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b545a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b545a450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b545a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b545a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b545a8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b545aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b545abf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b545ad80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5459020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5457100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5457100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5457450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54575d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5457760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54578e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5457a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5457bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5457d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5455020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5453100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5453100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5453450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54535d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5453760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54538e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5453a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5453bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5453d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5452020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5450100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5450100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5450450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54505d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5450760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54508e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5450a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5450bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5450d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b544f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b544d100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b544d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b544d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b544d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b544d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b544d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b544da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b544dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b544dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b544c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b544a100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b544a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b544a450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b544a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b544a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b544a8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b544aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b544abf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b544ad80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5449020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08b429cbd8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08b429cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b429b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b429b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b429b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b429b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b429b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b429b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b429b950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b429bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08b42aa020" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08b42aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42aa370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42aa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42aa680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42aa808"/>
        <function-ref name="get" scoped="" ref="0x2b08b42aa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42aab18"/>
        <function-ref name="set" scoped="" ref="0x2b08b42aaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42aae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08b429e930" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08b429e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b429ec80"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b429ee08"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b429d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b429d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b429d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b429d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b429d640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b429d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08b429bd60" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08b429bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42ac0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42ac260"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42ac3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42ac570"/>
        <function-ref name="get" scoped="" ref="0x2b08b42ac6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42ac880"/>
        <function-ref name="set" scoped="" ref="0x2b08b42aca08"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42acb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08b42a9120" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08b42a9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42a9470"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42a95f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42a9780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42a9908"/>
        <function-ref name="get" scoped="" ref="0x2b08b42a9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42a9c18"/>
        <function-ref name="set" scoped="" ref="0x2b08b42a9da0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08b429da50" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08b429da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b429dda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b429c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b429c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b429c330"/>
        <function-ref name="get" scoped="" ref="0x2b08b429c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b429c640"/>
        <function-ref name="set" scoped="" ref="0x2b08b429c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b429c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08b42ace18" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08b42ace18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42ab1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42ab330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42ab4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42ab640"/>
        <function-ref name="get" scoped="" ref="0x2b08b42ab7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42ab950"/>
        <function-ref name="set" scoped="" ref="0x2b08b42abad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42abc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08b42a82a8" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08b42a82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42a85f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42a8780"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42a8908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42a8a90"/>
        <function-ref name="get" scoped="" ref="0x2b08b42a8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42a8da0"/>
        <function-ref name="set" scoped="" ref="0x2b08b42a7020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b54aa180" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b54aa180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54aa4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54aa658"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54aa7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54aa968"/>
        <function-ref name="get" scoped="" ref="0x2b08b54aaaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b54aac78"/>
        <function-ref name="set" scoped="" ref="0x2b08b54aae00"/>
        <function-ref name="clr" scoped="" ref="0x2b08b54a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b54a7100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b54a7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54a7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54a75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54a7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54a78e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b54a7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b54a7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b54a7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b54a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b54a4100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b54a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54a4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54a45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54a4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54a48e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b54a4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b54a4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b54a4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b54a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b54a1100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b54a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54a1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54a15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54a1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54a18e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b54a1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b54a1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b54a1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b549f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b549d100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b549d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b549d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b549d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b549d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b549d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b549da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b549dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b549dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b54f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b54f4100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b54f4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54f4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54f45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54f4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54f48e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b54f4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b54f4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b54f4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b54f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b54f1100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b54f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54f1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54f15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54f1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54f18e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b54f1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b54f1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b54f1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b54f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b54ee100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b54ee100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54ee450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54ee5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54ee760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54ee8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b54eea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b54eebf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b54eed80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b54ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08b42b1430" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08b42b1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42b1780"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42b1908"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42b1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42b1c18"/>
        <function-ref name="get" scoped="" ref="0x2b08b42b1da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42b0020"/>
        <function-ref name="set" scoped="" ref="0x2b08b42b01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08b42ae8c8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08b42ae8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42aec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42aeda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42be020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42be1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b42be330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42be4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b42be640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42be7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08b42b31e8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08b42b31e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42b3538"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42b36c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42b3848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42b39d0"/>
        <function-ref name="get" scoped="" ref="0x2b08b42b3b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42b3ce0"/>
        <function-ref name="set" scoped="" ref="0x2b08b42b3e68"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08b42b05b8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08b42b05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42b0908"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42b0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42b0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42b0da0"/>
        <function-ref name="get" scoped="" ref="0x2b08b42af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42af1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b42af330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08b42bea50" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08b42bea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42beda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42bd020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42bd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42bd330"/>
        <function-ref name="get" scoped="" ref="0x2b08b42bd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42bd640"/>
        <function-ref name="set" scoped="" ref="0x2b08b42bd7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42bd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08b42b22a8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08b42b22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42b25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42b2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42b2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42b2a90"/>
        <function-ref name="get" scoped="" ref="0x2b08b42b2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42b2da0"/>
        <function-ref name="set" scoped="" ref="0x2b08b42b1020"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08b42af740" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08b42af740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42afa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42afc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42afda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42ae020"/>
        <function-ref name="get" scoped="" ref="0x2b08b42ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42ae330"/>
        <function-ref name="set" scoped="" ref="0x2b08b42ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08b42bdbd8" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08b42bdbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42bc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42bc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42bc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42bc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b42bc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42bc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b42bc950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42bcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b54f7180" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b54f7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b54f74d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b54f7658"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b54f77e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b54f7968"/>
        <function-ref name="get" scoped="" ref="0x2b08b54f7af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b54f7c78"/>
        <function-ref name="set" scoped="" ref="0x2b08b54f7e00"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5551020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b554f100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b554f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b554f450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b554f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b554f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b554f8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b554fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b554fbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b554fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b554e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b554c100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b554c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b554c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b554c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b554c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b554c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b554ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b554cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b554cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b554b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5549100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5549100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5549450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b55495d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5549760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b55498e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5549a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5549bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5549d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5548020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5546100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5546100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5546450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b55465d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5546760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b55468e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5546a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5546bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5546d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5544020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b5542100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b5542100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b5542450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b55425d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b5542760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b55428e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b5542a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b5542bf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5542d80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b5541020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b553f100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b553f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b553f450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b553f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b553f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b553f8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b553fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b553fbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b553fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b553e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b553c100" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b553c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b553c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b553c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b553c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b553c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b08b553ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b553cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b08b553cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b08b553b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b42b6ac0" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b42b6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42b6e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42d6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42d61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42d6330"/>
        <function-ref name="get" scoped="" ref="0x2b08b42d64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42d6640"/>
        <function-ref name="set" scoped="" ref="0x2b08b42d67c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42d6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b42d2db8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b42d2db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42d1170"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42d12f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42d1480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42d1608"/>
        <function-ref name="get" scoped="" ref="0x2b08b42d1790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42d1918"/>
        <function-ref name="set" scoped="" ref="0x2b08b42d1aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42d1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b42df3e0" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b42df3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42df730"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42df8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42dfa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42dfbc8"/>
        <function-ref name="get" scoped="" ref="0x2b08b42dfd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42de020"/>
        <function-ref name="set" scoped="" ref="0x2b08b42de1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42de330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b42da7e8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b42da7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42dab38"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42dacc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42dae48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42eb020"/>
        <function-ref name="get" scoped="" ref="0x2b08b42eb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42eb330"/>
        <function-ref name="set" scoped="" ref="0x2b08b42eb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42eb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b42e7c38" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b42e7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42e6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42e61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42e6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42e64b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b42e6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42e67c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b42e6950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42e6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b42f4020" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b42f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42f4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42f44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42f4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42f4808"/>
        <function-ref name="get" scoped="" ref="0x2b08b42f4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42f4b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b42f4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42f4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b42ef480" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b42ef480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42ef7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42ef958"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42efae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42efc68"/>
        <function-ref name="get" scoped="" ref="0x2b08b42efdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42ee020"/>
        <function-ref name="set" scoped="" ref="0x2b08b42ee1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42ee330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b42fc7e8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b42fc7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42fcb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42fccc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42fce48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42fb020"/>
        <function-ref name="get" scoped="" ref="0x2b08b42fb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42fb330"/>
        <function-ref name="set" scoped="" ref="0x2b08b42fb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42fb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b42f8970" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b42f8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b42f8cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b42f8e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b42f7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b42f71a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b42f7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b42f74b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b42f7640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b42f77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b4306ab0" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b4306ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4306e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4305020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b43051a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4305330"/>
        <function-ref name="get" scoped="" ref="0x2b08b43054b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4305640"/>
        <function-ref name="set" scoped="" ref="0x2b08b43057c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4305950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b4302c38" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b4302c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4300020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b43001a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4300330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b43004b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4300640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b43007c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4300950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4300ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b4310020" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b4310020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4310370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b43104f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4310680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4310808"/>
        <function-ref name="get" scoped="" ref="0x2b08b4310990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4310b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b4310ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4310e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08b430b180" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08b430b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b430b4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b430b658"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b430b7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b430b968"/>
        <function-ref name="get" scoped="" ref="0x2b08b430baf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b430bc78"/>
        <function-ref name="set" scoped="" ref="0x2b08b430be00"/>
        <function-ref name="clr" scoped="" ref="0x2b08b430a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b434a1b8" loc="27:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b434a1b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b08b40b46f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b08b40b46f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b434a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b08b434a7e8" loc="28:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08b434a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b08b434ab38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b08b434acc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b08b434ae48"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b08b4349020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b08b43491a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b08b4365560" loc="60:/home/adrian/local/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b08b4365560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b43658b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b08b41c6e28" loc="57:/home/adrian/local/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b08b41c6e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b08b43661a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b08b4366e68" loc="59:/home/adrian/local/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b08b4366e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b43651e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b08b4366490" loc="58:/home/adrian/local/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b08b4366490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b43667e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b08b4366968"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b08b4366af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b08b40bc728" loc="48:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b08b40bc728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b40bca78"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b40bcc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b08b40bbbe8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b08b40bbbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b40b3020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b08b40b31a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b08b40b3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b08b4177b08" loc="56:/home/adrian/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b08b4177b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b4177e58"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b4175020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b08b4174020" loc="57:/home/adrian/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b08b4174020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b08b4174370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b08b4178c00" loc="55:/home/adrian/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b08b4178c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4177020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b08b41771a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b08b4177330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b08b41977f0" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b08b41977f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b08b4197b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b08b40c5dd8" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b08b40c5dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b08b418e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b08b4199240" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b08b4199240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b08b4199590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="waitTimer" ref="0x2b08b449a658" loc="31:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="waitTimer" scoped="" ref="0x2b08b449a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b44968f0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4497020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b4497d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b44978c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b44951c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b4496d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b4497470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b44991e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b4496320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b4499688"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4499b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b08b44c76d0" loc="39:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2b08b44c76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08b44c7a20"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08b44c7ba8"/>
        <function-ref name="start" scoped="" ref="0x2b08b44c7d30"/>
        <function-ref name="stop" scoped="" ref="0x2b08b44ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b08b4480318" loc="27:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b08b4480318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b08b4480668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b08b44b14c0" loc="36:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08b44b14c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b44b1810"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b44b1998"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b44b1b20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b44b1ca8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b44b1e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b08b44cb958" loc="38:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08b44cb958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b44cbca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b44cbe30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b44bc020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b44bc1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b44bc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b08b4491b88" loc="32:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08b4491b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08b4494020"/>
        <function-ref name="rand32" scoped="" ref="0x2b08b44941a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDelay" ref="0x2b08b44a77f8" loc="34:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDelay" scoped="" ref="0x2b08b44a77f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b44a4a18"/>
        <function-ref name="fired" scoped="" ref="0x2b08b44a5158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b44a5e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b44a59f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b44a22e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b44a4e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b44a55a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b44a6370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b44a4448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b44a6810"/>
        <function-ref name="stop" scoped="" ref="0x2b08b44a6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="helloProtocol" ref="0x2b08b4494678" loc="33:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="helloProtocol" scoped="" ref="0x2b08b4494678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b448f8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4490020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b4490d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b44908c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b44a71c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b448fd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b4490470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b44931e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b448f320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b4493688"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4493b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBufferTask" ref="0x2b08b44d36e8" loc="74:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBufferTask" scoped="" ref="0x2b08b44d36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b44d3a38"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b44d3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="neighborMap" ref="0x2b08b4485200" loc="30:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="neighborMap" scoped="" ref="0x2b08b4485200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b44815f0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4484b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b44828c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b4482470"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b449a020"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b4481a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b4482020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b4485d48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b4481020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b4484238"/>
        <function-ref name="stop" scoped="" ref="0x2b08b44846d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b08b44c3c58" loc="40:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b44c3c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b44cc0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="pingTimeoutTimer" ref="0x2b08b4475e38" loc="28:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="pingTimeoutTimer" scoped="" ref="0x2b08b4475e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b448b0c0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b447e798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b448c4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b448c088"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b448b960"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b448b510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b447ebe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b447f9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b448caa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b447fe80"/>
        <function-ref name="stop" scoped="" ref="0x2b08b447e348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b08b44bbc28" loc="37:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08b44bbc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08b44a0020"/>
        <function-ref name="source" scoped="" ref="0x2b08b44a01a8"/>
        <function-ref name="address" scoped="" ref="0x2b08b44a0330"/>
        <function-ref name="destination" scoped="" ref="0x2b08b44a04b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08b44a0640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08b44a07c8"/>
        <function-ref name="type" scoped="" ref="0x2b08b44a0950"/>
        <function-ref name="setType" scoped="" ref="0x2b08b44a0ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08b44a0c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08b44a0de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08b44b2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="neighborDiscovey" ref="0x2b08b448a020" loc="29:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="neighborDiscovey" scoped="" ref="0x2b08b448a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b44862b8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4489978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b44876c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b4487278"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b4486b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b4486708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b4489dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b448ab68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b4487c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b4489088"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4489528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b08b4587080" loc="46:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08b4587080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08b45873d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b08b4587558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b08b4588020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b08b4588020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4588b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b45891f8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b45891f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4589548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b08b459e020" loc="48:/home/adrian/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08b459e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08b459e370"/>
        <function-ref name="rand32" scoped="" ref="0x2b08b459e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b08b4583e48" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b08b4583e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b45829e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b45835f0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b45835f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4583940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b4584420" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="NodeC.pingTimeoutTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4584420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b476a6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4748db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b4747ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b4747688"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b4768020"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b476ab18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b4747238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b4748020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b476a0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b47484c0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4748960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b08b45a6510" loc="49:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45a6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b45a2768"/>
        <function-ref name="fired" scoped="" ref="0x2b08b45a5e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b45a4b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b45a4728"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b45a1088"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b45a2bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b45a42d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b45a5088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b45a2198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b45a5528"/>
        <function-ref name="stop" scoped="" ref="0x2b08b45a59c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b08b45bbb68" loc="46:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b08b45bbb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b45b8d98"/>
        <function-ref name="fired" scoped="" ref="0x2b08b45b94d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b45b81f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b45b9d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b45b7688"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b45b7238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b45b9928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b45ba6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b45b87c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b45bab90"/>
        <function-ref name="stop" scoped="" ref="0x2b08b45b9088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b08b45b5108" loc="47:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b08b45b5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b45b5c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b45a1e48" loc="45:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b45a1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b45bb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b08b45c11d8" loc="29:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b08b45c11d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b45c0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b45c0930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b45c04a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b45c0db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b45b16f8" loc="27:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b45b16f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b45b1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b08b45ae020" loc="28:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b08b45ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b45c4690"/>
        <function-ref name="fired" scoped="" ref="0x2b08b45cb6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b45c4088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b45cbb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b45c4b18"/>
        <function-ref name="start" scoped="" ref="0x2b08b45aed70"/>
        <function-ref name="stop" scoped="" ref="0x2b08b45cb270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08b46c9020" loc="26:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08b46c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b46c6690"/>
        <function-ref name="fired" scoped="" ref="0x2b08b46c86f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b46c6088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b46c8b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b46c6b18"/>
        <function-ref name="start" scoped="" ref="0x2b08b46c9d70"/>
        <function-ref name="stop" scoped="" ref="0x2b08b46c8270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b46ca7d8" loc="25:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b46ca7d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b08b40b4388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b08b40b4388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b46cab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08b46c5128" loc="27:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08b46c5128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b46c5e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b46c47b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b46c4330"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b46c4c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b08b55e50c0" loc="31:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b55e50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b08b55e5410"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08b55e5598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08b55e5720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08b55e58a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08b55e5a30"/>
        <function-ref name="setControl" scoped="" ref="0x2b08b55e5bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08b55f1020" loc="26:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08b55f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b55ee690"/>
        <function-ref name="fired" scoped="" ref="0x2b08b55f06f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b55ee088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b55f0b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b55eeb18"/>
        <function-ref name="start" scoped="" ref="0x2b08b55f1d70"/>
        <function-ref name="stop" scoped="" ref="0x2b08b55f0270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b55f2720" loc="25:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b55f2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b55f2a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08b55ed128" loc="27:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08b55ed128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b55ede78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b55ec7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b55ec330"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b55ecc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b08b55e10a0" loc="33:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b08b55e10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b08b55e13f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b08b55e1578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b08b55e1700"/>
        <function-ref name="countBusy" scoped="" ref="0x2b08b55e1888"/>
        <function-ref name="getAssr" scoped="" ref="0x2b08b55e1a10"/>
        <function-ref name="setAssr" scoped="" ref="0x2b08b55e1b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b08b55e4020" loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b08b55e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08b55e27a8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b55e3560"/>
        <function-ref name="get" scoped="" ref="0x2b08b55e4ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b08b55e39e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b55e2c30"/>
        <function-ref name="set" scoped="" ref="0x2b08b55e3088"/>
        <function-ref name="start" scoped="" ref="0x2b08b55e3e70"/>
        <function-ref name="stop" scoped="" ref="0x2b08b55e2320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08b55eb228" loc="30:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b55eb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08b55e7310"/>
        <function-ref name="test" scoped="" ref="0x2b08b55e8998"/>
        <function-ref name="get" scoped="" ref="0x2b08b55ebda8"/>
        <function-ref name="setScale" scoped="" ref="0x2b08b55e7798"/>
        <function-ref name="getScale" scoped="" ref="0x2b08b55e7c70"/>
        <function-ref name="reset" scoped="" ref="0x2b08b55e9bd0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b55e9748"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b55e8e20"/>
        <function-ref name="set" scoped="" ref="0x2b08b55e9270"/>
        <function-ref name="start" scoped="" ref="0x2b08b55e8088"/>
        <function-ref name="stop" scoped="" ref="0x2b08b55e8510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08b4652220" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b4652220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b08b4652570"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08b46526f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08b4652880"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08b4652a08"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08b4652b90"/>
        <function-ref name="setControl" scoped="" ref="0x2b08b4652d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b08b464d3c8" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b08b464d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b08b464d718"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b08b464d8a0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b08b464da28"/>
        <function-ref name="countBusy" scoped="" ref="0x2b08b464dbb0"/>
        <function-ref name="getAssr" scoped="" ref="0x2b08b464dd38"/>
        <function-ref name="setAssr" scoped="" ref="0x2b08b464c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b08b4651210" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b08b4651210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08b464f998"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4650748"/>
        <function-ref name="get" scoped="" ref="0x2b08b4651d90"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4650bd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b464fe20"/>
        <function-ref name="set" scoped="" ref="0x2b08b4650270"/>
        <function-ref name="start" scoped="" ref="0x2b08b464f088"/>
        <function-ref name="stop" scoped="" ref="0x2b08b464f510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b4657248" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4657248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08b4653310"/>
        <function-ref name="test" scoped="" ref="0x2b08b46559d0"/>
        <function-ref name="get" scoped="" ref="0x2b08b4657dc8"/>
        <function-ref name="setScale" scoped="" ref="0x2b08b4653798"/>
        <function-ref name="getScale" scoped="" ref="0x2b08b4653c70"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4656c10"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4656788"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b4655e58"/>
        <function-ref name="set" scoped="" ref="0x2b08b46562b0"/>
        <function-ref name="start" scoped="" ref="0x2b08b46550c0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4655548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08b4664558" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b4664558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b08b46648a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08b4664a30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08b4664bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08b4664d40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08b4663020"/>
        <function-ref name="setControl" scoped="" ref="0x2b08b46631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b08b465f790" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b08b465f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b08b465fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b08b465e020" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b08b465e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b08b465e370"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b08b465e4f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b08b465e680"/>
        <function-ref name="countBusy" scoped="" ref="0x2b08b465e808"/>
        <function-ref name="getAssr" scoped="" ref="0x2b08b465e990"/>
        <function-ref name="setAssr" scoped="" ref="0x2b08b465eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b08b4663670" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b08b4663670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08b4660e20"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4662b80"/>
        <function-ref name="get" scoped="" ref="0x2b08b4662220"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4660088"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b465f310"/>
        <function-ref name="set" scoped="" ref="0x2b08b46626a8"/>
        <function-ref name="start" scoped="" ref="0x2b08b4660510"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4660998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b4649400" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4649400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08b4665580"/>
        <function-ref name="test" scoped="" ref="0x2b08b4667c20"/>
        <function-ref name="get" scoped="" ref="0x2b08b4648020"/>
        <function-ref name="setScale" scoped="" ref="0x2b08b4665a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b08b4664020"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4648e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4648980"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b46650f8"/>
        <function-ref name="set" scoped="" ref="0x2b08b46484a8"/>
        <function-ref name="start" scoped="" ref="0x2b08b4667310"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4667798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b08b46f95e8" loc="74:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b08b46f95e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b46f9938"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b46f9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b08b46fd648" loc="49:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08b46fd648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b46facc0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b46fcd50"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b46fa6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b46fa230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b46f9190"/>
        <function-ref name="start" scoped="" ref="0x2b08b46fc3f0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b46fc8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b46e0290" loc="48:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b46e0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b46fe5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b46dfba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b46dd8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b46dd470"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b46fd020"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b46fea40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b46dd020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b46e0dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b46fe020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b46df2b8"/>
        <function-ref name="stop" scoped="" ref="0x2b08b46df758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b08b473a618" loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b08b473a618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b473a968"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b473aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b08b473f5a0" loc="49:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b08b473f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b473b8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b473c020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b473cd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b473c8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b473a1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b473bd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b473c470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b473e118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b473b320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b473e5b8"/>
        <function-ref name="stop" scoped="" ref="0x2b08b473ea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b47450c8" loc="48:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b47450c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b4741610"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4744a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b4742900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b4742490"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b473f020"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b4741a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b4742020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b4745c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b4741020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b4744118"/>
        <function-ref name="stop" scoped="" ref="0x2b08b47445d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b08b4736c38" loc="48:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b08b4736c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b4758820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b08b4758e48" loc="49:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08b4758e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b474fbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b474e548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b474e0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b474e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b4767a60" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="NodeC.neighborDiscovery"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4767a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b4764d60"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4765470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b47641c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b4765d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b4762648"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b47621f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b47658c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b4766620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b4764790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b4766ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4765020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b4760020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="NodeC.neighborMap"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4760020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b475c2b8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b475f978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b475e6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b475e278"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b475cb58"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b475c708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b475fdc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b4760b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b475ec98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b475f088"/>
        <function-ref name="stop" scoped="" ref="0x2b08b475f528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b475a5e8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="NodeC.helloProtocol"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b475a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b477a8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b477c020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b477cd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b477c8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b47791c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b477ad40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b477c470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b4759158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b477a320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b47595f8"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4759a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b4778aa0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="NodeC.waitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4778aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b4774d60"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4776470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b47741c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b4776d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b4773648"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b47731f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b47768c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b4777620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b4774790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b4777ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4776020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b4771020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="NodeC.sendDelay"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4771020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b476d2b8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4770978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b476e6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b476e278"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b476db58"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b476d708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b4770dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b4771b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b476ec98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b4770088"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4770528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08b478e248" loc="55:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08b478e248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08b478e598"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08b478e720"/>
        <function-ref name="start" scoped="" ref="0x2b08b478e8a8"/>
        <function-ref name="stop" scoped="" ref="0x2b08b478ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08b478d208" loc="57:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08b478d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b478d558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b478d6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b478d868"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b478d9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b478db78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b08b478a020" loc="59:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b08b478a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b478a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08b478a5f8" loc="61:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08b478a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b478a948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b478aad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b478ac58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b478ade0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b4789020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b08b4787020" loc="64:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b08b4787020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08b4786478"/>
        <function-ref name="clear" scoped="" ref="0x2b08b4786b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b08b4787d70"/>
        <function-ref name="set" scoped="" ref="0x2b08b479e278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08b4794848" loc="66:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b4794848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08b4794b98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08b4794d20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08b4799020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08b47991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b478b348" loc="58:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b478b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b478b698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b08b4780290" loc="63:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b4780290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08b47805e0"/>
        <function-ref name="noAck" scoped="" ref="0x2b08b4780768"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08b47808f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08b47892c0" loc="62:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08b47892c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08b4789610"/>
        <function-ref name="source" scoped="" ref="0x2b08b4789798"/>
        <function-ref name="address" scoped="" ref="0x2b08b4789920"/>
        <function-ref name="destination" scoped="" ref="0x2b08b4789aa8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08b4789c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08b4789db8"/>
        <function-ref name="type" scoped="" ref="0x2b08b4788020"/>
        <function-ref name="setType" scoped="" ref="0x2b08b47881a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08b4788330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08b47884b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08b4788640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b08b479ee48" loc="65:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08b479ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08b479c300"/>
        <function-ref name="clear" scoped="" ref="0x2b08b479c9e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b08b479dbe8"/>
        <function-ref name="set" scoped="" ref="0x2b08b479a0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08b47ad310" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08b47ad310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08b47ad660"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08b47ad7e8"/>
        <function-ref name="start" scoped="" ref="0x2b08b47ad970"/>
        <function-ref name="stop" scoped="" ref="0x2b08b47adaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b08b47ba700" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b47ba700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b08b47baa50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b08b47babd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b08b47bad60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b08b47c3020"/>
        <function-ref name="setCca" scoped="" ref="0x2b08b47c31a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b08b47c3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b08b47b71c8" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b08b47b71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b08b47b7618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08b47a8bd8" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08b47a8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b47a7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b47a71a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b47a7330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b47a74b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b47a7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08b47ac2b0" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08b47ac2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b47ac600"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b47ac788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b47ac910"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b47aca98"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b47acc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b08b47aa020" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b08b47aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b47aa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b08b47c5888" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b47c5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b08b47c5bd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b08b47c5d60"/>
        <function-ref name="getRssi" scoped="" ref="0x2b08b47a6020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b08b47a61a8"/>
        <function-ref name="getPower" scoped="" ref="0x2b08b47a6330"/>
        <function-ref name="getLqi" scoped="" ref="0x2b08b47a64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08b47c3628" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b47c3628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08b47c3978"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08b47c3b00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08b47c3c88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08b47c3e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b47ab3c8" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b47ab3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b47ab718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b08b47a67e0" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b47a67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08b47a6b30"/>
        <function-ref name="noAck" scoped="" ref="0x2b08b47a6cb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08b47a6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b08b47d6450" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b08b47d6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b08b47d67a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b08b47d6928"/>
        <function-ref name="getRetries" scoped="" ref="0x2b08b47d6ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b08b47d6c38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b08b47d6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08b47aa610" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08b47aa610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08b47aa960"/>
        <function-ref name="source" scoped="" ref="0x2b08b47aaae8"/>
        <function-ref name="address" scoped="" ref="0x2b08b47aac70"/>
        <function-ref name="destination" scoped="" ref="0x2b08b47aadf8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08b47a8020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08b47a81a8"/>
        <function-ref name="type" scoped="" ref="0x2b08b47a8330"/>
        <function-ref name="setType" scoped="" ref="0x2b08b47a84b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08b47a8640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08b47a87c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08b47a8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b08b47c17b0" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b47c17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b08b47c1b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08b47d1020" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08b47d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08b47d1370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08b47d14f8"/>
        <function-ref name="start" scoped="" ref="0x2b08b47d1680"/>
        <function-ref name="stop" scoped="" ref="0x2b08b47d1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b08b47e2020" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b47e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b08b47e2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b08b47e1128" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b08b47e1128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b08b47e1478"/>
        <function-ref name="setRetries" scoped="" ref="0x2b08b47e1600"/>
        <function-ref name="getRetries" scoped="" ref="0x2b08b47e1788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b08b47e1910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b08b47e1a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b08b47e67e8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b47e67e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b08b47e6b38"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b08b47e6cc0"/>
        <function-ref name="getRssi" scoped="" ref="0x2b08b47e6e48"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b08b47e4020"/>
        <function-ref name="getPower" scoped="" ref="0x2b08b47e41a8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b08b47e4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b08b47ee4c8" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b08b47ee4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b47ee818"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b47ee9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b47eeb28"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b47eecb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b47eee38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08b47e2668" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b47e2668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08b47e29b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08b47e2b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08b47e2cc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08b47e2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b08b47ca020" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b08b47ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b47ca370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b08b47e4658" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b47e4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08b47e49a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b08b47e4b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08b47e4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b47d0340" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b47d0340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b47d0690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b47d0818"/>
        <function-ref name="request" scoped="" ref="0x2b08b47d09a0"/>
        <function-ref name="granted" scoped="" ref="0x2b08b47d0b28"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b47d0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b08b47e5330" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b08b47e5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b47e5680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b47e5808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b47e5990"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b47e5b18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b47e5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b08b47ca6a0" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b08b47ca6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b47ca9f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b47cab78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b47cad00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b47ee020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b47ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b08b47e61d0" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b08b47e61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b47e6520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08b47e0780" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08b47e0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08b47e0ad0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08b47e0c58"/>
        <function-ref name="start" scoped="" ref="0x2b08b47e0de0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b47dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b08b47dc678" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b47dc678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b08b47dc9c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b08b47dcb50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b08b47dccd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b08b47dce60"/>
        <function-ref name="setCca" scoped="" ref="0x2b08b4801020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b08b48011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b47dd2d8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b47dd2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b47dd628"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b47dd7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b47dd938"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b47ddac0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b47ddc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b47dc020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b47dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b47dc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08b47fe140" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08b47fe140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08b47fe490"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08b47fe618"/>
        <function-ref name="start" scoped="" ref="0x2b08b47fe7a0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b47fe928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b08b47fd948" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b47fd948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b08b47fdc98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b08b47fde20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b08b47fc020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b08b47fc1a8"/>
        <function-ref name="setCca" scoped="" ref="0x2b08b47fc330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b08b47fc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b08b47f9a70" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b08b47f9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b08b47f9dc0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b08b47f3020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b08b47f31a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b08b47f3330"/>
        <function-ref name="setCca" scoped="" ref="0x2b08b47f34b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b08b47f3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b08b480fde0" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b480fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b08b480e170"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b08b480e2f8"/>
        <function-ref name="getRssi" scoped="" ref="0x2b08b480e480"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b08b480e608"/>
        <function-ref name="getPower" scoped="" ref="0x2b08b480e790"/>
        <function-ref name="getLqi" scoped="" ref="0x2b08b480e918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b08b4811cc8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b08b4811cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b47f90a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b47f9228"/>
        <function-ref name="modify" scoped="" ref="0x2b08b47f93b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b47f9538"/>
        <function-ref name="resend" scoped="" ref="0x2b08b47f96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b47febe0" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b47febe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b47fd020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b47fd1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b47fd330"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b47fd4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b47fd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b08b47f3908" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08b47f3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08b47f3c58"/>
        <function-ref name="rand32" scoped="" ref="0x2b08b47f3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b08b47f1500" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b08b47f1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08b47f1850"/>
        <function-ref name="stop" scoped="" ref="0x2b08b47f19d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b08b4803020" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b4803020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b08b4803370"/>
        <function-ref name="getHeader" scoped="" ref="0x2b08b48034f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b08b4803680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b08b47f4a78" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b08b47f4a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b08b47f4dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x2b08b47fa020"/>
        <function-ref name="rxOn" scoped="" ref="0x2b08b47fa1a8"/>
        <function-ref name="startVReg" scoped="" ref="0x2b08b47fa330"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b08b47fa4b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b08b47fa640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b08b47fa7c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b08b47fa950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08b4805760" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08b4805760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08b4805ab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08b4805c38"/>
        <function-ref name="led1On" scoped="" ref="0x2b08b4805dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08b480f020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08b480f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b480f330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08b480f4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08b480fad8"/>
        <function-ref name="set" scoped="" ref="0x2b08b480f640"/>
        <function-ref name="led0On" scoped="" ref="0x2b08b480f7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b08b480f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b08b47fc798" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b47fc798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b47fcae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b47fcc70"/>
        <function-ref name="request" scoped="" ref="0x2b08b47fcdf8"/>
        <function-ref name="granted" scoped="" ref="0x2b08b47fb020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b47fb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b08b4821540" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2b08b4821540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b4821990"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b4821b18"/>
        <function-ref name="isState" scoped="" ref="0x2b08b4821ca0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b4821e28"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b4802020"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b48021a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b08b481db80" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2b08b481db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b481c020"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b481c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b08b481ecf8" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2b08b481ecf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b481d0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b481d228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b08b481fe68" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2b08b481fe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b481e1e8"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b481e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b08b4868af8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b08b4868af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b08b4868e48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b08b4874020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b08b48741a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b08b4874330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b08b48744b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b08b4874640"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08b48747c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b08b4874950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b08b4874ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b08b4874c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b08b4874de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b08b4873020"/>
        <function-ref name="sync" scoped="" ref="0x2b08b48731a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08b4873430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b08b48735b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b08b488bd28" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b08b488bd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b48668b8"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4866d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b08b48738b0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b08b48738b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b08b4873c00"/>
        <function-ref name="rfOff" scoped="" ref="0x2b08b4873d88"/>
        <function-ref name="rxOn" scoped="" ref="0x2b08b4867020"/>
        <function-ref name="startVReg" scoped="" ref="0x2b08b48671a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b08b4867330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b08b48674b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b08b4867640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b08b48677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4878e10" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4878e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b48751a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4875330"/>
        <function-ref name="request" scoped="" ref="0x2b08b48754b8"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4875640"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b48757c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b08b48864b0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b08b48864b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b08b4886800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b08b4886988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b08b4886b10"/>
        <function-ref name="syncDone" scoped="" ref="0x2b08b4886c98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b08b4886e20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b08b4885020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08b48851a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b08b4885330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b08b48854b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b08b4885640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b08b48857c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b08b4885950"/>
        <function-ref name="sync" scoped="" ref="0x2b08b4885ad8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08b4885d60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b08b4884020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b08b4891dd0" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4891dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b48b7170"/>
        <function-ref name="write" scoped="" ref="0x2b08b48b72f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b08b487e998" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b08b487e998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b08b487ece8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b08b4880370" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2b08b4880370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b487dab0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b487fa58"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b487d4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b487d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b487b020"/>
        <function-ref name="start" scoped="" ref="0x2b08b487f0f8"/>
        <function-ref name="stop" scoped="" ref="0x2b08b487f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b08b4896c40" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4896c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4891020"/>
        <function-ref name="write" scoped="" ref="0x2b08b48911a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b08b487a688" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b08b487a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b487a9d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b487ab60"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b487ace8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b487ae70"/>
        <function-ref name="get" scoped="" ref="0x2b08b48a2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b48a21a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b48a2330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b48a24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b08b4883658" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b08b4883658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b48821e8"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4882638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b08b48a7720" loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2b08b48a7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b48a7a70"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b48a7bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b08b48b7680" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b08b48b7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b48b79d0"/>
        <function-ref name="write" scoped="" ref="0x2b08b48b7b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b08b48b6020" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b08b48b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b48b6370"/>
        <function-ref name="write" scoped="" ref="0x2b08b48b64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b08b488fa40" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b08b488fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b488fd90"/>
        <function-ref name="write" scoped="" ref="0x2b08b4896020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b08b4897338" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08b4897338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b08b4897688"/>
        <function-ref name="changed" scoped="" ref="0x2b08b4897810"/>
        <function-ref name="amGroup" scoped="" ref="0x2b08b4897998"/>
        <function-ref name="setAddress" scoped="" ref="0x2b08b4897b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b08b487b4f8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b08b487b4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b487b848"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b487b9d0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b487bb58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b487bce0"/>
        <function-ref name="get" scoped="" ref="0x2b08b487be68"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b487a020"/>
        <function-ref name="set" scoped="" ref="0x2b08b487a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b487a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b08b48b5560" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b48b5560"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b48b5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b08b48a2810" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b08b48a2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b48a2b60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b48a2ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b48a2e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b48a1020"/>
        <function-ref name="get" scoped="" ref="0x2b08b48a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b48a1330"/>
        <function-ref name="set" scoped="" ref="0x2b08b48a14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b48a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4887080" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4887080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b48873d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b08b4891558" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4891558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b48918a8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4891a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b08b48b5e40" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b08b48b5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b48b41c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b08b48b4550" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b08b48b4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b48b48a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b48b4a28"/>
        <function-ref name="request" scoped="" ref="0x2b08b48b4bb0"/>
        <function-ref name="granted" scoped="" ref="0x2b08b48b4d38"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b48b2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b08b48b1140" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2b08b48b1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b48b1490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b48b1618"/>
        <function-ref name="request" scoped="" ref="0x2b08b48b17a0"/>
        <function-ref name="granted" scoped="" ref="0x2b08b48b1928"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b48b1ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b08b4884318" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b08b4884318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b08b4884668"/>
        <function-ref name="rfOff" scoped="" ref="0x2b08b48847f0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b08b4884978"/>
        <function-ref name="startVReg" scoped="" ref="0x2b08b4884b00"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b08b4884c88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b08b4884e10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b08b4883020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b08b48831a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b08b48963b8" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b08b48963b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4896708"/>
        <function-ref name="write" scoped="" ref="0x2b08b4896890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b08b488f1d0" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b08b488f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b488f520"/>
        <function-ref name="write" scoped="" ref="0x2b08b488f6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b08b48b3768" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b08b48b3768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b48b3ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08b48b1d68" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08b48b1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08b48b00f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08b48b0278"/>
        <function-ref name="led1On" scoped="" ref="0x2b08b48b0400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08b48b0588"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08b48b0710"/>
        <function-ref name="get" scoped="" ref="0x2b08b48b0898"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08b48b0a20"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08b48af1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b48b0ba8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08b48b0d30"/>
        <function-ref name="led2On" scoped="" ref="0x2b08b48af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b08b48a88d8" loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2b08b48a88d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b48a8c28"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b48a8db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b48876b0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b48876b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4887a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4887b88"/>
        <function-ref name="request" scoped="" ref="0x2b08b4887d10"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4886020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b48861a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b08b4892c18" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b08b4892c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b489b020"/>
        <function-ref name="write" scoped="" ref="0x2b08b489b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b08b48922e0" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b08b48922e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4892730"/>
        <function-ref name="write" scoped="" ref="0x2b08b48928b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b08b489ce80" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b08b489ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b48a01f8"/>
        <function-ref name="disable" scoped="" ref="0x2b08b48a0380"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b08b48a0508"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b08b48a0690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b08b48b23c0" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b08b48b23c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b48b2710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b48b2898"/>
        <function-ref name="request" scoped="" ref="0x2b08b48b2a20"/>
        <function-ref name="granted" scoped="" ref="0x2b08b48b2ba8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b48b2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b08b48b3e40" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b08b48b3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b48b51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b49348e0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b49348e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4934c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b08b49312a0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b08b49312a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b492e918"/>
        <function-ref name="fired" scoped="" ref="0x2b08b492f980"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b492e310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b492fe08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b492eda0"/>
        <function-ref name="start" scoped="" ref="0x2b08b492f020"/>
        <function-ref name="stop" scoped="" ref="0x2b08b492f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08b492b3b8" loc="86:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08b492b3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b4af1ab0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4af5a90"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b4af14a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b4af1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b4af0020"/>
        <function-ref name="start" scoped="" ref="0x2b08b4af5130"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4af5608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4af0438" loc="87:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4af0438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4af0788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08b56831a8" loc="28:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08b56831a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b5681918"/>
        <function-ref name="fired" scoped="" ref="0x2b08b5682980"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b5681310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b5682e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b5681da0"/>
        <function-ref name="start" scoped="" ref="0x2b08b5682020"/>
        <function-ref name="stop" scoped="" ref="0x2b08b56824f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08b567d670" loc="30:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08b567d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b567bcc0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b567cd50"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b567b6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b567b230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b567a190"/>
        <function-ref name="start" scoped="" ref="0x2b08b567c3f0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b567c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08b495e7d0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b495e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08b495eb20"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b08b495eca8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08b495ee30"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b08b493a020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08b493a1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08b493a330"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b08b493a4b8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b08b493a640"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b08b493a7c8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b08b493a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b08b4939108" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b08b4939108"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b08b4953270"/>
        <function-ref name="test" scoped="" ref="0x2b08b4955930"/>
        <function-ref name="get" scoped="" ref="0x2b08b4939c88"/>
        <function-ref name="captured" scoped="" ref="0x2b08b495d628"/>
        <function-ref name="reset" scoped="" ref="0x2b08b495db00"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b4955db8"/>
        <function-ref name="set" scoped="" ref="0x2b08b495d150"/>
        <function-ref name="start" scoped="" ref="0x2b08b4955020"/>
        <function-ref name="stop" scoped="" ref="0x2b08b49554a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b08b4953e18" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b08b4953e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08b4950798"/>
        <function-ref name="fired" scoped="" ref="0x2b08b49514f8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4952a18"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4951980"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b4950c20"/>
        <function-ref name="set" scoped="" ref="0x2b08b4951020"/>
        <function-ref name="start" scoped="" ref="0x2b08b4951e08"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4950310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b4940538" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4940538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08b493d6f8"/>
        <function-ref name="test" scoped="" ref="0x2b08b493edb8"/>
        <function-ref name="get" scoped="" ref="0x2b08b493f0f8"/>
        <function-ref name="setScale" scoped="" ref="0x2b08b493db80"/>
        <function-ref name="getScale" scoped="" ref="0x2b08b493b088"/>
        <function-ref name="reset" scoped="" ref="0x2b08b493e020"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b493fa58"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b493d270"/>
        <function-ref name="set" scoped="" ref="0x2b08b493f580"/>
        <function-ref name="start" scoped="" ref="0x2b08b493e4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b08b493e930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08b4972568" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08b4972568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08b49728b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b08b4972a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08b4972bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b08b4972d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08b4971020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08b49711a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b08b4971330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b08b49714b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b08b4971640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b08b49717c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b08b498b020" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b08b498b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b08b498b370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08b498b4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08b498b680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08b498b808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08b498b990"/>
        <function-ref name="setControl" scoped="" ref="0x2b08b498bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b08b496c540" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b08b496c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08b4969db8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b496aa58"/>
        <function-ref name="get" scoped="" ref="0x2b08b496a0f8"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4969020"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b4968270"/>
        <function-ref name="set" scoped="" ref="0x2b08b496a580"/>
        <function-ref name="start" scoped="" ref="0x2b08b49694a8"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4969930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b08b4971ca0" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b08b4971ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b08b496de20"/>
        <function-ref name="test" scoped="" ref="0x2b08b496d510"/>
        <function-ref name="get" scoped="" ref="0x2b08b4970858"/>
        <function-ref name="captured" scoped="" ref="0x2b08b496e238"/>
        <function-ref name="reset" scoped="" ref="0x2b08b496e710"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b496d998"/>
        <function-ref name="set" scoped="" ref="0x2b08b4970ce0"/>
        <function-ref name="start" scoped="" ref="0x2b08b496eb98"/>
        <function-ref name="stop" scoped="" ref="0x2b08b496d088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b08b49688e8" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b08b49688e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08b4964088"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4967df0"/>
        <function-ref name="get" scoped="" ref="0x2b08b4967490"/>
        <function-ref name="reset" scoped="" ref="0x2b08b49652b0"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b4964510"/>
        <function-ref name="set" scoped="" ref="0x2b08b4967918"/>
        <function-ref name="start" scoped="" ref="0x2b08b4965738"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4965bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b08b4964b88" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b08b4964b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08b498c4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b498d0f8"/>
        <function-ref name="get" scoped="" ref="0x2b08b498f760"/>
        <function-ref name="reset" scoped="" ref="0x2b08b498d580"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b498c930"/>
        <function-ref name="set" scoped="" ref="0x2b08b498fbe8"/>
        <function-ref name="start" scoped="" ref="0x2b08b498da08"/>
        <function-ref name="stop" scoped="" ref="0x2b08b498c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b49773a8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b49773a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08b4973580"/>
        <function-ref name="test" scoped="" ref="0x2b08b4974c20"/>
        <function-ref name="get" scoped="" ref="0x2b08b4976020"/>
        <function-ref name="setScale" scoped="" ref="0x2b08b4973a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b08b4972020"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4976e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4976980"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b49730f8"/>
        <function-ref name="set" scoped="" ref="0x2b08b49764a8"/>
        <function-ref name="start" scoped="" ref="0x2b08b4974310"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4974798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4a10190" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4a10190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b08b40b4388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b08b40b4388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4a104e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08b4a108b0" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4a108b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08b4a31998"/>
        <function-ref name="test" scoped="" ref="0x2b08b4a31088"/>
        <function-ref name="get" scoped="" ref="0x2b08b4a03490"/>
        <function-ref name="setScale" scoped="" ref="0x2b08b4a31e20"/>
        <function-ref name="getScale" scoped="" ref="0x2b08b4a2f350"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4a322b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4a03df0"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b4a31510"/>
        <function-ref name="set" scoped="" ref="0x2b08b4a03918"/>
        <function-ref name="start" scoped="" ref="0x2b08b4a32738"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4a32bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08b56ccbc8" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08b56ccbc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b08b40b4020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b08b40b4020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b56c9270"/>
        <function-ref name="fired" scoped="" ref="0x2b08b56ca310"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b56cac20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b56ca798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b56c96f8"/>
        <function-ref name="start" scoped="" ref="0x2b08b56cb948"/>
        <function-ref name="stop" scoped="" ref="0x2b08b56cbe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b08b56c3c68" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b08b56c3c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08b56c04a8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b56c11d0"/>
        <function-ref name="get" scoped="" ref="0x2b08b56c2820"/>
        <function-ref name="reset" scoped="" ref="0x2b08b56c1658"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b56c0930"/>
        <function-ref name="set" scoped="" ref="0x2b08b56c2ca8"/>
        <function-ref name="start" scoped="" ref="0x2b08b56c1ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b56c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b08b56c9c18" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b08b56c9c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08b56c5db8"/>
        <function-ref name="test" scoped="" ref="0x2b08b56c54a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b56c7820"/>
        <function-ref name="setScale" scoped="" ref="0x2b08b56c3270"/>
        <function-ref name="getScale" scoped="" ref="0x2b08b56c3748"/>
        <function-ref name="reset" scoped="" ref="0x2b08b56c6658"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b56c61d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b56c5930"/>
        <function-ref name="set" scoped="" ref="0x2b08b56c7ca8"/>
        <function-ref name="start" scoped="" ref="0x2b08b56c6ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b56c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08b4a55db0" loc="24:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08b4a55db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b4a52b38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b4a514a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b4a51020"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4a51930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08b4a4d318" loc="24:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08b4a4d318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b4a4c0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b4a4c9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b4a4c548"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4a4ce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08b4a67098" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08b4a67098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b4a67de8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b4a66738"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b4a662b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4a66bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08b4a65168" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b4a65168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08b4a91270"/>
        <function-ref name="test" scoped="" ref="0x2b08b4a92930"/>
        <function-ref name="get" scoped="" ref="0x2b08b4a65ce8"/>
        <function-ref name="setScale" scoped="" ref="0x2b08b4a916f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b08b4a91bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4a63b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4a636d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b4a92db8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4a631f8"/>
        <function-ref name="start" scoped="" ref="0x2b08b4a92020"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4a924a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b08b4aa2b10" loc="63:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b08b4aa2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b4aa08f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b4a9f230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b4aa0d80"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4a9f6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08b4a8c878" loc="62:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08b4a8c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b4aa3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b4aa2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b4aa3ae8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b4aa24a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08b56db3b8" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08b56db3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b56d9ab0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b56daa90"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b56d94a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b56d9020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b56d8020"/>
        <function-ref name="start" scoped="" ref="0x2b08b56da130"/>
        <function-ref name="stop" scoped="" ref="0x2b08b56da608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b08b56d5860" loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b08b56d5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="TOne" ref="0x2b08b4170720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b56d2020"/>
        <function-ref name="fired" scoped="" ref="0x2b08b56d3020"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b56d3930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b56d34a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b56d24a8"/>
        <function-ref name="start" scoped="" ref="0x2b08b56d45e0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b56d4ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b08b56d8648" loc="68:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08b56d8648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b56d73f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b56d7d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b56d7878"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b56d51f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4af43a0" loc="18:/home/adrian/local/tinyos-2.1.1/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4af43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4af46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b08b4aeb7d0" loc="87:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b08b4aeb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4aebb20"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4aebca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4aebe30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4aea020"/>
        <function-ref name="get" scoped="" ref="0x2b08b4aea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4aea330"/>
        <function-ref name="set" scoped="" ref="0x2b08b4aea4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4aea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b08b4aea960" loc="88:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b08b4aea960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4aeacb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4aeae38"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4ae9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4ae91a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4ae9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4ae94b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ae9640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ae97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b08b4ae9ae0" loc="89:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b08b4ae9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4ae9e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4ae8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4ae81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4ae8330"/>
        <function-ref name="get" scoped="" ref="0x2b08b4ae84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4ae8640"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ae87c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ae8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b08b4aec638" loc="86:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b08b4aec638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4aec988"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4aecb10"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4aecc98"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4aece20"/>
        <function-ref name="get" scoped="" ref="0x2b08b4aeb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4aeb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4aeb330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4aeb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b08b4ae7df0" loc="91:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b08b4ae7df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4ae6170"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4ae62f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4ae6480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4ae6608"/>
        <function-ref name="get" scoped="" ref="0x2b08b4ae6790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4ae6918"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ae6aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ae6c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b08b4aed428" loc="85:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b08b4aed428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4aed778"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4aed900"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4aeda88"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4aedc10"/>
        <function-ref name="get" scoped="" ref="0x2b08b4aedd98"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4aec020"/>
        <function-ref name="set" scoped="" ref="0x2b08b4aec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4aec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b08b4ae8c58" loc="90:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b08b4ae8c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4ae7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4ae71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4ae7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4ae74b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4ae7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4ae77c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ae7950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ae7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b08b4b0a3c0" loc="39:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b08b4b0a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b08b4b0a710"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b0a898"/>
        <function-ref name="captured" scoped="" ref="0x2b08b4b0aa20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b08b4b0aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b08b4b0f020" loc="40:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b08b4b0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b0f370"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b0f4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b08b4b0f680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b08b4b0f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b08b4b0fbe8" loc="41:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b08b4b0fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b0e020"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b0e1a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b08b4b0e330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b08b4b0e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b08b4b08180" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b08b4b08180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b08b4b084d0"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b08658"/>
        <function-ref name="captured" scoped="" ref="0x2b08b4b087e0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b08b4b08968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2b08b4b08d38" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2b08b4b08d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b08b4b28e58"/>
        <function-ref name="test" scoped="" ref="0x2b08b4b28548"/>
        <function-ref name="get" scoped="" ref="0x2b08b4af88f0"/>
        <function-ref name="captured" scoped="" ref="0x2b08b4b292b0"/>
        <function-ref name="reset" scoped="" ref="0x2b08b4b29788"/>
        <function-ref name="isOn" scoped="" ref="0x2b08b4b289d0"/>
        <function-ref name="set" scoped="" ref="0x2b08b4af8d78"/>
        <function-ref name="start" scoped="" ref="0x2b08b4b29c10"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4b280c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b08b4b24480" loc="9:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b08b4b24480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b247d0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b24958"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b24ae0"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b24c68"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b24df0"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b08b4b259a0" loc="8:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b08b4b259a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b25cf0"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b25e78"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b08b4b24030"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b08b4b241b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2b08b4b3c518" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2b08b4b3c518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b3c868"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b3c9f0"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b3cb78"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b3cd00"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b3b020"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b3b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b08b4b41518" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b08b4b41518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b41868"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b419f0"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b41b78"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b41d00"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b40020"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2b08b4b3e518" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2b08b4b3e518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b3e868"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b3e9f0"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b3eb78"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b3ed00"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b3d020"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b3d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2b08b4b3b518" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2b08b4b3b518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b3b868"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b3b9f0"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b3bb78"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b3bd00"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b3a020"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b3a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b08b4b40518" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b08b4b40518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b40868"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b409f0"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b40b78"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b40d00"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b3f020"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2b08b4b3d518" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2b08b4b3d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b3d868"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b3d9f0"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b3db78"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b3dd00"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b3c020"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b3c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b08b4b10560" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b08b4b10560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b108b0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b10a38"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b10bc0"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b10d48"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b41020"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b08b4b3f518" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b08b4b3f518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b3f868"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b3f9f0"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b3fb78"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b3fd00"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b3e020"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b3e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2b08b4b32020" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2b08b4b32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b32370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2b08b4b34940" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2b08b4b34940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b34c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2b08b4b35020" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2b08b4b35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b35370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2b08b4b32758" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2b08b4b32758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b32aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2b08b4b360a8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2b08b4b360a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b363f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2b08b4b35758" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2b08b4b35758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b35aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2b08b4b34208" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2b08b4b34208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b34558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2b08b4b367e0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2b08b4b367e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b36b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b08b4b4aa70" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b08b4b4aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b4adc0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b6b020"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b6b1a8"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b6b330"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b6b4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b6b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b08b4b6b908" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b6b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b6bc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b08b4b687a8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b08b4b687a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b68af8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b68c80"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b68e08"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b66020"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b661a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b66330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b08b4b665f8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b665f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b66948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b08b4b633e0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b08b4b633e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b63730"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b638b8"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b63a40"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b63bc8"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b63d50"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b62020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b08b4b622e8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b622e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b62638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b08b4b5f020" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b08b4b5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b5f370"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b5f4f8"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b5f680"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b5f808"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b5f990"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b5fb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b08b4b5fde0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b5fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b5e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b08b4b8fcd8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b08b4b8fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b8e0a0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b8e228"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b8e3b0"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b8e538"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b8e6c0"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b8e848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b08b4b8eb10" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b8eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b8ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b08b4b8b9d8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b08b4b8b9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b8bd28"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b8a020"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b8a1a8"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b8a330"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b8a4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b8a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b08b4b8a908" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b8a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b8ac58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b08b4b87970" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b08b4b87970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b87cc0"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b87e48"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b86020"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b861a8"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b86330"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b864b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b08b4b86780" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b86780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b86ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b08b4b826a8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b08b4b826a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b4b829f8"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4b82b80"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4b82d08"/>
        <function-ref name="edge" scoped="" ref="0x2b08b4b81020"/>
        <function-ref name="enable" scoped="" ref="0x2b08b4b811a8"/>
        <function-ref name="getValue" scoped="" ref="0x2b08b4b81330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b08b4b815f8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b08b4b815f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4b81948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2b08b4baa020" loc="51:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2b08b4baa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4baa370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4baa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4baa680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4baa808"/>
        <function-ref name="get" scoped="" ref="0x2b08b4baa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4baab18"/>
        <function-ref name="set" scoped="" ref="0x2b08b4baaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4baae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b08b4bab458" loc="47:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b08b4bab458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4bab7a8"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4bab930"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b08b4babab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b08b4babc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2b08b4ba88e0" loc="69:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2b08b4ba88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b4ba8c30"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b4ba8db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b08b4e30c90" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4e30c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2f3e8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b08b4df8438" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b08b4df8438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df8788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b08b4df2dd8" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4df2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4df1170"/>
        <function-ref name="write" scoped="" ref="0x2b08b4df12f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b08b4e2e7c0" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4e2e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2eb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b08b4e2c020" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b08b4e2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2c370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b08b4e227c0" loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4e227c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e22b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e22c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b08b4e247c0" loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b08b4e247c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e24b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e24c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b08b4df76b8" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4df76b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df7a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b08b4e257c0" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4e257c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e25b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e25c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b08b4df1d60" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b08b4df1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e310d8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e31260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b08b4e31cc8" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4e31cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e300a0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e30228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b08b4e29020" loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b08b4e29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e29370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e294f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b08b4e2c7c0" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b08b4e2c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2cb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b08b4dfbe78" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4dfbe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b08b4dfa1f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b08b4dfa380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b08b4dfa508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b08b4df5020" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4df5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b08b4df5638" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b08b4df5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df5a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b08b4df5d50" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b08b4df5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df40d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b08b4e24020" loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4e24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e24370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e244f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b08b4df6368" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b4df6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df66b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b08b4e31528" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b4e31528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e31878"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e31a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b08b4df15c0" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4df15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4df1910"/>
        <function-ref name="write" scoped="" ref="0x2b08b4df1a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b08b4dfade8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b08b4dfade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b08b4e22020" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4e22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e22370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e224f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b08b4e23020" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b08b4e23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e23370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e234f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b08b4e297c0" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b08b4e297c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e29b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e29c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b08b4e25020" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b08b4e25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e25370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e254f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b08b4e2b7c0" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b08b4e2b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2bb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b08b4e21020" loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4e21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4e21770"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4e218f8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e21a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4e21c08"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4e21d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b08b4dfa7d0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b08b4dfa7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4dfab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b08b4df2638" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b08b4df2638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4df2988"/>
        <function-ref name="write" scoped="" ref="0x2b08b4df2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b08b4e304f0" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b4e304f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e30840"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e309c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b08b4e2b020" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b08b4e2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2b370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b08b4e2f838" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b08b4e2f838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2fb88"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b08b4df8a50" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b08b4df8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b08b4e2e020" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4e2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2e370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4dfb280" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4dfb280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4dfb5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4dfb758"/>
        <function-ref name="request" scoped="" ref="0x2b08b4dfb8e0"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4dfba68"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4dfbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b08b4df43a0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4df43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df46f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b08b4df2020" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b08b4df2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b08b4e267c0" loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b08b4e267c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e26b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e26c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b08b4e26020" loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b08b4e26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e26370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e264f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b08b4df6980" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4df6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b08b4e287c0" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b4e287c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e28b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e28c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b08b4e237c0" loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b08b4e237c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e23b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e23c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b08b4e28020" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b4e28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e28370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e284f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b08b4df70a0" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b08b4df70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df73f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b08b4e2a7c0" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b08b4e2a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2ab10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b08b4df7cd0" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b08b4df7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b08b4e2a020" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b08b4e2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e2a370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e2a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b08b4df49b8" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b08b4df49b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4df4d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b08b4e200a0" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4e200a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4e203f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4e20578"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e20700"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4e20888"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4e20a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b08b4bd3020" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b08b4bd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4bd3370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4bd34f8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4bd3680"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4bd3808"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4bd3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b08b4bd4020" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4bd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b08b4bd4370"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b08b4bd44f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b08b4bd4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b08b4bd1208" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b08b4bd1208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4bd1558"/>
        <function-ref name="write" scoped="" ref="0x2b08b4bd16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b08b4bd0020" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b08b4bd0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4bd0370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4bd04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4bd5208" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4bd5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4bd5558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4bd56e0"/>
        <function-ref name="request" scoped="" ref="0x2b08b4bd5868"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4bd59f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4bd5b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b08b4bd0d70" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b08b4bd0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4bcf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b08b4bf0860" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4bf0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b4bf0bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b4bf0d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b08b4bc91c8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b08b4bc91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4bc9518"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4bc96a0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4bc9828"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4bc99b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4bc9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b08b4bcc0c0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4bcc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b08b4bcc410"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b08b4bcc598"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b08b4bcc720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b08b4bf7388" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b08b4bf7388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b08b4bf76d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b08b4bfa0e0" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2b08b4bfa0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b4bfa430"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b4bfa5b8"/>
        <function-ref name="isState" scoped="" ref="0x2b08b4bfa740"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b4bfa8c8"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b4bfaa50"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b4bfabd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b08b4bfc740" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b08b4bfc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4bfca90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4bfcc18"/>
        <function-ref name="request" scoped="" ref="0x2b08b4bfcda0"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4bfb020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4bfb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b08b4bc83d8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b08b4bc83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4bc8728"/>
        <function-ref name="write" scoped="" ref="0x2b08b4bc88b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b08b4bfd1c8" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b08b4bfd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4bfd518"/>
        <function-ref name="write" scoped="" ref="0x2b08b4bfd6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08b4bfae50" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08b4bfae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08b4bf91e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08b4bf9370"/>
        <function-ref name="led1On" scoped="" ref="0x2b08b4bf94f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08b4bf9680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08b4bf9808"/>
        <function-ref name="get" scoped="" ref="0x2b08b4bf9990"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08b4bf9b18"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08b4bf11a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4bf9ca0"/>
        <function-ref name="led0On" scoped="" ref="0x2b08b4bf9e28"/>
        <function-ref name="led2On" scoped="" ref="0x2b08b4bf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4bcb020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4bcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4bcb370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4bcb4f8"/>
        <function-ref name="request" scoped="" ref="0x2b08b4bcb680"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4bcb808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4bcb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b08b4bedb80" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2b08b4bedb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b4beb020"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b4beb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b08b4bfc020" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b08b4bfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4bfc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b08b4c3b100" loc="67:/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b08b4c3b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b4c3b450"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b4c3b5d8"/>
        <function-ref name="isState" scoped="" ref="0x2b08b4c3b760"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b4c3b8e8"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b4c3ba70"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b4c3bbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b08b4c39860" loc="66:/home/adrian/local/tinyos-2.1.1/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b08b4c39860"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b4c39bb0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b4c39d38"/>
        <function-ref name="isState" scoped="" ref="0x2b08b4c36020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b4c361a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b4c36330"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b4c364b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4c6b5d8" loc="66:/home/adrian/local/tinyos-2.1.1/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4c6b5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4c6b928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b08b4c6a1c8" loc="67:/home/adrian/local/tinyos-2.1.1/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b08b4c6a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b4c6a518"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b4c6a6a0"/>
        <function-ref name="isState" scoped="" ref="0x2b08b4c6a828"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b4c6a9b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b4c6ab38"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b4c6acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b08b4dcb2a8" loc="43:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4dcb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b4dcb5f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b4dcb780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b08b4dccc18" loc="42:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b08b4dccc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b08b4dcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4dcd960" loc="39:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4dcd960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4dcdcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4dcc020" loc="40:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4dcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4dcc370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4dcc4f8"/>
        <function-ref name="request" scoped="" ref="0x2b08b4dcc680"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4dcc808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4dcc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b08b4c83490" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4c83490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b4c837e0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b4c83968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b08b4c842f0" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b08b4c842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b08b4c84640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4c87b60" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4c87b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4c84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b08b4c7e8d0" loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b08b4c7e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b08b4c7ec20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b08b4c7eda8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b08b4c83020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4c831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4c821c8" loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4c821c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4c82518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4c826a0"/>
        <function-ref name="request" scoped="" ref="0x2b08b4c82828"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4c829b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4c82b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b08b4caa830" loc="296:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b08b4caa830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b4caab80"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b4caad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b08b4c79450" loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b08b4c79450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b4c797a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b4c79928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b08b4c94888" loc="99:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b08b4c94888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4c94bd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4c94d60"/>
        <function-ref name="request" scoped="" ref="0x2b08b4c93020"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4c931a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4c93330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b08b4c7a330" loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b08b4c7a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b08b4c7a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4c7dd20" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4c7dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4c7a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b08b4c955a8" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b08b4c955a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b08b4c958f8"/>
        <function-ref name="sleep" scoped="" ref="0x2b08b4c74de8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b08b4c95c08"/>
        <function-ref name="dataReady" scoped="" ref="0x2b08b4c94020"/>
        <function-ref name="initMaster" scoped="" ref="0x2b08b4c75020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b08b4c751a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b08b4c75330"/>
        <function-ref name="read" scoped="" ref="0x2b08b4c754b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b08b4c75640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b08b4c757c8"/>
        <function-ref name="setClock" scoped="" ref="0x2b08b4c75950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b08b4c75ad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b08b4c75c60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b08b4c74020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b08b4c741a8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4c74330"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b08b4c744b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b08b4c74640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b08b4c747c8"/>
        <function-ref name="getClock" scoped="" ref="0x2b08b4c74950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b08b4c74ad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b08b4c95a80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b08b4c95d90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b08b4c74c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b08b4c7a938" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b08b4c7a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b08b4c7ac88"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b08b4c7ae10"/>
        <function-ref name="splitRead" scoped="" ref="0x2b08b4c79020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4c791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4c771c8" loc="95:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4c771c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4c77518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4c776a0"/>
        <function-ref name="request" scoped="" ref="0x2b08b4c77828"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4c779b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4c77b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b08b4c90d40" loc="100:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08b4c90d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b08b4c920d8"/>
        <function-ref name="userId" scoped="" ref="0x2b08b4c92260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b08b4c92530" loc="101:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b08b4c92530"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b08b4c92880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b08b4cf3020" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b08b4cf3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b08b4cf3370"/>
        <function-ref name="sleep" scoped="" ref="0x2b08b4cf17c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b08b4cf3680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b08b4cf1950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b08b4cf3990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b08b4cf3b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b08b4cf3ca0"/>
        <function-ref name="read" scoped="" ref="0x2b08b4cf3e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b08b4cf2020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b08b4cf21a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b08b4cf2330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b08b4cf24b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b08b4cf2640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b08b4cf28c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b08b4cf2a50"/>
        <function-ref name="write" scoped="" ref="0x2b08b4cf2bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b08b4cf2d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b08b4cf1020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b08b4cf11a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b08b4cf1330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b08b4cf14b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b08b4cf34f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b08b4cf3808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b08b4cf1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b08b4ce4190" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b08b4ce4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4ce44e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4ce4668"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4ce47f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4ce4978"/>
        <function-ref name="get" scoped="" ref="0x2b08b4ce4b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4ce4c88"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ce4e10"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ce3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b08b4ceade0" loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b08b4ceade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4ce9170"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4ce92f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4ce9480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4ce9608"/>
        <function-ref name="get" scoped="" ref="0x2b08b4ce9790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4ce9918"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ce9aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ce9c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b08b4ce6c70" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b08b4ce6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4cea020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4cea1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4cea330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4cea4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4cea640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4cea7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4cea950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ceaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b08b4ce6438" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b08b4ce6438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08b4ce6788"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4ce6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b08b4ce3350" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b08b4ce3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b08b4ce36a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b08b4cf0dd0" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b08b4cf0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b08b4ced170"/>
        <function-ref name="sleep" scoped="" ref="0x2b08b4ceb640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b08b4ced480"/>
        <function-ref name="dataReady" scoped="" ref="0x2b08b4ceb7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b08b4ced790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b08b4ced918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b08b4cedaa0"/>
        <function-ref name="read" scoped="" ref="0x2b08b4cedc28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b08b4ceddb0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b08b4cec020"/>
        <function-ref name="setClock" scoped="" ref="0x2b08b4cec1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b08b4cec330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b08b4cec4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b08b4cec740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b08b4cec8c8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4ceca50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b08b4cecbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b08b4cecd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b08b4ceb020"/>
        <function-ref name="getClock" scoped="" ref="0x2b08b4ceb1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b08b4ceb330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b08b4ced2f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b08b4ced608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b08b4ceb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b08b4ce5020" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b08b4ce5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4ce5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4ce54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4ce5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4ce5808"/>
        <function-ref name="get" scoped="" ref="0x2b08b4ce5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4ce5b18"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ce5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ce5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b08b4da7020" loc="86:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b08b4da7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b08b4da7390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b08b4da7518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b08b4da5020" loc="89:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08b4da5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b08b4da5390"/>
        <function-ref name="configure" scoped="" ref="0x2b08b4da5518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4da8200" loc="85:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4da8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4da8570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4da86f8"/>
        <function-ref name="request" scoped="" ref="0x2b08b4da8880"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4da8a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4da8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b08b4da7760" loc="87:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08b4da7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b08b4da7ab0"/>
        <function-ref name="userId" scoped="" ref="0x2b08b4da7c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b5789620" loc="44:/home/adrian/local/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b5789620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b5789970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b08b5789bf8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b08b5789bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b08b5788020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b08b57881a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b08b5788330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08b57884b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b08b5785820" loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b08b5785820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b08b5785b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b08b5785d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b08b57848c0" loc="56:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08b57848c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b08b5784c30"/>
        <function-ref name="configure" scoped="" ref="0x2b08b5784db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b08b57830a0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b08b57830a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b08b57833f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b08b5783578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b08b5783700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08b5783888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b5787a28" loc="51:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b5787a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b5787d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b5785020"/>
        <function-ref name="request" scoped="" ref="0x2b08b57851a8"/>
        <function-ref name="granted" scoped="" ref="0x2b08b5785330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b57854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b08b5784020" loc="53:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08b5784020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b08b5784370"/>
        <function-ref name="userId" scoped="" ref="0x2b08b57844f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b08b5783b50" loc="69:/home/adrian/local/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b08b5783b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b5782020"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b57821a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b08b4d9b4a8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b08b4d9b4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4d9b7f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4d9b980"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4d9bb08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4d9bc90"/>
        <function-ref name="get" scoped="" ref="0x2b08b4d9be18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4d9a020"/>
        <function-ref name="set" scoped="" ref="0x2b08b4d9a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4d9a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4d9f880" loc="40:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4d9f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4d9fbd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4d9fd58"/>
        <function-ref name="request" scoped="" ref="0x2b08b4d9c020"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4d9c1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4d9c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b08b4d9c700" loc="44:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b08b4d9c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4d9ca50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4d9cbd8"/>
        <function-ref name="request" scoped="" ref="0x2b08b4d9cd60"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4d9b020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4d9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b08b4dc93c8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08b4dc93c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08b4dc9718"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08b4dc98a0"/>
        <function-ref name="led1On" scoped="" ref="0x2b08b4dc9a28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08b4dc9bb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08b4dc9d38"/>
        <function-ref name="get" scoped="" ref="0x2b08b4dc6020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08b4dc61a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08b4dc67c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4dc6330"/>
        <function-ref name="led0On" scoped="" ref="0x2b08b4dc64b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b08b4dc6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b08b4dc13b8" loc="50:/home/adrian/local/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b08b4dc13b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4dc1708"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4dc1890"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4dc1a18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4dc1ba0"/>
        <function-ref name="get" scoped="" ref="0x2b08b4dc1d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4dbf020"/>
        <function-ref name="set" scoped="" ref="0x2b08b4dbf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4dbf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4dc3670" loc="46:/home/adrian/local/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4dc3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4dc39c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b08b4dbf648" loc="51:/home/adrian/local/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b08b4dbf648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4dbf998"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4dbfb20"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4dbfca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4dbfe30"/>
        <function-ref name="get" scoped="" ref="0x2b08b4dbe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4dbe1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4dbe330"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4dbe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b08b4dc3c38" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08b4dc3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08b4dc2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08b4dc21a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b08b4dc2330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08b4dc24b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08b4dc2640"/>
        <function-ref name="get" scoped="" ref="0x2b08b4dc27c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08b4dc2950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08b4dc1020"/>
        <function-ref name="set" scoped="" ref="0x2b08b4dc2ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08b4dc2c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b08b4dc2de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b08b4dbe7d0" loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b08b4dbe7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4dbeb20"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4dbeca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4dbee30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4dbd020"/>
        <function-ref name="get" scoped="" ref="0x2b08b4dbd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4dbd330"/>
        <function-ref name="set" scoped="" ref="0x2b08b4dbd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4dbd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b08b4dc4b18" loc="44:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b08b4dc4b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4dc4e68"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4de1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4de11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4de1330"/>
        <function-ref name="get" scoped="" ref="0x2b08b4de14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4de1640"/>
        <function-ref name="set" scoped="" ref="0x2b08b4de17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4de1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b08b4de1ca8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b08b4de1ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4de0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4de01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4de0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4de04b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4de0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4de07c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4de0950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4de0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b08b4dde020" loc="47:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4dde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4dde370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b08b4de0e30" loc="46:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b08b4de0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4ddf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4ddf330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4ddf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4ddf640"/>
        <function-ref name="get" scoped="" ref="0x2b08b4ddf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4ddf950"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ddfad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ddfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b08b4e497c0" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4e497c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e49d10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b08b4e14cd0" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b08b4e14cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e130a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b08b4e4d7c0" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4e4d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e4db10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e4dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b08b4e472e8" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4e472e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e47638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e477c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b08b4e47a88" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b08b4e47a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e47dd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b08b4e3b2e8" loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4e3b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e3b638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e3b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b08b4e3e2e8" loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b08b4e3e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e3e638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e3e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b08b4e12020" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4e12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e12370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b08b4e3f2e8" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4e3f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e3f638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e3f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b08b4e4c7c0" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b08b4e4c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e4cb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e4cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b08b4e4b7c0" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4e4b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e4bb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e4bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b08b4e44a88" loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b08b4e44a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e44dd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b08b4e462e8" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b08b4e462e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e46638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e467c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b08b4e15740" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4e15740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b08b4e15a90"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b08b4e15c18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b08b4e15da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b08b4e51900" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4e51900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e51c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b08b4e4f020" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b08b4e4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e4f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b08b4e4f738" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b08b4e4f738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e4fa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b08b4e3fa88" loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4e3fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e3fdd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b08b4e12c50" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b4e12c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b08b4e4b020" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b4e4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e4b370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e4b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b08b4e4c020" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4e4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e4c370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e4c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b08b4e146b8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b08b4e146b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e14a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b08b4e3ca88" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4e3ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e3cdd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b08b4e3ea88" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b08b4e3ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e3edd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b08b4e422e8" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b08b4e422e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e42638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e427c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b08b4e40a88" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b08b4e40a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e40dd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b08b4e452e8" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b08b4e452e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e45638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e457c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b08b4e3ba88" loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4e3ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4e3a5e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4e3a770"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e3a8f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4e3aa80"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4e3ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b08b4e140a0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b08b4e140a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e143f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b08b4e4d020" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b08b4e4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e4d370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e4d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b08b4e49020" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b4e49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e49370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e494f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b08b4e46a88" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b08b4e46a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e46dd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b08b4e482e8" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b08b4e482e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e48638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e487c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b08b4e13368" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b08b4e13368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e136b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b08b4e48a88" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4e48a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e48dd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e47020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4e16a48" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4e16a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4e16d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4e15020"/>
        <function-ref name="request" scoped="" ref="0x2b08b4e151a8"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4e15330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4e154b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b08b4e4fd50" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4e4fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e4e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b08b4e4e9b8" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b08b4e4e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e4ed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b08b4e402e8" loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b08b4e402e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e40638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e407c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b08b4e41a88" loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b08b4e41a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e41dd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b08b4e512e8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4e512e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e51638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b08b4e412e8" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b4e412e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e41638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e417c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b08b4e3c2e8" loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b08b4e3c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e3c638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e3c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b08b4e42a88" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b4e42a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e42dd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b08b4e13980" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b08b4e13980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e13cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b08b4e442e8" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b08b4e442e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e44638"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e447c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b08b4e12638" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b08b4e12638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e12988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b08b4e45a88" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b08b4e45a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e45dd8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b08b4e4e3a0" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b08b4e4e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e4e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b08b4e39020" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4e39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4e39370"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4e394f8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e39680"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4e39808"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4e39990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b08b4e67c90" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4e67c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e663e8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e66570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b08b4e713a0" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b08b4e713a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e716f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b08b4e6bdd8" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4e6bdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e69170"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e692f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b08b4e657c0" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4e657c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e65b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e65c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b08b4e64020" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b08b4e64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e64370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e644f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b08b4e597c0" loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4e597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e59b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e59c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b08b4e5b7c0" loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b08b4e5b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5bb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b08b4e6f638" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4e6f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b08b4e5d7c0" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4e5d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5db10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b08b4e69d60" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b08b4e69d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e680d8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e68260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b08b4e68cc8" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4e68cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e670a0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e67228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b08b4e60020" loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b08b4e60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e60370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e604f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b08b4e647c0" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b08b4e647c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e64b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e64c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b08b4e33da0" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4e33da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b08b4e32170"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b08b4e322f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b08b4e32480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b08b4e6d020" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4e6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b08b4e6d638" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b08b4e6d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6da88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b08b4e6dd50" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b08b4e6dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b08b4e5b020" loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4e5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5b370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b08b4e6e2e8" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b4e6e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b08b4e68528" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b4e68528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e68878"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e68a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b08b4e695c0" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4e695c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e69910"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e69a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b08b4e32d60" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b08b4e32d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e710d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b08b4e59020" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4e59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e59370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e594f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b08b4e5a020" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b08b4e5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5a370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b08b4e607c0" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b08b4e607c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e60b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e60c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b08b4e5d020" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b08b4e5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5d370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b08b4e627c0" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b08b4e627c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e62b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e62c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b08b4e58020" loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4e58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4e58770"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4e588f8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e58a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4e58c08"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4e58d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b08b4e32748" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b08b4e32748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e32a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b08b4e6b638" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b08b4e6b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e6b988"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e6bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b08b4e674f0" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b4e674f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e67840"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e679c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b08b4e62020" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b08b4e62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e62370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e624f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b08b4e66838" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b08b4e66838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e66b88"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e66d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b08b4e719b8" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b08b4e719b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e71d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b08b4e65020" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4e65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e65370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e654f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4e331a8" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4e331a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4e334f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4e33680"/>
        <function-ref name="request" scoped="" ref="0x2b08b4e33808"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4e33990"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4e33b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b08b4e6c3a0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4e6c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b08b4e6b020" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b08b4e6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b08b4e5e7c0" loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b08b4e5e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5eb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b08b4e5e020" loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b08b4e5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5e370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b08b4e6e900" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4e6e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b08b4e5f7c0" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b4e5f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5fb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b08b4e5a7c0" loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b08b4e5a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5ab10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b08b4e5f020" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b4e5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e5f370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e5f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b08b4e6f020" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b08b4e6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b08b4e617c0" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b08b4e617c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e61b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e61c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b08b4e6fc50" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b08b4e6fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b08b4e61020" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b08b4e61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4e61370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e614f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b08b4e6c9b8" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b08b4e6c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4e6cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b08b4e570a0" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4e570a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4e573f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4e57578"/>
        <function-ref name="write" scoped="" ref="0x2b08b4e57700"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4e57888"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4e57a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b08b4e8f2b8" loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08b4e8f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b08b4e8f608"/>
        <function-ref name="changed" scoped="" ref="0x2b08b4e8f790"/>
        <function-ref name="amGroup" scoped="" ref="0x2b08b4e8f918"/>
        <function-ref name="setAddress" scoped="" ref="0x2b08b4e8faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b08b4e91d18" loc="40:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b08b4e91d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b08b4e7e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b08b4eb0140" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b4eb0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b08b4eb0490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b08b4eb0618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b08b4eb07a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b08b4eb0928"/>
        <function-ref name="setCca" scoped="" ref="0x2b08b4eb0ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b08b4eb0c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b08b4eafcc0" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b08b4eafcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b08b4eae0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b08b4eb1480" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b08b4eb1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b4eb17d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b4eb1958"/>
        <function-ref name="modify" scoped="" ref="0x2b08b4eb1ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b4eb1c68"/>
        <function-ref name="resend" scoped="" ref="0x2b08b4eb1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b08b4eb4c58" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b08b4eb4c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08b4eb1020"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4eb11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b08b4eae458" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b08b4eae458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b08b4eae7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b08b4ecd948" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b4ecd948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b08b4ecdc98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b08b4ecde20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b08b4ecc020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b08b4ecc1a8"/>
        <function-ref name="setCca" scoped="" ref="0x2b08b4ecc330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b08b4ecc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b08b4ec5460" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08b4ec5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08b4ec4900"/>
        <function-ref name="clear" scoped="" ref="0x2b08b4ec2020"/>
        <function-ref name="isValid" scoped="" ref="0x2b08b4ec4220"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ec2700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b08b4ef1de0" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4ef1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4ef0170"/>
        <function-ref name="write" scoped="" ref="0x2b08b4ef02f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b08b4ef0650" loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b08b4ef0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4ef09a0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4ef0b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b08b4ecc8c0" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b08b4ecc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b08b4eccc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b08b4ef4478" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4ef4478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4ef47c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b08b4eb8d60" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b08b4eb8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b08b4ec00d8"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4ec0260"/>
        <function-ref name="captured" scoped="" ref="0x2b08b4ec03e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b08b4ec0570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b08b4ecb9d8" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2b08b4ecb9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b4ec7088"/>
        <function-ref name="fired" scoped="" ref="0x2b08b4ec80f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b08b4ec8a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b4ec8580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08b4ec7510"/>
        <function-ref name="start" scoped="" ref="0x2b08b4eca768"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4ecac40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b08b4ec79a8" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b4ec79a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b08b4ec7cf8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b08b4ec7e80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b08b4ec6030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b08b4ec61b8"/>
        <function-ref name="getPower" scoped="" ref="0x2b08b4ec6340"/>
        <function-ref name="getLqi" scoped="" ref="0x2b08b4ec64c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b08b4ef6538" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4ef6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4ef6888"/>
        <function-ref name="write" scoped="" ref="0x2b08b4ef6a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b08b4ef6da8" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4ef6da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4ef5170"/>
        <function-ref name="write" scoped="" ref="0x2b08b4ef52f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b08b4eea750" loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b08b4eea750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b4eeaaa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b08b4eeac28"/>
        <function-ref name="sfd" scoped="" ref="0x2b08b4eeadb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b4eceb70" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b4eceb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b4ecd020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b4ecd1a8"/>
        <function-ref name="modify" scoped="" ref="0x2b08b4ecd330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b4ecd4b8"/>
        <function-ref name="resend" scoped="" ref="0x2b08b4ecd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b08b4eb6cb0" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4eb6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b08b4eb50a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b08b4eb5228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b08b4eb53b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b08b4ef4b68" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4ef4b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4ef3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b08b4ebfc98" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b08b4ebfc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4eb9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4eb91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4eb9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4eb94b8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4eb9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4eb97c8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4eb9950"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4eb9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4ecfb80" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4ecfb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4ece020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b08b4ec67f8" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b4ec67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b08b4ec6b48"/>
        <function-ref name="getHeader" scoped="" ref="0x2b08b4ec6cd0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b08b4ec6e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b08b4eb81d8" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08b4eb81d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b4eb8528"/>
        <function-ref name="isSet" scoped="" ref="0x2b08b4eb86b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b4eb8838"/>
        <function-ref name="set" scoped="" ref="0x2b08b4eb89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b08b4ef33d0" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4ef33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4ef3920"/>
        <function-ref name="write" scoped="" ref="0x2b08b4ef3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b08b4eb6020" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b08b4eb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4eb6370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4eb64f8"/>
        <function-ref name="request" scoped="" ref="0x2b08b4eb6680"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4eb6808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4eb6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b08b4ec08b8" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b08b4ec08b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4ec0d08"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4ebf020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4ebf1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4ebf330"/>
        <function-ref name="get" scoped="" ref="0x2b08b4ebf4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4ebf640"/>
        <function-ref name="set" scoped="" ref="0x2b08b4ebf7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4ebf950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b08b4ef0e80" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b08b4ef0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4eef1f8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4eef380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b08b4eef6f0" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4eef6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4eefa40"/>
        <function-ref name="write" scoped="" ref="0x2b08b4eefbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b08b4ef5670" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b08b4ef5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4ef59c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b08b4eb9e20" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b08b4eb9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4eb71a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4eb7330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4eb74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4eb7640"/>
        <function-ref name="get" scoped="" ref="0x2b08b4eb77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4eb7950"/>
        <function-ref name="set" scoped="" ref="0x2b08b4eb7ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4eb7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08b4eed0c0" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08b4eed0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08b4eed410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08b4eed598"/>
        <function-ref name="led1On" scoped="" ref="0x2b08b4eed720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08b4eed8a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08b4eeda30"/>
        <function-ref name="get" scoped="" ref="0x2b08b4eedbb8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08b4eedd40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08b4eec4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4eec020"/>
        <function-ref name="led0On" scoped="" ref="0x2b08b4eec1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b08b4eec330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b08b4ef1558" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4ef1558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4ef18a8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4ef1a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b08b4ece310" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b08b4ece310"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08b4ece660"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4ece7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b08b4eb5720" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4eb5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4eb5a70"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4eb5bf8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4eb5d80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4ef6020"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4ef61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b08b4ef5d40" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b08b4ef5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4ef40d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b08b4ef3e30" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b08b4ef3e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4ef11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b08b4ecb060" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b08b4ecb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b08b4ecb3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b08b4f61470" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b4f61470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f619c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f61b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b08b4f6c9b8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b08b4f6c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f6cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b08b4f65470" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b4f65470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f657c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f65948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b08b4f60d98" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4f60d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f5f170"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f5f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b08b4f5f5c0" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b08b4f5f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f5f910"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f5fa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b08b4f99c10" loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4f99c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f98020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b08b4f9cc10" loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b08b4f9cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9b020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b08b4f6bc50" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b08b4f6bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b08b4f9dc10" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b4f9dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9c020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b08b4f64470" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b08b4f64470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f647c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f64948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b08b4f63470" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b08b4f63470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f637c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f63948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b08b4f5c470" loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b08b4f5c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f5c7c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f5c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b08b4f5fd60" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b08b4f5fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f5e0d8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f5e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b08b4f6d430" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b4f6d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b08b4f6d780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b08b4f6d908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b08b4f6da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b08b4f69638" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b4f69638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f69988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b08b4f69c50" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b08b4f69c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f670d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b08b4f673a0" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b08b4f673a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f676f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b08b4f9c470" loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4f9c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9c7c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b08b4f6a900" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b4f6a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f6ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b08b4f64c10" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b4f64c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f63020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b08b4f65c10" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b4f65c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f64020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b08b4f6c3a0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b08b4f6c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f6c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b08b4f99470" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b08b4f99470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f997c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f99948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b08b4f9b470" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b08b4f9b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9b7c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b08b4f5cc10" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b08b4f5cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9f020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b08b4f9d470" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b08b4f9d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9d7c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b08b4f5ecc8" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b08b4f5ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f5d0a0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f5d228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b08b4f98470" loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4f98470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4f98bc0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4f98d48"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f97020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4f971a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4f97330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b08b4f6dd58" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b08b4f6dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f6c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b08b4f66c50" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b08b4f66c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f65020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b08b4f63c10" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b4f63c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f61020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b08b4f5e528" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b08b4f5e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f5e878"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f5ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b08b4f61e10" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b08b4f61e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f601a8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f60330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b08b4f6b020" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b08b4f6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f6b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b08b4f605f8" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4f605f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f60948"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f60ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b4f6e7d0" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b4f6e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4f6eb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4f6eca8"/>
        <function-ref name="request" scoped="" ref="0x2b08b4f6ee30"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4f6d020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4f6d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b08b4f679b8" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4f679b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f67d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b08b4f66638" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b08b4f66638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f66988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b08b4f9ec10" loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b08b4f9ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9d020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b08b4f9e470" loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b08b4f9e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9e7c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b08b4f69020" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4f69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f69370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b08b4f9fc10" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b4f9fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9e020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b08b4f9bc10" loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b08b4f9bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f99020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b08b4f9f470" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b4f9f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f9f7c0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f9f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b08b4f6b638" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b08b4f6b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f6b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b08b4f5dc90" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b08b4f5dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f5c020"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f5c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b08b4f6a2e8" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b08b4f6a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f6a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b08b4f5d4f0" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b08b4f5d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4f5d840"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f5d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b08b4f66020" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b08b4f66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4f66370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b08b4f975f8" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b08b4f975f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4f97948"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4f97ad0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4f97c58"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4f97de0"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4f96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b08b4f8b868" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b08b4f8b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b4f8bbb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b08b4f8bd40"/>
        <function-ref name="sfd" scoped="" ref="0x2b08b4f8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b4f8a2f0" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b4f8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b4f8a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b08b4f8aa48" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b08b4f8aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b08b4f8ad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b08b4f8b080" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b08b4f8b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08b4f8b3d0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4f8b558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b08b4f82998" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b08b4f82998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4f82ce8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4f82e70"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4f81020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4f811a8"/>
        <function-ref name="get" scoped="" ref="0x2b08b4f81330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4f814b8"/>
        <function-ref name="set" scoped="" ref="0x2b08b4f81640"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4f817c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b08b4fc0cb8" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b08b4fc0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b08b4fbf0a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b08b4fbf228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b08b4fbf3b0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b08b4fbf538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b08b4fbf6c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b08b4fbf848"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08b4fbf9d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b08b4fbfb58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b08b4fbfce0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b08b4fbfe68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b08b4fbe020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b08b4fbe1a8"/>
        <function-ref name="sync" scoped="" ref="0x2b08b4fbe330"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08b4fbe5b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b08b4fbe740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b08b4fa9020" loc="148:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2b08b4fa9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b4fa9370"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b4fa94f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b08b4fbed08" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08b4fbed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08b4fbc1f0"/>
        <function-ref name="clear" scoped="" ref="0x2b08b4fbc8d0"/>
        <function-ref name="isValid" scoped="" ref="0x2b08b4fbdac0"/>
        <function-ref name="set" scoped="" ref="0x2b08b4fba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b08b4f81b28" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b08b4f81b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4f81e78"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4f80030"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4f801b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4f80340"/>
        <function-ref name="get" scoped="" ref="0x2b08b4f804c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4f80650"/>
        <function-ref name="set" scoped="" ref="0x2b08b4f807d8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4f80960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b08b4fb98a8" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b4fb98a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4fb9bf8"/>
        <function-ref name="write" scoped="" ref="0x2b08b4fb9d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b08b4fb8130" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b08b4fb8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4fb8480"/>
        <function-ref name="write" scoped="" ref="0x2b08b4fb8608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b08b4fb7208" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b08b4fb7208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4fb7558"/>
        <function-ref name="write" scoped="" ref="0x2b08b4fb76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b08b4fc13a8" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b4fc13a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b08b4fc16f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b08b4fc1880"/>
        <function-ref name="getRssi" scoped="" ref="0x2b08b4fc1a08"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b08b4fc1b90"/>
        <function-ref name="getPower" scoped="" ref="0x2b08b4fc1d18"/>
        <function-ref name="getLqi" scoped="" ref="0x2b08b4fc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b08b4f85e48" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b08b4f85e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b4f841c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b08b4f84348"/>
        <function-ref name="sfd" scoped="" ref="0x2b08b4f844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b08b4fc2520" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b08b4fc2520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4fc2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b08b4f836b8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b08b4f836b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08b4f83a08"/>
        <function-ref name="isInput" scoped="" ref="0x2b08b4f83b90"/>
        <function-ref name="toggle" scoped="" ref="0x2b08b4f83d18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08b4f82020"/>
        <function-ref name="get" scoped="" ref="0x2b08b4f821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08b4f82330"/>
        <function-ref name="set" scoped="" ref="0x2b08b4f824b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08b4f82640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b08b4fb7a70" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b4fb7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4fb7dc0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4fb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b4f85020" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b4f85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b4f85370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b08b4fc0350" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b4fc0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b08b4fc06a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b08b4fc0828"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b08b4fc09b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b4f847a0" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b4f847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b4f84af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b08b4f7e900" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b08b4f7e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b4f7ec50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b4f7edd8"/>
        <function-ref name="request" scoped="" ref="0x2b08b4fc3020"/>
        <function-ref name="granted" scoped="" ref="0x2b08b4fc31a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b4fc3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b08b4fb8960" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b08b4fb8960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4fb8cb0"/>
        <function-ref name="write" scoped="" ref="0x2b08b4fb8e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b08b4fc36a0" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b08b4fc36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b4fc39f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b4fc3b78"/>
        <function-ref name="write" scoped="" ref="0x2b08b4fc3d00"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b4fc2020"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b4fc21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b08b4fb6398" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b08b4fb6398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4fb68e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b08b4f83020" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b08b4f83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b08b4f83370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08b4fb6ba0" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08b4fb6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08b4fb5020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08b4fb51a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b08b4fb5330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08b4fb54b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08b4fb5640"/>
        <function-ref name="get" scoped="" ref="0x2b08b4fb57c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08b4fb5950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08b4fb4020"/>
        <function-ref name="set" scoped="" ref="0x2b08b4fb5ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08b4fb5c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b08b4fb5de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b08b4fb9020" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b4fb9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b4fb9370"/>
        <function-ref name="write" scoped="" ref="0x2b08b4fb94f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b08b4fba8e0" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b08b4fba8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4fbac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b08b4f80d40" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b08b4f80d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08b4f7e0d8"/>
        <function-ref name="disable" scoped="" ref="0x2b08b4f7e260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b08b4f7e3e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b08b4f7e570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b08b4fc2c10" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b4fc2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b4fc10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b08b4f85660" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b08b4f85660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08b4f859b0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b4f85b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b08b501f6b0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b501f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b08b501fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b08b50234b8" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50234b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b08b5023808"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b08b5023990"/>
        <function-ref name="getRssi" scoped="" ref="0x2b08b5023b18"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b08b5023ca0"/>
        <function-ref name="getPower" scoped="" ref="0x2b08b5023e28"/>
        <function-ref name="getLqi" scoped="" ref="0x2b08b5020020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b08b501e130" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b08b501e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08b501d588"/>
        <function-ref name="clear" scoped="" ref="0x2b08b501dc68"/>
        <function-ref name="isValid" scoped="" ref="0x2b08b501ee80"/>
        <function-ref name="set" scoped="" ref="0x2b08b501b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b08b5020d08" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5020d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b08b501f0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b08b501f228"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b08b501f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b08b5017ac8" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08b5017ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b5017e18"/>
        <function-ref name="isSet" scoped="" ref="0x2b08b5016020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b50161a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5016330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b08b501a020" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08b501a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08b5019478"/>
        <function-ref name="clear" scoped="" ref="0x2b08b5019b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b08b501ad70"/>
        <function-ref name="set" scoped="" ref="0x2b08b5017278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b08b50203b8" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b08b50203b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08b5020708"/>
        <function-ref name="noAck" scoped="" ref="0x2b08b5020890"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08b5020a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b08b5011630" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08b5011630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b08b5011980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b08b50132e8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b50132e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b08b5013638"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b08b50137c0"/>
        <function-ref name="getRssi" scoped="" ref="0x2b08b5013948"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b08b5013ad0"/>
        <function-ref name="getPower" scoped="" ref="0x2b08b5013c58"/>
        <function-ref name="getLqi" scoped="" ref="0x2b08b5013de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b08b5050618" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08b5050618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b5050968"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b5050af0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5050c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b5050e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b504f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b08b5010060" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b08b5010060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08b500f4b8"/>
        <function-ref name="clear" scoped="" ref="0x2b08b500fb98"/>
        <function-ref name="isValid" scoped="" ref="0x2b08b5010db0"/>
        <function-ref name="set" scoped="" ref="0x2b08b500d2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b08b5012b60" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5012b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5011020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b08b50111a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b08b5011330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b08b5051ac8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08b5051ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b5051e18"/>
        <function-ref name="isSet" scoped="" ref="0x2b08b5050020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b50501a8"/>
        <function-ref name="set" scoped="" ref="0x2b08b5050330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b08b504f520" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b08b504f520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b504e0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b08b504e788" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b08b504e788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b504d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b08b500c020" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08b500c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08b500b478"/>
        <function-ref name="clear" scoped="" ref="0x2b08b500bb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b08b500cd70"/>
        <function-ref name="set" scoped="" ref="0x2b08b5051278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b08b5012210" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b08b5012210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08b5012560"/>
        <function-ref name="noAck" scoped="" ref="0x2b08b50126e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08b5012870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b08b5090528" loc="48:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b08b5090528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b508e0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b08b508e720" loc="49:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08b508e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413ad70"/>
            <typename><typedef-ref name="T32khz" ref="0x2b08b4139178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08b508d578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08b508c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08b508da00"/>
        <function-ref name="overflow" scoped="" ref="0x2b08b508c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08b508a730" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08b508a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08b413a608"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08b413a960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08b5086a18"/>
        <function-ref name="fired" scoped="" ref="0x2b08b5087158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08b5087e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08b50879f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b08b50852e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b08b5086e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08b50875a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08b5089370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08b5086448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08b5089810"/>
        <function-ref name="stop" scoped="" ref="0x2b08b5089cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b08b5076c90" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b08b5076c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50bd3e8"/>
        <function-ref name="write" scoped="" ref="0x2b08b50bd570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b08b507f2e8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b08b507f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507f638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b08b5079dd8" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b08b5079dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b5078170"/>
        <function-ref name="write" scoped="" ref="0x2b08b50782f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b08b50bc7c0" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b08b50bc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50bcb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50bcc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b08b50bb020" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b08b50bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50bb370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50bb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b08b50b17c0" loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b08b50b17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b1b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b08b50b37c0" loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b08b50b37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b3b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b08b507e638" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b08b507e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b08b50b47c0" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b08b50b47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b4b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b08b5078d60" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b08b5078d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50770d8"/>
        <function-ref name="write" scoped="" ref="0x2b08b5077260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b08b5077cc8" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b08b5077cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50760a0"/>
        <function-ref name="write" scoped="" ref="0x2b08b5076228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b08b50b8020" loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b08b50b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b8370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b08b50bb7c0" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b08b50bb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50bbb10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50bbc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b08b5082cd8" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b08b5082cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b08b50800a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b08b5080228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b08b50803b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b08b507c020" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b08b507c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b08b507c638" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b08b507c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507ca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b08b507cd50" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b08b507cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b08b50b3020" loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b08b50b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b3370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b08b507d2e8" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b08b507d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507d638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b08b5077528" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b08b5077528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b5077878"/>
        <function-ref name="write" scoped="" ref="0x2b08b5077a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b08b50785c0" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b08b50785c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b5078910"/>
        <function-ref name="write" scoped="" ref="0x2b08b5078a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b08b5080c90" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b08b5080c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b08b50b1020" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b08b50b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b1370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b08b50b2020" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b08b50b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b2370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b08b50b87c0" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b08b50b87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b8b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b8c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b08b50b4020" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b08b50b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b4370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b08b50ba7c0" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b08b50ba7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50bab10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50bac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b08b50af020" loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b08b50af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b50af770"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b50af8f8"/>
        <function-ref name="write" scoped="" ref="0x2b08b50afa80"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b50afc08"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b50afd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b08b5080678" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b08b5080678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b50809c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b08b5079638" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b08b5079638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b5079988"/>
        <function-ref name="write" scoped="" ref="0x2b08b5079b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b08b50764f0" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b08b50764f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b5076840"/>
        <function-ref name="write" scoped="" ref="0x2b08b50769c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b08b50ba020" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b08b50ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50ba370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50ba4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b08b50bd838" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b08b50bd838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50bdb88"/>
        <function-ref name="write" scoped="" ref="0x2b08b50bdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b08b507f900" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b08b507f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b08b50bc020" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b08b50bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50bc370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50bc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b50820e0" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b50820e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b5082430"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b50825b8"/>
        <function-ref name="request" scoped="" ref="0x2b08b5082740"/>
        <function-ref name="granted" scoped="" ref="0x2b08b50828c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b5082a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b08b507a3a0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b08b507a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b08b5079020" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b08b5079020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b5079370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b08b50b57c0" loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b08b50b57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b5b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b08b50b5020" loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b08b50b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b5370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b08b507d900" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b08b507d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b08b50b67c0" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b08b50b67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b6b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b08b50b27c0" loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b08b50b27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b2b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b08b50b6020" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b08b50b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b6370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b08b507e020" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b08b507e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b08b50b97c0" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b08b50b97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b9b10"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b08b507ec50" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b08b507ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b08b50b9020" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b08b50b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b08b50b9370"/>
        <function-ref name="write" scoped="" ref="0x2b08b50b94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b08b507a9b8" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b08b507a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b08b507ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b08b50ae0a0" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b08b50ae0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b08b50ae3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b08b50ae578"/>
        <function-ref name="write" scoped="" ref="0x2b08b50ae700"/>
        <function-ref name="beginRead" scoped="" ref="0x2b08b50ae888"/>
        <function-ref name="readDone" scoped="" ref="0x2b08b50aea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b08b50da740" loc="67:/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b08b50da740"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b50daa90"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b50dac18"/>
        <function-ref name="isState" scoped="" ref="0x2b08b50dada0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b50d9020"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b50d91a8"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b50d9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08b50cf020" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08b50cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b50cf370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b50cf4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b50cf680"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b50cf808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b50cf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b50d0210" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b50d0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b50d0560"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b50d06e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b50d0870"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b50d09f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b50d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08b50cbc78" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08b50cbc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b50ca020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b50ca1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b50ca330"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b50ca4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b50ca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b50ce8e8" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b50ce8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b50cec38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b50cedc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b50cb020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b50cb1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b50cb330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b08b50c9740" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08b50c9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08b50c9a90"/>
        <function-ref name="rand32" scoped="" ref="0x2b08b50c9c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b50cb5a8" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b50cb5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b50cb8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b08b50c8020" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b50c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b08b50c8370"/>
        <function-ref name="getHeader" scoped="" ref="0x2b08b50c84f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b08b50c8680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b08b50ca8c0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b08b50ca8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b50cac10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b50cad98"/>
        <function-ref name="isState" scoped="" ref="0x2b08b50c9020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b50c91a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b50c9330"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b50c94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b08b50cdc58" loc="67:/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b08b50cdc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b50cc020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b50cc1a8"/>
        <function-ref name="isState" scoped="" ref="0x2b08b50cc330"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b50cc4b8"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b50cc640"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b50cc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08b50fe870" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08b50fe870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b50febc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b5101a30" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b5101a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b5101d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b08b50fe168" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b08b50fe168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b50fe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08b50f9128" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08b50f9128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b50f9478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b50fa9e0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b50fa9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b50fad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b50fdcd8" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b50fdcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b50fa0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b08b50f9768" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b50f9768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b08b50f9ab8"/>
        <function-ref name="getHeader" scoped="" ref="0x2b08b50f9c40"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b08b50f9dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b08b50fa418" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b08b50fa418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b50fa768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08b51171f0" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08b51171f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b5117540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08b5117840" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08b5117840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b5117b90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5117d18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b5116020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b51161a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b5116330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b511bdb0" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b511bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b511a170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b511a2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b511a480"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b511a608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b511a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b08b51190c8" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b08b51190c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b5119418"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b51195a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b5119728"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b51198b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b5119a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b511aa20" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b511aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b511ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b511b1c8" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b511b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b511b518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b511b6a0"/>
        <function-ref name="request" scoped="" ref="0x2b08b511b828"/>
        <function-ref name="granted" scoped="" ref="0x2b08b511b9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b511bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b08b5119d90" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b08b5119d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b5118170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b08b51184a0" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b08b51184a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b51187f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b5118978"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5118b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b5118c88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b5118e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08b510da40" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08b510da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b510dd90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5158020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b51581a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b5158330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b51584b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08b51587f0" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08b51587f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b5158b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b08b5177080" loc="180:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x2b08b5177080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b51773d0"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b5177558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b08b5158e08" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b5158e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b08b51571a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b08b5157330"/>
        <function-ref name="getRssi" scoped="" ref="0x2b08b51574b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b08b5157640"/>
        <function-ref name="getPower" scoped="" ref="0x2b08b51577c8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b08b5157950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b08b510f828" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b08b510f828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b510fb78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b510fd00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b510e020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b510e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b510e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b08b5156678" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b08b5156678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b08b51569c8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b08b5156b50"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b08b5156cd8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08b5156e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b08b5157c40" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b5157c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5156020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b08b51561a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b08b5156330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b08b510f1b8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b08b510f1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b510f508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08b5112758" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08b5112758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b5112aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b5112c30"/>
        <function-ref name="request" scoped="" ref="0x2b08b5112db8"/>
        <function-ref name="granted" scoped="" ref="0x2b08b5111020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b51111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b08b51114b8" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b08b51114b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b5111808"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5111990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b5111b18"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b5111ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b5111e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b08b510e688" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b08b510e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b510e9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b08b510ed08" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b08b510ed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b510d0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b510d228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b510d3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b510d538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b510d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08b51a50e0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08b51a50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08b51a5430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b08b51a56b8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b08b51a56b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b08b51a5a08"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b08b51a5b90"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b08b51a5d18"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08b51a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08b5199470" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08b5199470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08b51997c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08b5199948"/>
        <function-ref name="start" scoped="" ref="0x2b08b5199ad0"/>
        <function-ref name="stop" scoped="" ref="0x2b08b5199c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08b5197020" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08b5197020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b5197370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b51974f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b5197680"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b5197808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b5197990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08b5197cc8" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08b5197cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b51960a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b519d540" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b519d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b519d890"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b519da18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b519dba0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b519dd28"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b519a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08b519a8f8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b519a8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08b519ac48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08b519add0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08b5199020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08b51991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b08b5198020" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2b08b5198020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b5198370"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b51984f8"/>
        <function-ref name="isState" scoped="" ref="0x2b08b5198680"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b5198808"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b5198990"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b5198b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b08b5196410" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b08b5196410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08b5196760"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08b51968e8"/>
        <function-ref name="start" scoped="" ref="0x2b08b5196a70"/>
        <function-ref name="stop" scoped="" ref="0x2b08b5196bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b519a2b0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b519a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b519a600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08b5195838" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08b5195838"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08b5195b88"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08b5195d10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08b5192020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08b51921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b08b51946c8" loc="67:/home/adrian/local/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b08b51946c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b08b5194a18"/>
        <function-ref name="toIdle" scoped="" ref="0x2b08b5194ba0"/>
        <function-ref name="isState" scoped="" ref="0x2b08b5194d28"/>
        <function-ref name="isIdle" scoped="" ref="0x2b08b5193020"/>
        <function-ref name="requestState" scoped="" ref="0x2b08b51931a8"/>
        <function-ref name="forceState" scoped="" ref="0x2b08b5193330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08b51869c0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08b51869c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b5186d10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5185020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b51851a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b5185330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b51854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b5187080" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b5187080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b51873d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5187558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b51876e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b5187868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b51879f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b08b5187ca0" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b08b5187ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b08b5186020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b08b51861a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b08b5186330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b08b51864b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b08b5186640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b08b5182d98" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08b5182d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08b5181170"/>
        <function-ref name="noAck" scoped="" ref="0x2b08b51812f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08b5181480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b08b5182080" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b08b5182080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b08b51823d0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b08b5182558"/>
        <function-ref name="getRetries" scoped="" ref="0x2b08b51826e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b08b5182868"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b08b51829f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08b51b0cc8" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08b51b0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b51af0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08b51b0020" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08b51b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b51b0370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b51b04f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b51b0680"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b51b0808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b51b0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b08b51aeab0" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b08b51aeab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b08b51aee00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b08b51ad020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b08b51ad1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2b08b51ad330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b08b51ad4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b08b51ad640"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08b51ad7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b08b51ad950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b08b51adad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b08b51adc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b08b51adde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b08b51ac020"/>
        <function-ref name="sync" scoped="" ref="0x2b08b51ac1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08b51ac430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b08b51ac5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b08b51b1020" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b08b51b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b08b51b1370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b08b51b14f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b08b51b1680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b08b51b1808"/>
        <function-ref name="setCca" scoped="" ref="0x2b08b51b1990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b08b51b1b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b08b51b2400" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b08b51b2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b08b51b2750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b08b51ab6a0" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b08b51ab6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b08b51ab9f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b08b51abb78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b08b51abd00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b08b51aa020"/>
        <function-ref name="setCca" scoped="" ref="0x2b08b51aa1a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b08b51aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08b51b32a8" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08b51b32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b51b35f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b51b3780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b51b3908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b51b3a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b51b3c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08b51b8938" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08b51b8938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b51b8c88"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b51b8e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b51b7020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b51b71a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b51b7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b08b51b5628" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b08b51b5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b51b5978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b08b51af368" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b08b51af368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b08b51af6b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b08b51af840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b08b51af9c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b08b51afb50"/>
        <function-ref name="getPower" scoped="" ref="0x2b08b51afcd8"/>
        <function-ref name="getLqi" scoped="" ref="0x2b08b51afe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b08b51ac8d0" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08b51ac8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b08b51acd20"/>
        <function-ref name="changed" scoped="" ref="0x2b08b51ab020"/>
        <function-ref name="amGroup" scoped="" ref="0x2b08b51ab1a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b08b51ab330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b08b51ae188" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b08b51ae188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b08b51ae4d8"/>
        <function-ref name="getHeader" scoped="" ref="0x2b08b51ae660"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b08b51ae7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b51b7ab0" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b51b7ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b51b7e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08b51a82a8" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08b51a82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08b51a85f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08b51a8780"/>
        <function-ref name="led1On" scoped="" ref="0x2b08b51a8908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08b51a8a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08b51a8c18"/>
        <function-ref name="get" scoped="" ref="0x2b08b51a8da0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08b51a7020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08b51a7640"/>
        <function-ref name="set" scoped="" ref="0x2b08b51a71a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08b51a7330"/>
        <function-ref name="led2On" scoped="" ref="0x2b08b51a74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08b51b5c18" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08b51b5c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08b51b4020"/>
        <function-ref name="source" scoped="" ref="0x2b08b51b41a8"/>
        <function-ref name="address" scoped="" ref="0x2b08b51b4330"/>
        <function-ref name="destination" scoped="" ref="0x2b08b51b44b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08b51b4640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08b51b47c8"/>
        <function-ref name="type" scoped="" ref="0x2b08b51b4950"/>
        <function-ref name="setType" scoped="" ref="0x2b08b51b4ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08b51b4c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08b51b4de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08b51b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b08b51aa698" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x2b08b51aa698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08b51aa9e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08b51aab70"/>
        <function-ref name="request" scoped="" ref="0x2b08b51aacf8"/>
        <function-ref name="granted" scoped="" ref="0x2b08b51aae80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08b51a8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08b52d4080" loc="49:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="NodeC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08b52d4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b52d43d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b52d4558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b52d46e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b52d4868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b52d49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08b52d4c38" loc="50:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="NodeC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08b52d4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b52d2020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b52d21a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b52d2330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b52d24b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b52d2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08b52d2888" loc="51:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="NodeC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08b52d2888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08b52d2bd8"/>
        <function-ref name="source" scoped="" ref="0x2b08b52d2d60"/>
        <function-ref name="address" scoped="" ref="0x2b08b52d1020"/>
        <function-ref name="destination" scoped="" ref="0x2b08b52d11a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08b52d1330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08b52d14b8"/>
        <function-ref name="type" scoped="" ref="0x2b08b52d1640"/>
        <function-ref name="setType" scoped="" ref="0x2b08b52d17c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08b52d1950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08b52d1ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08b52d1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b08b52d0020" loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="NodeC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b08b52d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08b52d0370"/>
        <function-ref name="noAck" scoped="" ref="0x2b08b52d04f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08b52d0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08b58ae398" loc="49:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="NodeC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08b58ae398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b58ae6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b58ae870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b58ae9f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b58aeb80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b58aed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08b58ad020" loc="50:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="NodeC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08b58ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b58ad370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b58ad4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b58ad680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b58ad808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b58ad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08b58adbd8" loc="51:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="NodeC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08b58adbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08b58ac020"/>
        <function-ref name="source" scoped="" ref="0x2b08b58ac1a8"/>
        <function-ref name="address" scoped="" ref="0x2b08b58ac330"/>
        <function-ref name="destination" scoped="" ref="0x2b08b58ac4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08b58ac640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08b58ac7c8"/>
        <function-ref name="type" scoped="" ref="0x2b08b58ac950"/>
        <function-ref name="setType" scoped="" ref="0x2b08b58acad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08b58acc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08b58acde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08b58ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b08b58ab2a8" loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="NodeC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b08b58ab2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08b58ab5f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b08b58ab780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08b58ab908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08b58a2530" loc="44:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="NodeC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08b58a2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b58a2880"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b58a2a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b58a2b90"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b58a2d18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b58a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b08b58a12c8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="NodeC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b58a12c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b58a1618"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b58a17a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b58a1928"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b58a1ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b58a1c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b08b58a1e80" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="NodeC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08b58a1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08b58a01f8"/>
        <function-ref name="source" scoped="" ref="0x2b08b58a0380"/>
        <function-ref name="address" scoped="" ref="0x2b08b58a0508"/>
        <function-ref name="destination" scoped="" ref="0x2b08b58a0690"/>
        <function-ref name="setSource" scoped="" ref="0x2b08b58a0818"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08b58a09a0"/>
        <function-ref name="type" scoped="" ref="0x2b08b58a0b28"/>
        <function-ref name="setType" scoped="" ref="0x2b08b58a0cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08b58a0e38"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08b589f020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08b589f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b528f9b0" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b528f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b528fd00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b528b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b528b1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b528b330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b528b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b08b5295bd0" loc="48:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08b5295bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b52e6020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b52e61a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b52e6330"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b52e64b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b52e6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08b5296e40" loc="46:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08b5296e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08b52951e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b5295370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b52954f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08b5295680"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08b5295808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b08b52e4020" loc="50:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08b52e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b52e4370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b52e44f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b52e4680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b52e4808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b52e4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b08b52e4c58" loc="169:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b08b52e4c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b52e3020"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b52e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b08b52e3470" loc="126:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b08b52e3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08b52e37c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b08b52e3948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b08b52e6888" loc="49:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08b52e6888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08b52e6bd8"/>
        <function-ref name="source" scoped="" ref="0x2b08b52e6d60"/>
        <function-ref name="address" scoped="" ref="0x2b08b52e5020"/>
        <function-ref name="destination" scoped="" ref="0x2b08b52e51a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08b52e5330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08b52e54b8"/>
        <function-ref name="type" scoped="" ref="0x2b08b52e5640"/>
        <function-ref name="setType" scoped="" ref="0x2b08b52e57c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08b52e5950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08b52e5ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08b52e5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08b52c8928" loc="46:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="NodeC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08b52c8928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08b52c8c78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08b52c8e00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08b52c6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08b52c61a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08b52c6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08b52c8390" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="NodeC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08b52c8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08b52c86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08b52c6578" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <component-ref qname="NodeC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08b52c6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08b52c68c8"/>
        <function-ref name="source" scoped="" ref="0x2b08b52c6a50"/>
        <function-ref name="address" scoped="" ref="0x2b08b52c6bd8"/>
        <function-ref name="destination" scoped="" ref="0x2b08b52c6d60"/>
        <function-ref name="setSource" scoped="" ref="0x2b08b52c5020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08b52c51a8"/>
        <function-ref name="type" scoped="" ref="0x2b08b52c5330"/>
        <function-ref name="setType" scoped="" ref="0x2b08b52c54b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08b52c5640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08b52c57c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08b52c5950"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b08b41bb9a0" loc="62:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b08b41b9600" loc="60:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b08b41ce900" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b08b41ce690" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b08b41c20d8" loc="31:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b08b41c2ad0" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b08b41c2860" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b08b41c15a0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b08b41c1330" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b08b41c1de8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b08b41d9e28" loc="44:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b08b41d8520" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b08b41d90d8" loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b08b41d7328" loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08b41d9778" loc="43:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b08b41d8bd8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08b41da360" loc="40:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b08b41da9d0" loc="41:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b08b40af978" loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b08b40bb878" loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b08b40bb0d8" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b08b40bd608" loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b08b40bddf8" loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b08b4175cb0" loc="76:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b08b4197360" loc="62:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b08b411a940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b08b418ee68" loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08b447d0f0" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08b447d0f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b08b4476918" loc="136:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b08b447a4a8" loc="83:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b08b4478118" loc="114:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b08b4479b18" loc="114:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b08b4479e30" loc="114:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b08b44793e0" loc="98:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b08b4475878" loc="151:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b08b4475070" loc="144:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b08b447ac20" loc="92:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b08b447dbc0" loc="64:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b08b447d950" loc="64:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b08b4476020" loc="129:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b08b4478a48" loc="129:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b08b4478d60" loc="129:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b08b447b628" loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b08b447b3b8" loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08b447bdd0" loc="78:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b08b44cae40" loc="113:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b08b44cabd0" loc="113:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b08b44c7290" loc="138:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b08b44c7020" loc="138:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08b44ca258" loc="104:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08b44c9680" loc="130:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b08b449f338" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b449f0c8" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b08b449e338" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b449e0c8" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b08b44b4418" loc="126:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b449be10" loc="126:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b44b4160" loc="126:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b08b449b580" loc="106:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b08b449c6d0" loc="94:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b449c140" loc="94:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b449c450" loc="94:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08b44b95c0" loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b08b44b2c18" loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b08b44b9020" loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b44b9330" loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b08b44cea68" loc="135:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b44ce4a0" loc="135:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b44ce7b0" loc="135:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b08b44b6c58" loc="123:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b08b44b7890" loc="96:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b44b7620" loc="96:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08b44b5cf8" loc="110:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b44b5750" loc="110:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b08b44b5a78" loc="110:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b08b44917b8" loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="48:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b08b4491020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b08b44c55f8" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
              <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b44bac80" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b08b44c5020" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b44c5330" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b08b44bf790" loc="177:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b08b441edb8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08b44bf520" loc="177:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b08b44af6f8" loc="88:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08b44af488" loc="88:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b08b44a1c40" loc="68:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b08b44b06f0" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08b44b0480" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b08b44aa020" loc="121:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08b44ab8d0" loc="121:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08b44abc08" loc="121:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b08b44ada58" loc="103:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08b44ad4a0" loc="103:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08b44ad7d8" loc="103:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b08b44a83e0" loc="147:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08b44a8170" loc="147:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b08b44c1680" loc="162:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08b44c1100" loc="162:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b08b44c1400" loc="162:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b08b441ea08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b08b44a9290" loc="136:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08b44a9020" loc="136:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b08b44bdb48" loc="187:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08b441edb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08b44bd598" loc="187:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b08b44bd8c8" loc="187:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08b441edb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b08b44bb8e8" loc="195:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b08b441edb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b08b4589d98" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b08b4589d98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b08b45868c8" loc="64:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b08b4589d98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b08b4586658" loc="64:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b08b4589d98"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08b45b3340" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08b45b3340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b08b45b3bd0" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08b45c27c0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08b45c27c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b08b45c29f0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45c29f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b08b45bf328" loc="64:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45c29f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b08b45be360" loc="76:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b08b45bfb40" loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b08b45bea50" loc="82:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08b45ca528" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08b45ca528"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b08b45ca758" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45ca758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b08b45c5020" loc="109:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45ca758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b08b45c81d8" loc="78:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b08b45c76c0" loc="103:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45ca758"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45ca758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b08b45c7120" loc="103:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45ca758"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b08b45c7440" loc="103:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45ca758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b08b45c8948" loc="88:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b08b45c57a0" loc="116:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45ca758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08b45c9290" loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45ca758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b08b45c9020" loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45ca758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08b45c9a60" loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b08b45ef020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4147a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b08b4147e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b08b45ed360" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4154100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b08b4154508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b08b45ee1d8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b414c980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b08b414cd88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b08b45eeb90" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b414c980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b08b414cd88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b08b45ee920" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b414c980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b08b414cd88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b08b45edd18" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4154100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b08b4154508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b08b45edaa8" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4154100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b08b4154508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b08b45ef9f0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4147a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b08b4147e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b08b45ef780" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4147a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b08b4147e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b08b45fdbf8" loc="38:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b08b45fc3e0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b08b45fd4f0" loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b08b45fcb90" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b08b45fe328" loc="21:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b414e118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b08b414e520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b08b45fecd8" loc="27:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b414e118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b08b414e520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b08b45fea68" loc="27:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b414e118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b08b414e520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b08b45f0420" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45f0420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b08b4605a40" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b08b4607d88" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08b45f0cd8" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45f0420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b08b46064c0" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b08b46031d8" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08b4607648" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45f0420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b08b46073d8" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b45f0420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08b4606bb8" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08b4605328" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b08b45e1688" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08b45e1688"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b08b45f8cf0" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b08b45dbe20" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08b45de020" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08b45e1688"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b08b45f7690" loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b08b45f7420" loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b08b45f7e10" loc="110:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b08b45dd7f8" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b08b45dd0d8" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b08b45f85c8" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08b45de958" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08b45e1688"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b08b45de6e8" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08b45e1688"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08b45db020" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08b45db708" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b08b4782068" loc="35:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08b4782068"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b08b4782298" loc="35:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b4782298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b08b477e020" loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b4782298"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b477fd60" loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b08b47a2108" loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b477ee38" loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b08b4782db8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4782b48" loc="49:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08b47a1348" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b4782298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47a2d30" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b08b47a10c8" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b4782298"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b08b4796d88" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47967a0" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b08b4796b08" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b08b4794020" loc="71:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4795c48" loc="71:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b08b4796020" loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b08b47975c0" loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b08b4797350" loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b08b47856d8" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4785468" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b08b4784818" loc="71:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47845a8" loc="71:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b08b47818c8" loc="85:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4781658" loc="85:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b08b47bbd88" loc="95:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47bbb18" loc="95:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b08b47bd0a8" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47bedd0" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b08b47bf878" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b08b47bf608" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b08b47c4d78" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b08b47c4b08" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b08b47be290" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b08b47be020" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b08b47bb020" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47bdc28" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b08b47d42a0" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b08b47b8b60" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b08b47d4020" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b08b47a32a0" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b08b47a4cc0" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b08b47a3020" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b08b47c55f0" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b08b47c5020" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b08b47c5370" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b08b47a3d00" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b08b37dc908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b08b47a3a90" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b08b47c65e0" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b08b47c6370" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b08b47a4538" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b08b47a42c8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b08b47c87d8" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b08b47c8568" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b08b47d9cd8" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47d9a68" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b08b47b6020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47b99c8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b08b47b9d30" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b08b47dbd80" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47dbb10" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b08b47db348" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47b6d20" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b08b47db0c8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b08b47d7c10" loc="71:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47d79a0" loc="71:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b08b47a5e08" loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47a5b98" loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08b47cfe28" loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47cf898" loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b47cfba8" loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b08b47e72d8" loc="125:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="115:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47e9c90" loc="125:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b47e7020" loc="125:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b08b47e9488" loc="112:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="102:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b08b47ec0a8" loc="89:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="77:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47ede08" loc="89:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08b47ea5c8" loc="100:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b47ea020" loc="100:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b08b47ea348" loc="100:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b08b47cb020" loc="120:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b08b47cd020" loc="97:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b08b47ce700" loc="88:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b08b47cd7a8" loc="102:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b08b47cba08" loc="128:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08b4815050" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b08b47f0a88" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b08b47f0da0" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b08b4814258" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b08b48118d8" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b08b4813ae0" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b08b4811338" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b4811648" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08b4813348" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b08b4814d30" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b08b48130c8" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b08b4815a60" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b08b48157f0" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/adrian/local/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b08b47f27d0" loc="95:/home/adrian/local/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/adrian/local/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08b47f1020" loc="105:/home/adrian/local/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/adrian/local/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b08b4828ad8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4828830" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b08b48280a8" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b08b43e5598"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b08b43e4e58"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4829d90" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b08b4827ce8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b08b43f8938"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b08b43f6178"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4827a00" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b08b47f77e8" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b08b47f4778" loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b08b47f4020" loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b08b47f8020" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b08b47f7020" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b08b47f5020" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b08b47f57d0" loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b08b47f8818" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b08b480baf8" loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b08b480a258" loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b08b480a9c8" loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b08b4808848" loc="83:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b08b4807e70" loc="100:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08b4806630" loc="117:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b08b4808110" loc="77:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08b4805290" loc="134:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b08b4805020" loc="134:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b08b480b3e0" loc="56:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b08b4807020" loc="89:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b08b4807738" loc="94:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b08b4821178" loc="71:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="68:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b08b4823798" loc="56:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b08b48229b0" loc="66:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b08b4822740" loc="66:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b08b4822020" loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="58:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b08b4824508" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="40:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b08b4824298" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b08b4823020" loc="51:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b08b4824cc0" loc="51:/home/adrian/local/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b08b4869680" loc="106:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b08b48690c8" loc="106:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b08b4869400" loc="106:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b08b486b178" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b08b486c840" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b08b486c200" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b08b486c5c0" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b08b48710a8" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b08b4872e00" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b08b486b980" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b08b486e990" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b08b486e720" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b08b4870108" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b08b4871e40" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b08b4868828" loc="117:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b08b486da30" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b08b486d7c0" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b08b4868070" loc="112:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b08b4870828" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b08b4791340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b08b4791a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b08b486e020" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b08b48726d0" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b08b4871790" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b08b486d110" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Read.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b08b488c2a0" loc="49:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b08b488c2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b08b488cad8" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Read.nc">
        <documentation loc="50:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b08b488b7c8" loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Read.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b08b488c2a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b08b488b248" loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b08b488b548" loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b08b488c2a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b08b4890338" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b08b43e7828"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b48900c8" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b08b4890d90" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b08b43e7828"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4890b20" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b08b487e678" loc="48:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/adrian/local/tinyos-2.1.1/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b08b4791340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b08b4791a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b08b4898178" loc="50:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b08b4897020" loc="60:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b08b48988d8" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b08b441edb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b08b489a920" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08b441edb8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b08b489a368" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08b441edb8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b08b489a6a0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08b441d1b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b08b48b3328" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b08b43e7828"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b08b4895688" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b08b43e7828"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b08b489e870" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b08b48950c8" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b08b48953f8" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b08b4893de8" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b08b43e7828"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b08b4893020" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b08b4893828" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b08b4893b58" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b08b489ca78" loc="68:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b08b489c328" loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b08b489dba8" loc="54:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b08b489d360" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b08b495fa38" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4173928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b08b4173d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b08b49624f0" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b415e478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b08b415e880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b08b4962280" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b415e478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b08b415e880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b08b49607d0" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4169578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b08b4169980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b08b49380d8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b415ada8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b08b4159228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b08b495f290" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4169578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b08b4169980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b08b495f020" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4169578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b08b4169980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b08b495e478" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4173928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b08b4173d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b08b495e208" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b4173928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b08b4173d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b08b49630d8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b415c890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b08b415cc98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b08b49388d8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b415e478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b08b415e880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b08b4963ad0" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b415ada8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b08b4159228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b08b4963860" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b415ada8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b08b4159228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b08b4960020" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b415c890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b08b415cc98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b08b4962c50" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08b415c890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b08b415cc98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b08b495c1d0" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b495c1d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b08b4957ba0" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b08b4957930" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b08b4958a88" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08b495ca88" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b495c1d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b08b495adc8" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b495c1d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b08b495ab58" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b495c1d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b08b4959560" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b08b4957258" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08b495a420" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b495c1d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b08b495a1b0" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08b495c1d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08b4959c58" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08b4958378" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b08b4b0de70" loc="54:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b08b4b0a020" loc="66:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b08b4b0b7c0" loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b08b4b0b550" loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b08b4b0d688" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b08b4b1eb10" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b08b4b1c450" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b08b4b1e428" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b08b4b1dc60" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b08b4b1d9f0" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b08b4b22cf8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b08b4b1d290" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b08b4b37e60" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b08b4b92020" loc="24:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b08b4b92800" loc="31:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b08b4bc7020" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b08b4bdf348" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4be0d58" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b08b4bdf0c8" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b08b4bd92b0" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4bdb940" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b08b4bdbc70" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b08b4bd9020" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b08b4bdcc50" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b08b43e7828"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4bdc6a0" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b08b4bdc9d0" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b08b4be0020" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b08b43e7828"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4be1908" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b08b4be1c38" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b08b4bdd948" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4bdd060" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b08b4bdd390" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b08b4bdd6b8" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08b4bf52b0" loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b08b4bf6840" loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b08b4bf6ba0" loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b4bf5020" loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08b4bf4648" loc="82:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b08b4bf39b0" loc="82:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b08b4bf3d10" loc="82:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08b4bf4060" loc="82:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08b37ddb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b08b4bf43a8" loc="83:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b08b4bf7020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b08b4bfbcf0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b08b4c81780" loc="62:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4c81510" loc="62:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b08b4c7fab8" loc="74:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4c7f848" loc="74:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b08b4c7f020" loc="68:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b08b4c7e4f8" loc="81:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4c7e288" loc="81:/home/adrian/local/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b08b4ca5760" loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b08b4c9a020" loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b08b4ca0b98" loc="117:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b08b4c9a9c8" loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b08b4c9a758" loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b08b4ca5020" loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b08b4c9d640" loc="122:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b08b4c9d3d0" loc="122:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b08b4ca13f8" loc="113:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b08b4ca1188" loc="113:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b08b4ca3610" loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b08b4c95290" loc="141:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b08b4c95020" loc="141:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b08b4ca1b30" loc="114:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b08b4c99a30" loc="131:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b08b4c997c0" loc="131:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b08b4c988f0" loc="136:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b08b4c9c838" loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b08b4c9c5c8" loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b08b4c977d0" loc="140:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b08b4c9e588" loc="119:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b08b4c9e318" loc="119:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b08b4ca2020" loc="103:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4ca3cf8" loc="103:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b08b4ca0498" loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b08b4ca0228" loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b08b4c9de50" loc="123:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b08b4c99110" loc="129:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b08b4c98178" loc="132:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b08b4c97070" loc="138:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b08b4c9eca0" loc="120:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b08b4ca5e78" loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b08b4ca29a8" loc="109:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08b4ca2738" loc="109:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b08b4c901d8" loc="90:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b08b4c909c8" loc="98:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b08b4ce8748" loc="95:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08b4ce6020" loc="105:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b08b4d49880" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b08b4d48178" loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b08b4d44020" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b08b4d456f8" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b08b4d3bc80" loc="79:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08b40c01a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b08b4d41020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b08b4d3ba10" loc="79:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b08b4d41020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b08b4d40e18" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b08b4d3c8f0" loc="62:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b08b4d41020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b08b4d3c680" loc="62:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b08b4d41020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b08b4d3b1d8" loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b08b4d41020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b08b4eaf8d0" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b08b4eea400" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b08b4eeba68" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b08b4eea180" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b08b4eeb328" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b08b4eeeb40" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b08b4eee8d0" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08b37de608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b08b4ebcae8" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08b37dd160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4ebc878" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b08b4ec1b60" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08b40ad9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4ec18f0" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b08b4eba938" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4eba6c8" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08b4ebba20" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08b4ebb7b0" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08b442d780"/>
                <typename><typedef-ref name="message_t" ref="0x2b08b4444cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
