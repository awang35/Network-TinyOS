<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2aed68f3b728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aed68ff6b08"/></to>
    </wire>
    <wire loc="53:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2aed68f3abe8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2aed68ff7c00"/></to>
    </wire>
    <wire loc="55:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2aed68ff3020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2aed68f44dd8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TCPManagerC" loc="5:/home/adrian/git/tinyos-project1/pro1/src/lib/Modules/TCPManagerC.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/adrian/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="TCPManager" ref="0x2aed69076df0" loc="6:/home/adrian/git/tinyos-project1/pro1/src/lib/Modules/TCPManagerC.nc">
      <component-ref qname="TCPManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TCPManager" scoped="" ref="0x2aed69076df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TCPManager"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="TCPSocketAL" ref="0x2aed69029ac8"/>
            <typename><typedef-ref name="TCPSocketAL" ref="0x2aed690352d8"/></typename>
          </type-tag>
          <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2aed6903d640"/>
            <typename><typedef-ref name="pack" ref="0x2aed6903ca40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aed6907abb0"/>
        <function-ref name="socket" scoped="" ref="0x2aed69079088"/>
        <function-ref name="freeSocket" scoped="" ref="0x2aed69079510"/>
        <function-ref name="handlePacket" scoped="" ref="0x2aed690799a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TCPSocket" ref="0x2aed690914e8" loc="7:/home/adrian/git/tinyos-project1/pro1/src/lib/Modules/TCPManagerC.nc">
      <component-ref qname="TCPManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TCPSocket" scoped="" ref="0x2aed690914e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TCPSocket"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="TCPSocketAL" ref="0x2aed69029ac8"/>
            <typename><typedef-ref name="TCPSocketAL" ref="0x2aed690352d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="listen" scoped="" ref="0x2aed69082d40"/>
        <function-ref name="isClosing" scoped="" ref="0x2aed6909a4a8"/>
        <function-ref name="isConnectPending" scoped="" ref="0x2aed6908de40"/>
        <function-ref name="release" scoped="" ref="0x2aed6908f748"/>
        <function-ref name="read" scoped="" ref="0x2aed6908fc58"/>
        <function-ref name="init" scoped="" ref="0x2aed690820c0"/>
        <function-ref name="bind" scoped="" ref="0x2aed690825d0"/>
        <function-ref name="isClosed" scoped="" ref="0x2aed6909bda8"/>
        <function-ref name="isListening" scoped="" ref="0x2aed6909b898"/>
        <function-ref name="connect" scoped="" ref="0x2aed69090a40"/>
        <function-ref name="copy" scoped="" ref="0x2aed6909a9b8"/>
        <function-ref name="accept" scoped="" ref="0x2aed690903c8"/>
        <function-ref name="write" scoped="" ref="0x2aed6908d568"/>
        <function-ref name="close" scoped="" ref="0x2aed6908f238"/>
        <function-ref name="isConnected" scoped="" ref="0x2aed6909b388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aed68f3b728" loc="48:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2aed68f3b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aed68f3ba78"/>
        <function-ref name="runTask" scoped="" ref="0x2aed68f3bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aed68f3abe8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aed68f3abe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aed68f32020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aed68f321a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aed68f32330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aed68ff6b08" loc="56:/home/adrian/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2aed68ff6b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aed68ff6e58"/>
        <function-ref name="runTask" scoped="" ref="0x2aed68ff4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2aed68ff3020" loc="57:/home/adrian/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2aed68ff3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aed68ff3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aed68ff7c00" loc="55:/home/adrian/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aed68ff7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aed68ff6020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aed68ff61a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aed68ff6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2aed690167f0" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aed690167f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aed69016b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2aed68f44dd8" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2aed68f44dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aed6900d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2aed69018240" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aed69018240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aed69018590"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="TCPManager" loc="1:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPManager.nc">
      <parameters>
        <typedef name="val_t" ref="0x2aed6907b658" loc="1:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPManager.nc">
          <interfacedef-ref qname="TCPManager"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed6907b658"/></type-var>
        </typedef>
        <typedef name="val2_t" ref="0x2aed6907b868" loc="1:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPManager.nc">
          <interfacedef-ref qname="TCPManager"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val2_t" scoped="" ref="0x2aed6907b868"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2aed69078070" loc="2:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPManager.nc">
        <interfacedef-ref qname="TCPManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="socket" ref="0x2aed69078738" loc="3:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPManager.nc">
        <interfacedef-ref qname="TCPManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed6907b658"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="freeSocket" ref="0x2aed69076020" loc="4:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPManager.nc">
        <interfacedef-ref qname="TCPManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed6907b658"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2aed69078d50" loc="4:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPManager.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed6907b658"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="handlePacket" ref="0x2aed69076888" loc="5:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPManager.nc">
        <interfacedef-ref qname="TCPManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2aed69076618" loc="5:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPManager.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TCPSocket" loc="1:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
      <parameters>
        <typedef name="val_t" ref="0x2aed69083270" loc="1:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
          <interfacedef-ref qname="TCPSocket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="listen" ref="0x2aed6907e9e8" loc="6:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed6907e430" loc="6:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
          <variable name="backlog" ref="0x2aed6907e768" loc="6:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isClosing" ref="0x2aed69093420" loc="25:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aed68f2c9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed690931b0" loc="25:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isConnectPending" ref="0x2aed69087c88" loc="21:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aed68f2c9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed69087a18" loc="21:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="release" ref="0x2aed6908ba68" loc="14:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed6908b7f8" loc="14:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2aed69089de8" loc="16:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x2aed6865c658"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed69089178" loc="16:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
          <variable name="readBuffer" ref="0x2aed69089508" loc="16:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="pos" ref="0x2aed69089828" loc="16:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x2aed69089b48" loc="16:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2aed69083cf8" loc="2:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed69083a88" loc="2:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x2aed69080d18" loc="4:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed690803f0" loc="4:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
          <variable name="localPort" ref="0x2aed69080740" loc="4:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
            </type-int>
          </variable>
          <variable name="address" ref="0x2aed69080a88" loc="4:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isClosed" ref="0x2aed69094978" loc="24:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aed68f2c9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed69094708" loc="24:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isListening" ref="0x2aed69094020" loc="23:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aed68f2c9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed69085d20" loc="23:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x2aed6908c738" loc="10:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed6907ddc8" loc="10:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
          <variable name="destAddr" ref="0x2aed6908c160" loc="10:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x2aed6908c4a8" loc="10:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copy" ref="0x2aed690910b8" loc="27:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed69093ab0" loc="27:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
          <variable name="output" ref="0x2aed69093e08" loc="27:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="accept" ref="0x2aed6907d6d8" loc="8:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed6907d100" loc="8:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
          <variable name="output" ref="0x2aed6907d458" loc="8:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2aed690872c0" loc="18:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x2aed6865c658"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed69088518" loc="18:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
          <variable name="writeBuffer" ref="0x2aed690888b0" loc="18:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="pos" ref="0x2aed69088bd0" loc="18:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x2aed69087020" loc="18:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aed6865cb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x2aed6908b108" loc="12:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aed6865c160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed6908ce18" loc="12:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isConnected" ref="0x2aed69085620" loc="22:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aed68f2c9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2aed690853b0" loc="22:/home/adrian/git/tinyos-project1/pro1/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2aed69083270"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2aed68f3c608" loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aed68f3f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2aed68f3cdf8" loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2aed68f2e978" loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2aed68f3a878" loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2aed68f3a0d8" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aed68f2c9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2aed68ff4cb0" loc="76:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2aed69016360" loc="62:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2aed68f99940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2aed6900de68" loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
