<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="NodeC" loc="13:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
      <configuration/>
    </component>
    <component qname="MainC" loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="45:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="52:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Node" loc="27:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NodeC.pingTimeoutTimer" loc="44(NodeC.pingTimeoutTimer):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f34659d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad0f3465d28"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ad0f3bc9730"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f34659d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad0f3465d28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f34659d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad0f3465d28"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f34659d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2ad0f3465d28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.neighborDiscovery" loc="44(NodeC.neighborDiscovery):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.neighborMap" loc="44(NodeC.neighborMap):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.helloProtocol" loc="44(NodeC.helloProtocol):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.waitTimer" loc="44(NodeC.waitTimer):/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.AMSenderC" loc="47(NodeC.AMSenderC):/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.AMSenderC.SenderC" loc="47(NodeC.AMSenderC.SenderC):/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NodeC.AMSenderC.SenderC.AMQueueEntryP):/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.AMReceiverC" loc="43(NodeC.AMReceiverC):/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ad0f3bc9730" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ad0f3bc9730"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ad0f3bc9a20" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="37:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ad0f35bbad8" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ad0f35bbe40" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ad0f35df1e0" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ad0f35df510" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ad0f3654d90" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ad0f3651160" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ad0f36514c8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ad0f36517f8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad0f3d82b78" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad0f3d82b78"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ad0f3d7e020" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2ad0f3e3b2a8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ad0f35c5290" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ad0f35c55d8" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ad0f35c5920" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ad0f3eb6318" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad0f3d69300" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad0f3d69300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ad0f3bbec40" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ad0f3bbec40"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ad0f3bbb020" loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ad0f3ddb5a0" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ad0f3e16e48" loc="43:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ad0f3e1a348" loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad0f3dc3a18" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad0f3dc3a18"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2ad0f3740020" loc="113:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad0f3742d58" loc="113:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ad0f373f430" loc="138:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ad0f373f1c0" loc="138:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad0f37423e0" loc="104:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad0f3740808" loc="130:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/adrian/local/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ad0f355c1d8" loc="60:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ad0f3468a38" loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ad0f3467258" loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/adrian/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2ad0f3bd4c30" loc="38:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2ad0f3bd3450" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2ad0f3bd4528" loc="32:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2ad0f3bd3c00" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2ad0f3bd5378" loc="21:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b7f5e0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2ad0f3b7f9e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2ad0f3bd5d28" loc="27:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b7f5e0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ad0f3b7f9e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ad0f3bd5ab8" loc="27:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b7f5e0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ad0f3b7f9e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x2ad0f37636c8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2ad0f2539020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3763458" loc="45:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ad0f3736a38" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f37367c8" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ad0f375aa38" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f375a7c8" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad0f3758ca0" loc="126:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f37586d8" loc="126:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad0f37589e8" loc="126:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad0f375bcf8" loc="106:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ad0f3759e10" loc="94:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3759880" loc="94:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad0f3759b90" loc="94:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad0f3b53bf8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad0f3b53bf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ad0f3b8f4c8" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad0f373d5c0" loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ad0f3744bd8" loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ad0f373d020" loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad0f373d330" loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad0f3738a68" loc="135:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f37384a0" loc="135:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad0f37387b0" loc="135:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad0f373ac58" loc="123:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad0f373b890" loc="96:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f373b620" loc="96:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad0f3739cf8" loc="110:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3739750" loc="110:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad0f3739a78" loc="110:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2ad0f3a32020" loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="48:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2ad0f3a34710" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2ad0f3be4110" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b84ce0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ad0f3b83178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ad0f3be14c0" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b794b8"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ad0f3b798c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ad0f3be3328" loc="49:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b7dd48"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ad0f3b7b178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ad0f3be3ce0" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b7dd48"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ad0f3b7b178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ad0f3be3a70" loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b7dd48"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ad0f3b7b178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ad0f3be1e78" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b794b8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ad0f3b798c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ad0f3be1c08" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b794b8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ad0f3b798c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ad0f3be4ae0" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b84ce0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ad0f3b83178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ad0f3be4870" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b84ce0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ad0f3b83178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad0f3e0f2a0" loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3e12c38" loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad0f3e0f020" loc="75:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ad0f3e0b5e8" loc="125:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="115:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3e0b020" loc="125:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad0f3e0b330" loc="125:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ad0f3e0a740" loc="112:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="102:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad0f3e0e4e8" loc="89:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="77:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3e0e278" loc="89:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad0f3e0c8f0" loc="100:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3e0c348" loc="100:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad0f3e0c670" loc="100:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2ad0f3b404d0" loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad0f3b404d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2ad0f3b3c020" loc="64:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad0f3b404d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2ad0f3b40d08" loc="64:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ad0f3b404d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2ad0f3913800" loc="50:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2ad0f3912710" loc="60:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2ad0f3912020" loc="55:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad0f34234f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2ad0f3913020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad0f34234f8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2ad0f39169b0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad0f34234f8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ad0f3916ce8" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad0f3b983e8" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad0f3b983e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad0f3b98618" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3b98618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ad0f3b93020" loc="109:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3b98618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad0f3b96070" loc="78:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ad0f3b945c0" loc="103:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3b98618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3b98618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad0f3b94020" loc="103:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3b98618"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ad0f3b94340" loc="103:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3b98618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ad0f3b967e0" loc="88:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ad0f3b937a0" loc="116:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3b98618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad0f3b97108" loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3b98618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad0f3b98e68" loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3b98618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad0f3b978d8" loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ad0f355b4e8" loc="62:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ad0f3be65c8" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3be65c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2ad0f3bdbc50" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad0f3bdd020" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad0f3be6e80" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3be65c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ad0f3bdd728" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ad0f3bda3e0" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad0f3bde7f0" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3be65c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad0f3bde580" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3be65c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad0f3bdde20" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad0f3bdb538" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ad0f3760020" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
              <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3734668" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ad0f3734990" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad0f3734ca0" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x2ad0f3701020" loc="44:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x2ad0f3703c98" loc="44:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x2ad0f3700df8" loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x2ad0f2529660"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x2ad0f37004f0" loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x2ad0f3700828" loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad0f3700b68" loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x2ad0f2529660"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x2ad0f36ffb28" loc="49:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2ad0f36ff490" loc="48:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x2ad0f37035f8" loc="43:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ad0f3701e10" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x2ad0f3701760" loc="45:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad0f3bd0bc0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad0f3bd0bc0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ad0f3bd0df0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3bd0df0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ad0f3bcd6b8" loc="64:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ad0f3bd0df0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ad0f3bcc810" loc="76:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ad0f3bcc020" loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ad0f3bca020" loc="82:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ad0f356fe28" loc="44:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ad0f356e520" loc="45:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ad0f356f0d8" loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ad0f356d328" loc="47:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad0f356f778" loc="43:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ad0f356ebd8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad0f3571378" loc="40:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ad0f35719e8" loc="41:/home/adrian/local/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2ad0f3755cd8" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3755a68" loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2ad0f376f020" loc="71:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3770cb0" loc="71:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2ad0f376e108" loc="85:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f376fe28" loc="85:/home/adrian/local/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x2ad0f37dccc8" loc="48:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x2ad0f31241a0"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2ad0f37df978" loc="48:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x2ad0f37dfcf8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ad0f37dc060" loc="50:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x2ad0f37dc3d8" loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x2ad0f31241a0"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x2ad0f37dc6d0" loc="52:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x2ad0f37dca08" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x2ad0f380a5b8" loc="60:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f380a348" loc="60:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x2ad0f37dbc78" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x2ad0f37da3a0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x2ad0f37db5b0" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2ad0f37db340" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x2ad0f37dac80" loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f37daa10" loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x2ad0f3809020" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f380ac80" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ad0f37902f0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x2ad0f37669c8" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x2ad0f3766d28" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ad0f3790060" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x2ad0f378e6f0" loc="85:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f378e480" loc="85:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ad0f3790e50" loc="69:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f3790be0" loc="69:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ad0f378fcb0" loc="76:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f378f708" loc="76:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ad0f378fa30" loc="76:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x2ad0f378c118" loc="87:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ad0f378ee78" loc="87:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ad0f3bb3b70" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad0f3bb3b70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2ad0f3bec020" loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ad0f3bed178" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ad0f3bf1438" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad0f3bb3b70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2ad0f3bec970" loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2ad0f3bec700" loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2ad0f3bea178" loc="110:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ad0f3befc00" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ad0f3bef4e0" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ad0f3bed8d0" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ad0f3bf1d70" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad0f3bb3b70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ad0f3bf1b00" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ad0f3bb3b70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ad0f3bee328" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad0f3beea10" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2ad0f37773b0" loc="177:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad0f34234f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad0f3777140" loc="177:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ad0f3751290" loc="88:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad0f3751020" loc="88:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ad0f37547a8" loc="68:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ad0f3752290" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad0f3752020" loc="78:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ad0f374ea28" loc="121:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad0f374e470" loc="121:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad0f374e7a8" loc="121:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ad0f37505d8" loc="103:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad0f3750020" loc="103:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ad0f3750358" loc="103:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2ad0f374b020" loc="147:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad0f374dcf8" loc="147:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ad0f37782a0" loc="162:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad0f374bce8" loc="162:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2ad0f3778020" loc="162:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ad0f374cbf8" loc="136:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad0f374c988" loc="136:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ad0f37757b8" loc="187:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad0f34234f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ad0f3775208" loc="187:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
                <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ad0f3775538" loc="187:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ad0f34234f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2ad0f3774560" loc="195:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/adrian/local/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ad0f34234f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ad0f2528ca0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ad0f2f13b80" loc="72:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ad0f2f133e0" loc="65:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/adrian/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ad0f3a18338" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ad0f3a18338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ad0f3a10020" loc="136:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ad0f3a15710" loc="83:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ad0f3a135b8" loc="114:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad0f3a13020" loc="114:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ad0f3a13338" loc="114:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ad0f3a147b8" loc="98:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ad0f3a0f020" loc="151:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ad0f3a10740" loc="144:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ad0f3a14020" loc="92:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ad0f3a18e08" loc="64:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad0f3a18b98" loc="64:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ad0f3a125b8" loc="129:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ad0f3a12020" loc="129:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ad0f3a12338" loc="129:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ad0f3a178a0" loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ad0f3a17630" loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ad0f3a15070" loc="78:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <union loc="133:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b7dd48" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3b7df48" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3b7b020" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3b7d3e8"/></type-tag>
      </field>
    </union>
    <enum loc="185:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b76bf8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd" loc="9:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f252bc00" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x2ad0f252c0a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x2ad0f252c150" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="196:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b749b0" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x2ad0f3b74bb0" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x2ad0f3b74c60" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x2ad0f3b74d10" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x2ad0f3b74dc0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x2ad0f3332990" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x2ad0f33300a0" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x2ad0f2e14d98"/></type-tag>
      </field>
      <field name="it_value" ref="0x2ad0f3330150" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x2ad0f2e14d98"/></type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="18:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h" ref="0x2ad0f3420808" defined="" size="I:4" alignment="I:1">
      <field name="strength" ref="0x2ad0f341e0a0" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x2ad0f2d7a8e8"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x2ad0f341e150" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x2ad0f341e200" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2ad0f2d7fb28"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="gain_entry" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.h" ref="0x2ad0f32bc7e8" defined="" size="I:24" alignment="I:8">
      <field name="mote" ref="0x2ad0f32ba020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x2ad0f32ba0d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x2ad0f32ba180" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x2ad0f32bc7e8"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="296:/usr/include/math.h" ref="0x2ad0f304a1f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_gain_noise" loc="3:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c" ref="0x2ad0f32cb6b8" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x2ad0f32cbc48" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x2ad0f32cbcf8" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x2ad0f2525720" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="31:/usr/include/x86_64-linux-gnu/bits/time.h" ref="0x2ad0f2e1d6b8" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x2ad0f2e1dca0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x2ad0f2dfd988"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x2ad0f2e1dd50" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__suseconds_t" ref="0x2ad0f2dfc150"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="nonnull" loc="8:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f252b1e0" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2ad0f252b628" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="number"  loc="NONE" ref="0x2ad0f2521db0" size="V:" alignment="V:">
    </attribute>
    <struct ref="0x2ad0f251f4a0" size="V:" alignment="V:">
    </struct>
    <enum loc="94:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2ad0f341d440" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="63:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c" ref="0x2ad0f3160980" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="144:/usr/include/x86_64-linux-gnu/bits/types.h" ref="0x2ad0f2dff3c8" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0x2ad0f2dff5c8" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <union loc="76:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e299b0" defined="" size="I:40" alignment="I:8">
      <field name="__data" ref="0x2ad0f2e29bb0" bit-offset="I:0" size="I:40">
        <type-tag size="I:40" alignment="I:8"><struct-ref name="__pthread_mutex_s" ref="0x2ad0f2e2a098"/></type-tag>
      </field>
      <field name="__size" ref="0x2ad0f2e29c60" bit-offset="I:0" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2ad0f2e29d10" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="117:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e30dc8" defined="" size="I:48" alignment="I:8">
      <field name="__lock" ref="0x2ad0f2e2f020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x2ad0f2e2f0d0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x2ad0f2e2f180" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x2ad0f2e2f230" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x2ad0f2e2f2e0" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x2ad0f2e2f390" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x2ad0f2e2f440" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x2ad0f2e2f4f0" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="node" loc="62:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/heap.c" ref="0x2ad0f31b6888" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x2ad0f31b6e40" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x2ad0f31b6ef0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f354bd28" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="104:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f3542a38" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="hashmapEntry" loc="13:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/hashmap.h" ref="0x2ad0f34ace78" defined="" size="I:4" alignment="I:2">
      <field name="key" ref="0x2ad0f39344d8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="value" ref="0x2ad0f3934588" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="hashType" ref="0x2ad0f34ac4d0"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="serial_packet" loc="131:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2ad0f3416998" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x2ad0f34370a0" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x2ad0f3418618"/>
          <typename><typedef-ref name="serial_header_t" ref="0x2ad0f3416658"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x2ad0f3437150" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <attribute name="integer"  loc="NONE" ref="0x2ad0f2521b10" size="V:" alignment="V:">
    </attribute>
    <struct loc="153:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e35d38" defined="" size="I:56" alignment="I:8">
      <field name="__lock" ref="0x2ad0f2e35f38" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x2ad0f2e33020" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x2ad0f2e330d0" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x2ad0f2e33180" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x2ad0f2e33230" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x2ad0f2e332e0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer" ref="0x2ad0f2e33390" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__shared" ref="0x2ad0f2e33440" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__pad1" ref="0x2ad0f2e334f0" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__pad2" ref="0x2ad0f2e335a0" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__flags" ref="0x2ad0f2e33650" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="exactlyonce" loc="99:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/tos.h" ref="0x2ad0f31550b8" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h" ref="0x2ad0f3435c48" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x2ad0f3433198" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x2ad0f3421e90"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x2ad0f34204b8"/></typename>
        </type-tag>
      </field>
    </union>
    <struct loc="43:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.h" ref="0x2ad0f34a1190" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2ad0f34a1390" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="message_metadata" loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h" ref="0x2ad0f3433650" defined="" size="I:4" alignment="I:1">
      <field name="tossim" ref="0x2ad0f3433b48" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x2ad0f3420808"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x2ad0f341e358"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x2ad0f2525078" size="V:" alignment="V:">
      <field name="fn" ref="0x2ad0f2525278" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="118:/usr/include/stdlib.h" ref="0x2ad0f2dda7c8" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x2ad0f2dda9c8" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x2ad0f2ddaa78" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="drand48_data" loc="418:/usr/include/stdlib.h" ref="0x2ad0f2e53960" defined="" size="I:24" alignment="I:8">
      <field name="__x" ref="0x2ad0f2e52740" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x2ad0f2e527f0" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x2ad0f2e528a0" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x2ad0f2e52950" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x2ad0f2e52a00" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="__locale_struct" loc="28:/usr/include/xlocale.h" ref="0x2ad0f2da0a50" defined="" size="I:232" alignment="I:8">
      <field name="__locales" ref="0x2ad0f2d9e020" bit-offset="I:0" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0x2ad0f2da0ce0"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x2ad0f2d9e0d0" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x2ad0f2d9e180" bit-offset="I:896" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x2ad0f2d9e230" bit-offset="I:960" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x2ad0f2d9e2e0" bit-offset="I:1024" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <enum loc="87:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2ad0f341ea40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="138:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f35659a8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_header" loc="123:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2ad0f3418618" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x2ad0f3416240" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2ad0f3424d78"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x2ad0f34162f0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2ad0f3424d78"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x2ad0f34163a0" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x2ad0f3416450" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x2ad0f3424988"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x2ad0f3416500" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x2ad0f3424490"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="234:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3bac020" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x2ad0f3bac220" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x2ad0f3bac2d0" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2ad0f3bac380" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x2ad0f3bac430" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x2ad0f3bac4e0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <union name="message_header" loc="50:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h" ref="0x2ad0f3435020" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x2ad0f34356f8" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x2ad0f3422b10"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x2ad0f3421b50"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x2ad0f34357a8" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x2ad0f3418618"/>
          <typename><typedef-ref name="serial_header_t" ref="0x2ad0f3416658"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x2ad0f2e14d98" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x2ad0f2e1d358" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x2ad0f2dfd988"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x2ad0f2e1d408" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f252e2b0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x2ad0f252e5d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_internal_list" loc="61:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e2b1c0" defined="" size="I:16" alignment="I:8">
      <field name="__prev" ref="0x2ad0f2e2ba68" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2ad0f2e2b1c0"/></type-tag>
        </type-pointer>
      </field>
      <field name="__next" ref="0x2ad0f2e2bb18" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2ad0f2e2b1c0"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <attribute name="bnd_nok" loc="10:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f252c750" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x2ad0f252cb98" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x2ad0f252cc48" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct name="timezone" loc="57:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x2ad0f3220c58" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x2ad0f321e250" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x2ad0f321e300" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="wait" loc="67:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x2ad0f2dd7bf0" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x2ad0f2dd4e90" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0x2ad0f2dd4f40" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f2dd5a68"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0x2ad0f2ddc020" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f2dd48c8"/></type-tag>
      </field>
    </union>
    <union loc="68:/usr/include/stdlib.h" ref="0x2ad0f2ddc6c8" defined="" size="I:8" alignment="I:8">
      <field name="__uptr" ref="0x2ad0f2ddc8c8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0x2ad0f2dd7bf0"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0x2ad0f2ddc978" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <struct name="nodeID" loc="9:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsp.h" ref="0x2ad0f3a04528" defined="" size="I:1" alignment="I:1">
      <field name="nodeid" ref="0x2ad0f3a04940" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_event" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.h" ref="0x2ad0f312f8d8" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x2ad0f312d7f0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x2ad0f31241a0"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x2ad0f312d8a0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x2ad0f312d950" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x2ad0f312da00" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x2ad0f312dab0" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x2ad0f312db60" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2ad0f312f8d8"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x2ad0f312fcb0"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x2ad0f312dc30" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2ad0f312f8d8"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x2ad0f312fcb0"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x2ad0f3086b90" size="V:" alignment="V:">
    </struct>
    <enum loc="8:/home/adrian/git/tinyos-project1/pro1/src/protocol.h" ref="0x2ad0f34a0020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h" ref="0x2ad0f354d3f8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b8d178" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="211:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3bb1280" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="tossim_footer" loc="14:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h" ref="0x2ad0f3421e90" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x2ad0f3420360" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x2ad0f2d812f8"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="208:/usr/include/libio.h" ref="0x2ad0f3095020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_packet.h" ref="0x2ad0f3411d48" defined="" size="I:0" alignment="I:1">
    </struct>
    <struct loc="42:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.h" ref="0x2ad0f34659d0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2ad0f3465bd0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="53:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e2c988" defined="" size="I:56" alignment="I:8">
      <field name="__size" ref="0x2ad0f2e2cb88" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2ad0f2e2cc38" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="150:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f3563cd8" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x2ad0f3563ed8" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x2ad0f3562020" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x2ad0f35620d0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x2ad0f3562180" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x2ad0f3562230" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x2ad0f35622e0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="191:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e329e8" defined="" size="I:8" alignment="I:8">
      <field name="__size" ref="0x2ad0f2e32be8" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2ad0f2e32c98" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="85:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x2ad0f2dd48c8" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0x2ad0f2dd4ac8" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0x2ad0f2dd4b78" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f3542300" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x2ad0f3542500" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x2ad0f35425b0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x2ad0f3542660" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="25:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h" ref="0x2ad0f34aea30" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="24:/home/adrian/git/tinyos-project1/pro1/src/command.h" ref="0x2ad0f39643c8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="lspAlgorithm" loc="12:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsp.h" ref="0x2ad0f3a04dd0" defined="" size="I:2" alignment="I:1">
      <field name="Cost" ref="0x2ad0f3a03420" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="NodeID" ref="0x2ad0f3a034d0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="136:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2ad0f34376d0" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x2ad0f3437b58" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="93:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x2ad0f3233020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="97:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/tos.h" ref="0x2ad0f31409a0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="12:/home/adrian/git/tinyos-project1/pro1/src/command.h" ref="0x2ad0f3966678" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="120:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b7f5e0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3b7f7e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3b7f890" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3b80e20"/></type-tag>
      </field>
    </union>
    <enum loc="673:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h" ref="0x2ad0f34d9b38" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="153:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b7aab0" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x2ad0f3b7acb0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x2ad0f3b7ad60" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x2ad0f3b7ae10" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x2ad0f3b7aec0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x2ad0f3b79020" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x2ad0f3b790d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x2ad0f3b79180" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x2ad0f3b79230" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="132:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e2d8e8" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x2ad0f2e2dae8" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2ad0f2e2db98" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b87628" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="106:/usr/include/stdlib.h" ref="0x2ad0f2ddbca0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x2ad0f2ddbea0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x2ad0f2ddbf50" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="76:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/tos.h" ref="0x2ad0f3127348" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="101:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b84550" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x2ad0f3b84750" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x2ad0f3b84800" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x2ad0f3b848b0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x2ad0f3b84960" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x2ad0f3b84a10" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="193:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b73170" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3b73370" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3b73420" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3b749b0"/></type-tag>
      </field>
    </union>
    <attribute name="hwevent"  loc="NONE" ref="0x2ad0f2524850" size="V:" alignment="V:">
    </attribute>
    <enum loc="120:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f3567c68" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="170:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b77d08" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x2ad0f3b77f08" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x2ad0f3b76020" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x2ad0f3b760d0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x2ad0f3b76180" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2ad0f3b76230" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x2ad0f3b762e0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="_IO_FILE" loc="273:/usr/include/libio.h" ref="0x2ad0f30798a8" defined="" size="I:216" alignment="I:8">
      <field name="_flags" ref="0x2ad0f30900d8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x2ad0f3090188" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x2ad0f3090238" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x2ad0f30902e8" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x2ad0f3090398" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x2ad0f3090448" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x2ad0f30904f8" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x2ad0f30905a8" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x2ad0f3090658" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x2ad0f3090708" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x2ad0f30907b8" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x2ad0f3090868" bit-offset="I:704" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x2ad0f3090918" bit-offset="I:768" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x2ad0f3083328"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x2ad0f3090ac8" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x2ad0f3090b78" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x2ad0f3090c28" bit-offset="I:928" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x2ad0f3090cd8" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x2ad0f2df6770"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x2ad0f3090d88" bit-offset="I:1024" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x2ad0f3090e38" bit-offset="I:1040" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x2ad0f3090ee8" bit-offset="I:1048" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x2ad0f308d020" bit-offset="I:1088" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x2ad0f3083020"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x2ad0f308d0d0" bit-offset="I:1152" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x2ad0f2df6b08"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x2ad0f308d180" bit-offset="I:1216" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x2ad0f308d230" bit-offset="I:1280" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x2ad0f308d2e0" bit-offset="I:1344" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x2ad0f308d590" bit-offset="I:1408" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x2ad0f308d640" bit-offset="I:1472" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x2ad0f2529660"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x2ad0f308d6f0" bit-offset="I:1536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x2ad0f308d7a0" bit-offset="I:1568" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="126:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f35665e8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="hashtable" ref="0x2ad0f3155630" size="V:" alignment="V:">
    </struct>
    <enum loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c" ref="0x2ad0f314b780" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="heap" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/heap.h" ref="0x2ad0f31beb68" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x2ad0f31bd2a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x2ad0f31bd358" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x2ad0f31bd408" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x2ad0f25259c0" size="V:" alignment="V:">
    </attribute>
    <enum loc="48:/usr/include/ctype.h" ref="0x2ad0f3059648" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="pack" loc="20:/home/adrian/git/tinyos-project1/pro1/src/packet.h" ref="0x2ad0f3491690" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0x2ad0f34905b8" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2ad0f2d7fb28"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x2ad0f3490668" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2ad0f2d7fb28"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x2ad0f3490718" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x2ad0f2d7fb28"/></typename>
        </type-int>
      </field>
      <field name="TTL" ref="0x2ad0f34907c8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
        </type-int>
      </field>
      <field name="protocol" ref="0x2ad0f3490878" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x2ad0f3490928" bit-offset="I:64" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="_IO_marker" loc="188:/usr/include/libio.h" ref="0x2ad0f3083328" defined="" size="I:24" alignment="I:8">
      <field name="_next" ref="0x2ad0f3083ba8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x2ad0f3083328"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x2ad0f3083c58" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x2ad0f3083d08" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h" ref="0x2ad0f322a4b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f354a6e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="8:/home/adrian/git/tinyos-project1/pro1/src/packBuffer.h" ref="0x2ad0f399b288" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="27:/usr/include/_G_config.h" ref="0x2ad0f3088980" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x2ad0f3088b80" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x2ad0f2df6b08"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x2ad0f3088c30" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2ad0f308a340"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x2ad0f308a748"/></typename>
        </type-tag>
      </field>
    </struct>
    <struct name="sendInfo" loc="12:/home/adrian/git/tinyos-project1/pro1/src/packBuffer.h" ref="0x2ad0f399b8d8" defined="" size="I:32" alignment="I:2">
      <field name="packet" ref="0x2ad0f399a0a0" bit-offset="I:0" size="I:28">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2ad0f3491690"/>
          <typename><typedef-ref name="pack" ref="0x2ad0f3490a80"/></typename>
        </type-tag>
      </field>
      <field name="src" ref="0x2ad0f399a150" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x2ad0f399a200" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="random_data" loc="349:/usr/include/stdlib.h" ref="0x2ad0f2e3e6b8" defined="" size="I:48" alignment="I:8">
      <field name="fptr" ref="0x2ad0f2e3d568" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2ad0f25397e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x2ad0f2e3d618" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2ad0f25397e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x2ad0f2e3d6c8" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2ad0f25397e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x2ad0f2e3d778" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x2ad0f2e3d828" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x2ad0f2e3d8d8" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x2ad0f2e3d988" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x2ad0f25397e8"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <struct name="pair" loc="6:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/pair.h" ref="0x2ad0f39867c8" defined="" size="I:2" alignment="I:1">
      <field name="src" ref="0x2ad0f3986d48" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x2ad0f3986df8" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x2ad0f3316c70" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x2ad0f3332020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x2ad0f33320d0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x2ad0f3332180" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x2ad0f3332230" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x2ad0f33322e0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x2ad0f3332390" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x2ad0f3332440" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x2ad0f33324f0" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x2ad0f33325a0" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x2ad0f3332650" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x2ad0f3332700" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <enum loc="7:/home/adrian/git/tinyos-project1/pro1/src/ping.h" ref="0x2ad0f39d3918" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_log_output" loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c" ref="0x2ad0f314be30" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x2ad0f3161498" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x2ad0f3161548" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/>
              <typename><typedef-ref name="FILE" ref="0x2ad0f3079c78"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b86670" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="115:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e2fc28" defined="" size="I:48" alignment="I:8">
      <field name="__data" ref="0x2ad0f2e2fe28" bit-offset="I:0" size="I:48">
        <type-tag size="I:48" alignment="I:8"><struct-ref ref="0x2ad0f2e30dc8"/></type-tag>
      </field>
      <field name="__size" ref="0x2ad0f2e2fed8" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2ad0f2e2d020" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct name="pingInfo" loc="5:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/pingInfo.h" ref="0x2ad0f39c65e8" defined="" size="I:28" alignment="I:4">
      <field name="dest" ref="0x2ad0f39c6f50" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="timeSent" ref="0x2ad0f39c4030" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x2ad0f39c40e0" bit-offset="I:64" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="253:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3baa4b0" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x2ad0f3baa6b0" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x2ad0f3baa760" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x2ad0f3baa810" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x2ad0f3baa8c0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="300:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b9f020" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x2ad0f3b9f220" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x2ad0f3b9f2d0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x2ad0f3b9f380" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x2ad0f3b9f430" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x2ad0f3b9f4e0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x2ad0f3b9f590" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2ad0f3b9f640" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="radio_stats" loc="109:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2ad0f341a128" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x2ad0f34199f0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x2ad0f3419aa0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x2ad0f3419b50" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x2ad0f3419c00" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x2ad0f3419cb0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x2ad0f3419d60" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x2ad0f3419e10" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x2ad0f3419ec0" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x2ad0f3418020" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x2ad0f34180d0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x2ad0f3418180" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f252fe50" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2ad0f25301c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="dmemset" loc="15:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f25307c8" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x2ad0f2530c50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x2ad0f2530d00" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x2ad0f2530db0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="144:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f3564320" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atleastonce" loc="98:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/tos.h" ref="0x2ad0f3140d08" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="54:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h" ref="0x2ad0f3562e58" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="lsparrlist" loc="10:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsplist.h" ref="0x2ad0f3a01b08" defined="" size="I:31" alignment="I:1">
      <field name="values" ref="0x2ad0f3a002b0" bit-offset="I:0" size="I:30">
        <type-array elements="I:30" size="I:30" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref name="nodeID" ref="0x2ad0f3a04528"/>
            <typename><typedef-ref name="datatype2" ref="0x2ad0f3a017c8"/></typename>
          </type-tag>
        </type-array>
      </field>
      <field name="numValues" ref="0x2ad0f3a00360" bit-offset="I:240" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b88878" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="136:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b7d3e8" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x2ad0f3b7d5e8" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x2ad0f3b7d698" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x2ad0f3b7d748" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x2ad0f3b7d7f8" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x2ad0f3b7d8a8" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x2ad0f3b7d958" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x2ad0f3b7da08" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x2ad0f3b7dab8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="itimerval" loc="109:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x2ad0f3233d48" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x2ad0f3232490" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x2ad0f2e1d6b8"/></type-tag>
      </field>
      <field name="it_value" ref="0x2ad0f3232540" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x2ad0f2e1d6b8"/></type-tag>
      </field>
    </struct>
    <struct loc="44:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.h" ref="0x2ad0f34a18f8" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2ad0f34a1af8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="312:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b9dc90" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3b9de90" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3b9df40" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3b9d3e0"/></type-tag>
      </field>
    </union>
    <struct name="sendBuffer" loc="18:/home/adrian/git/tinyos-project1/pro1/src/packBuffer.h" ref="0x2ad0f399a678" defined="" size="I:4098" alignment="I:2">
      <field name="buffer" ref="0x2ad0f399adf0" bit-offset="I:0" size="I:4096">
        <type-array elements="I:128" size="I:4096" alignment="I:2">
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x2ad0f399b8d8"/>
            <typename><typedef-ref name="sendInfo" ref="0x2ad0f399a358"/></typename>
          </type-tag>
        </type-array>
      </field>
      <field name="size" ref="0x2ad0f399aea0" bit-offset="I:32768" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f252ebe8" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x2ad0f252ef08" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="sigevent" ref="0x2ad0f3330370" size="V:" alignment="V:">
    </struct>
    <struct name="recieveLspList" loc="16:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsp.h" ref="0x2ad0f3a03970" defined="" size="I:401" alignment="I:1">
      <field name="Cost" ref="0x2ad0f3a01200" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="container" ref="0x2ad0f3a012b0" bit-offset="I:8" size="I:400">
        <type-array elements="I:20" size="I:400" alignment="I:1">
          <type-array elements="I:20" size="I:20" alignment="I:1">
            <type-tag size="I:1" alignment="I:1"><struct-ref name="lspList" ref="0x2ad0f3a05ca0"/>
              <typename><typedef-ref name="lspList" ref="0x2ad0f3a04230"/></typename>
            </type-tag>
          </type-array>
        </type-array>
      </field>
    </struct>
    <union loc="150:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e33d30" defined="" size="I:56" alignment="I:8">
      <field name="__data" ref="0x2ad0f2e33f30" bit-offset="I:0" size="I:56">
        <type-tag size="I:56" alignment="I:8"><struct-ref ref="0x2ad0f2e35d38"/></type-tag>
      </field>
      <field name="__size" ref="0x2ad0f2e32020" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2ad0f2e320d0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <attribute name="one" loc="13:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f252f508" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2ad0f252f850" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="212:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e399b8" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x2ad0f2e39bb8" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2ad0f2e39c68" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="22:/usr/include/_G_config.h" ref="0x2ad0f308ae38" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x2ad0f30880a0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x2ad0f2df6770"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x2ad0f3088150" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2ad0f308a340"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x2ad0f308a748"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="132:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f3565020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="98:/usr/include/stdlib.h" ref="0x2ad0f2ddb260" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x2ad0f2ddb460" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x2ad0f2ddb510" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__locale_data" ref="0x2ad0f2da0ce0" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0x2ad0f2524da0" size="V:" alignment="V:">
    </attribute>
    <enum loc="9:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/hashmap.h" ref="0x2ad0f34ac820" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h" ref="0x2ad0f354cc68" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="250:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3baaba0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3baada0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3baae50" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3baa4b0"/></type-tag>
      </field>
    </union>
    <enum loc="40:/home/adrian/git/tinyos-project1/pro1/src/packet.h" ref="0x2ad0f34afc28" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="83:/usr/include/wchar.h" ref="0x2ad0f308a340" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0x2ad0f308a540" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x2ad0f308a5f0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2ad0f308bdc0"/></type-tag>
      </field>
    </struct>
    <attribute name="unsafe"  loc="NONE" ref="0x2ad0f2525c60" size="V:" alignment="V:">
    </attribute>
    <struct name="iterator" loc="10:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/iterator.h" ref="0x2ad0f39779c0" defined="" size="I:24" alignment="I:2">
      <field name="values" ref="0x2ad0f3976328" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="hashType" ref="0x2ad0f34ac4d0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="size" ref="0x2ad0f39763d8" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
      <field name="position" ref="0x2ad0f3976488" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="51:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h" ref="0x2ad0f2e03d08" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="lspList" loc="6:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsp.h" ref="0x2ad0f3a05ca0" defined="" size="I:1" alignment="I:1">
      <field name="Cost" ref="0x2ad0f3a040d8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="hashmap" loc="18:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/hashmap.h" ref="0x2ad0f39349e0" defined="" size="I:102" alignment="I:2">
      <field name="map" ref="0x2ad0f39334a0" bit-offset="I:0" size="I:80">
        <type-array elements="I:20" size="I:80" alignment="I:2">
          <type-tag size="I:4" alignment="I:2"><struct-ref name="hashmapEntry" ref="0x2ad0f34ace78"/>
            <typename><typedef-ref name="hashmapEntry" ref="0x2ad0f39346e0"/></typename>
          </type-tag>
        </type-array>
      </field>
      <field name="keys" ref="0x2ad0f3933550" bit-offset="I:640" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="numofVals" ref="0x2ad0f3933600" bit-offset="I:800" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="nts" loc="17:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f2533020" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x2ad0f2533368" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="65:/usr/include/x86_64-linux-gnu/sys/select.h" ref="0x2ad0f2e190b8" defined="" size="I:128" alignment="I:8">
      <field name="__fds_bits" ref="0x2ad0f2e192b8" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__fd_mask" ref="0x2ad0f2e1c480"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <union loc="206:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e3a9e8" defined="" size="I:32" alignment="I:8">
      <field name="__size" ref="0x2ad0f2e39020" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2ad0f2e390d0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct name="exception" loc="321:/usr/include/math.h" ref="0x2ad0f3049b70" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x2ad0f30484e8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x2ad0f3048598" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x2ad0f3048648" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x2ad0f30486f8" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x2ad0f30487a8" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="_IO_FILE_plus" ref="0x2ad0f308dde0" size="V:" alignment="V:">
    </struct>
    <struct name="sim_log_channel" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c" ref="0x2ad0f31619f0" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x2ad0f31603d8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x2ad0f3160488" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x2ad0f3160538" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x2ad0f31605e8" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/>
              <typename><typedef-ref name="FILE" ref="0x2ad0f3079c78"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="102:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h" ref="0x2ad0f341c648" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="41:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.h" ref="0x2ad0f3465158" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x2ad0f3465358" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="26:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h" ref="0x2ad0f3422118" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="86:/usr/include/wchar.h" ref="0x2ad0f308bdc0" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0x2ad0f308a020" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x2ad0f308a0d0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <attribute name="C"  loc="NONE" ref="0x2ad0f25245b0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h" ref="0x2ad0f3241760" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x2ad0f3240638" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x2ad0f32406e8" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x2ad0f3240798" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x2ad0f3240848" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x2ad0f32408f8" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x2ad0f32409a8" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <enum loc="13:/home/adrian/git/tinyos-project1/pro1/src/packet.h" ref="0x2ad0f3492708" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="arrlist" loc="10:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/list.h" ref="0x2ad0f39856c8" defined="" size="I:61" alignment="I:1">
      <field name="values" ref="0x2ad0f3985de8" bit-offset="I:0" size="I:60">
        <type-array elements="I:30" size="I:60" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x2ad0f39867c8"/>
            <typename><typedef-ref name="dataType" ref="0x2ad0f39853a8"/></typename>
          </type-tag>
        </type-array>
      </field>
      <field name="numValues" ref="0x2ad0f3985e98" bit-offset="I:480" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="167:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b76570" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3b76770" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3b76820" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3b77d08"/></type-tag>
      </field>
    </union>
    <attribute name="macro"  loc="NONE" ref="0x2ad0f25253c8" size="V:" alignment="V:">
      <field name="macro_name" ref="0x2ad0f25255c8" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <union loc="231:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3bac7d8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3bac9d8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3baca88" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3bac020"/></type-tag>
      </field>
    </union>
    <struct loc="315:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b9d3e0" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x2ad0f3b9d5e0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x2ad0f3b9d690" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x2ad0f3b9d740" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x2ad0f3b9d7f0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x2ad0f3b9d8a0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x2ad0f3b9d950" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2ad0f3b9da00" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="106:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e31610" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x2ad0f2e31810" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x2ad0f2e318c0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <nx_struct name="tossim_header" loc="6:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h" ref="0x2ad0f3422b10" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x2ad0f3421738" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2ad0f3424d78"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x2ad0f34217e8" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x2ad0f3424d78"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x2ad0f3421898" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x2ad0f3421948" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x2ad0f3424988"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x2ad0f34219f8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x2ad0f3424490"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="message_t" loc="14:/home/adrian/local/tinyos-2.1.1/tos/types/message.h" ref="0x2ad0f3432020" defined="" size="I:41" alignment="I:1">
      <field name="header" ref="0x2ad0f3431208" bit-offset="I:0" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x2ad0f34312b8" bit-offset="I:56" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x2ad0f3431368" bit-offset="I:280" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x2ad0f3431418" bit-offset="I:296" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <union loc="150:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b794b8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3b796b8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3b79768" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3b7aab0"/></type-tag>
      </field>
    </union>
    <enum loc="203:/usr/include/math.h" ref="0x2ad0f304b098" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="70:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x2ad0f2dd5a68" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0x2ad0f2dd5c68" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0x2ad0f2dd5d18" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0x2ad0f2dd5dc8" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_noise_node_t" loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h" ref="0x2ad0f323e020" defined="" size="I:80" alignment="I:8">
      <field name="key" ref="0x2ad0f323d6f8" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x2ad0f323d7a8" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x2ad0f323d858" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x2ad0f323d908" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x2ad0f323d9b8" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x2ad0f3155630"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x2ad0f323da68" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x2ad0f323db18" bit-offset="I:512" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x2ad0f323dbc8" bit-offset="I:544" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x2ad0f323dc78" bit-offset="I:576" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="279:/usr/include/inttypes.h" ref="0x2ad0f2543bf8" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x2ad0f2543df8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x2ad0f2543ea8" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b8a480" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="14:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h" ref="0x2ad0f3423af0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="297:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b9f8d8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3b9fad8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3b9fb88" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3b9f020"/></type-tag>
      </field>
    </union>
    <struct loc="29:/usr/include/x86_64-linux-gnu/bits/sigset.h" ref="0x2ad0f2e142a8" defined="" size="I:128" alignment="I:8">
      <field name="__val" ref="0x2ad0f2e144a8" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="pingList" loc="10:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/pingList.h" ref="0x2ad0f39bb688" defined="" size="I:844" alignment="I:4">
      <field name="values" ref="0x2ad0f39bbdb8" bit-offset="I:0" size="I:840">
        <type-array elements="I:30" size="I:840" alignment="I:4">
          <type-tag size="I:28" alignment="I:4"><struct-ref name="pingInfo" ref="0x2ad0f39c65e8"/>
            <typename><typedef-ref name="pingType" ref="0x2ad0f39bb378"/></typename>
          </type-tag>
        </type-array>
      </field>
      <field name="numValues" ref="0x2ad0f39bbe68" bit-offset="I:6720" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="123:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b80e20" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x2ad0f3b7f0a0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x2ad0f3b7f150" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x2ad0f3b7f200" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x2ad0f3b7f2b0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x2ad0f3b7f360" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x2ad0f2524af8" size="V:" alignment="V:">
    </attribute>
    <union loc="98:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h" ref="0x2ad0f3b84ce0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x2ad0f3b84ee0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x2ad0f3b83020" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3b84550"/></type-tag>
      </field>
    </union>
    <attribute name="dmemcpy" loc="16:/usr/lib/ncc/deputy_nodeputy.h" ref="0x2ad0f2531408" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x2ad0f2531890" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x2ad0f2531940" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x2ad0f25319f0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__pthread_mutex_s" loc="78:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x2ad0f2e2a098" defined="" size="I:40" alignment="I:8">
      <field name="__lock" ref="0x2ad0f2e2ae70" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x2ad0f2e2af20" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x2ad0f2e29020" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x2ad0f2e290d0" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x2ad0f2e29180" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__spins" ref="0x2ad0f2e29230" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__list" ref="0x2ad0f2e292e0" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2ad0f2e2b1c0"/>
          <typename><typedef-ref name="__pthread_list_t" ref="0x2ad0f2e2bc70"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="79:/home/adrian/git/tinyos-project1/pro1/src/Node.nc" ref="0x2ad0f3b44698" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Node"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x2ad0f3463630" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc" ref="0x2ad0f3867e78" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc" ref="0x2ad0f37e3c50" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc" ref="0x2ad0f37e2cd0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc" ref="0x2ad0f3860860" defined="" scoped="" size="I:64" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x2ad0f385e250" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x2ad0f385e300" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x2ad0f31241a0"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x2ad0f385e3b0" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x2ad0f31241a0"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x2ad0f385e460" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x2ad0f385e510" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x2ad0f385e5c0" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x2ad0f2539020"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x2ad0f385e670" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x2ad0f385e720" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x2ad0f385e7d0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
            <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x2ad0f385e880" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x2ad0f3860860"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x2ad0f3860cb0"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" ref="0x2ad0f3d81c18" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="74:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" ref="0x2ad0f3b8ed90" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x2ad0f3bd6cb0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" ref="0x2ad0f3d72bc8" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x2ad0f3d72dc8" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x2ad0f3d72e78" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x2ad0f3d72f28" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x2ad0f3d71020" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x2ad0f3d710d0" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" ref="0x2ad0f3d73638" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc" ref="0x2ad0f3e3fe40" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc" ref="0x2ad0f3e3ccd0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="169:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc" ref="0x2ad0f3e3dc50" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="55:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc" ref="0x2ad0f3e35918" defined="" scoped="" size="I:8" alignment="I:8">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x2ad0f3e35b18" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
            <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
  </tags>
  <variables>
    <variable name="randCM" ref="0x2ad0f32fd020" loc="39:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x2ad0f33b3310" loc="283:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x2ad0f3237a10" loc="52:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x2ad0f32fd8c0" loc="41:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__timezone" ref="0x2ad0f333b468" loc="278:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="channelTable" ref="0x2ad0f315ec20" loc="68:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x2ad0f3155630"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x2ad0f335c020" loc="58:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:80000" alignment="I:8">
        <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x2ad0f323e020"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x2ad0f323ddd0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x2ad0f315e7e0" loc="67:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-array elements="I:257" size="I:4112" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x2ad0f314be30"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x2ad0f31616a0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x2ad0f333cd18" loc="276:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x2ad0f32ff7c8" loc="39:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x2ad0f3339898" loc="292:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x2ad0f320c9c8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x2ad0f31beb68"/>
        <typename><typedef-ref name="heap_t" ref="0x2ad0f31bd560"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x2ad0f3291960" loc="54:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x2ad0f335fa78" loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randC" ref="0x2ad0f32ffa30" loc="39:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x2ad0f335d958" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
      </type-int>
    </variable>
    <variable name="csmaLow" ref="0x2ad0f3293730" loc="47:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x2ad0f3292580" loc="50:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0x2ad0f335d478" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x2ad0f3339508" loc="291:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x2ad0f3292a28" loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x2ad0f309f278" loc="348:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x2ad0f308dde0"/></type-tag>
    </variable>
    <variable name="randCD" ref="0x2ad0f32ffca0" loc="39:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="j97" ref="0x2ad0f32fd590" loc="40:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x2ad0f3127c80" loc="78:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x2ad0f31191f0" loc="28:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="tzname" ref="0x2ad0f333b918" loc="283:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x2ad0f31b6468" loc="58:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x2ad0f251f7c8"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x2ad0f309fb78" loc="350:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x2ad0f308dde0"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x2ad0f32932e8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x2ad0f3291020" loc="52:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x2ad0f353cc78" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x2ad0f32cabf0" loc="10:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x2ad0f32cb6b8"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x2ad0f32cbe50"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x2ad0f309f6f8" loc="349:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x2ad0f308dde0"/></type-tag>
    </variable>
    <variable name="csmaInitLow" ref="0x2ad0f3279e68" loc="45:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x2ad0f335d020" loc="52:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_ticks" ref="0x2ad0f3237658" loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2ad0f31241a0"/></typename>
      </type-int>
    </variable>
    <variable name="__daylight" ref="0x2ad0f333b0c8" loc="277:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x2ad0f30ae9f0" loc="171:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x2ad0f32ca558" loc="9:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:8008" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x2ad0f32bc7e8"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x2ad0f32ba2d8"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x2ad0f311acf8" loc="27:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x2ad0f30ae190" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x2ad0f32736a0" loc="183:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x2ad0f3237d68" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x2ad0f3049850" loc="308:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x2ad0f304a1f0"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x2ad0f3049400"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x2ad0f32c9020" loc="11:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x2ad0f304cd98" loc="162:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x2ad0f32799f8" loc="44:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdout" ref="0x2ad0f30ae5c0" loc="170:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x2ad0f3291dd0" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x2ad0f3293be0" loc="48:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x2ad0f32914d8" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x2ad0f32920c8" loc="49:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x2ad0f32fd340" loc="40:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x2ad0f34611d8" loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x2ad0f34628d0" loc="60:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x2ad0f3462580" loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x2ad0f3462d58" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x2ad0f3461700" loc="67:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2ad0f312f8d8"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2ad0f312fcb0"/></typename>
      </type-tag>
    </variable>
    <variable name="bootEvent" ref="0x2ad0f3704b18" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2ad0f312f8d8"/>
          <typename><typedef-ref name="sim_event_t" ref="0x2ad0f312fcb0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x2ad0f3704420" loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x2ad0f3704088" loc="50:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x2ad0f3704748" loc="52:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x2ad0f3765a48" loc="62:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
        <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x2ad0f3765e30" loc="63:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
          <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x2ad0f3807b18" loc="78:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2ad0f312f8d8"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2ad0f312fcb0"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x2ad0f37de590" loc="70:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x2ad0f3840020" loc="294:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x2ad0f37dd020" loc="72:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x2ad0f37dd3e0" loc="73:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x2ad0f37dd788" loc="74:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
          <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x2ad0f37dea00" loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x2ad0f3806020" loc="80:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
        <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x2ad0f3807328" loc="76:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x2ad0f37dddc0" loc="75:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x2ad0f3807780" loc="77:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x2ad0f3897a18" loc="201:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x2ad0f38616c0" loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x2ad0f3897148" loc="198:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2ad0f312f8d8"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2ad0f312fcb0"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x2ad0f3860548" loc="62:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2ad0f31241a0"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x2ad0f3895638" loc="203:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x2ad0f385ec50" loc="79:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x2ad0f3860860"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x2ad0f3860cb0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x2ad0f3895020" loc="202:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
          <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="clearThreshold" ref="0x2ad0f38974c0" loc="200:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x2ad0f3860020" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x2ad0f3861360" loc="58:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
          <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x2ad0f3861a18" loc="60:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x2ad0f3910138" loc="67:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x2ad0f34234f8"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x2ad0f3914d80" loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x2ad0f39148f8" loc="65:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="pings" ref="0x2ad0f3a28308" loc="54:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:844" alignment="I:4"><struct-ref name="pingList" ref="0x2ad0f39bb688"/>
        <typename><typedef-ref name="pingList" ref="0x2ad0f39ba020"/></typename>
      </type-tag>
    </variable>
    <variable name="recieveLsp" ref="0x2ad0f3a5e020" loc="64:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-array elements="I:20" size="I:400" alignment="I:1">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref name="lspList" ref="0x2ad0f3a05ca0"/>
            <typename><typedef-ref name="lspList" ref="0x2ad0f3a04230"/></typename>
          </type-tag>
        </type-array>
      </type-array>
    </variable>
    <variable name="packBuffer" ref="0x2ad0f3a29720" loc="50:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:4098" alignment="I:2"><struct-ref name="sendBuffer" ref="0x2ad0f399a678"/>
        <typename><typedef-ref name="sendBuffer" ref="0x2ad0f3999020"/></typename>
      </type-tag>
    </variable>
    <variable name="numNodes" ref="0x2ad0f3a2a250" loc="45:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
      </type-int>
    </variable>
    <variable name="test" ref="0x2ad0f3a5e7f8" loc="66:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:401" alignment="I:1"><struct-ref name="recieveLspList" ref="0x2ad0f3a03970"/>
        <typename><typedef-ref name="rLspList" ref="0x2ad0f3a01408"/></typename>
      </type-tag>
    </variable>
    <variable name="sequenceNum" ref="0x2ad0f3a2a5e0" loc="46:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
      </type-int>
    </variable>
    <variable name="lspCache" ref="0x2ad0f3a5eb68" loc="68:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2ad0f3491690"/>
        <typename><typedef-ref name="pack" ref="0x2ad0f3490a80"/></typename>
      </type-tag>
    </variable>
    <variable name="sendPackage" ref="0x2ad0f3a29388" loc="49:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2ad0f3491690"/>
        <typename><typedef-ref name="pack" ref="0x2ad0f3490a80"/></typename>
      </type-tag>
    </variable>
    <variable name="pkt" ref="0x2ad0f3a29020" loc="48:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
        <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
      </type-tag>
    </variable>
    <variable name="Received" ref="0x2ad0f3a29a88" loc="51:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:61" alignment="I:1"><struct-ref name="arrlist" ref="0x2ad0f39856c8"/>
        <typename><typedef-ref name="arrlist" ref="0x2ad0f3984020"/></typename>
      </type-tag>
    </variable>
    <variable name="Neighbors" ref="0x2ad0f3a28dc0" loc="60:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:102" alignment="I:2"><struct-ref name="hashmap" ref="0x2ad0f39349e0"/>
        <typename><typedef-ref name="hashmap" ref="0x2ad0f3933758"/></typename>
      </type-tag>
    </variable>
    <variable name="helloCount" ref="0x2ad0f3a28a50" loc="59:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="recieveSeq" ref="0x2ad0f3a5e4a8" loc="65:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-array elements="I:20" size="I:20" alignment="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x2ad0f2539020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sendLsp" ref="0x2ad0f3a25980" loc="63:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-array elements="I:20" size="I:20" alignment="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref name="lspList" ref="0x2ad0f3a05ca0"/>
          <typename><typedef-ref name="lspList" ref="0x2ad0f3a04230"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="helloMessage" ref="0x2ad0f3a25020" loc="62:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-array elements="I:20" size="I:20" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="busy" ref="0x2ad0f3a2aa40" loc="47:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="isActive" ref="0x2ad0f3a29dd8" loc="52:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="broadcastMessage" ref="0x2ad0f3a27368" loc="61:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-array elements="I:20" size="I:20" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="neighborCount" ref="0x2ad0f3a286c0" loc="58:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <documentation loc="55:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
        <short>&#10; Adrian's Variable&#10;</short>
      </documentation>
      <component-ref qname="Node"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="seed" ref="0x2ad0f3b37020" loc="52:/home/adrian/local/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
      </type-int>
    </variable>
    <variable name="base" ref="0x2ad0f3bd6a70" loc="40:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x2ad0f3bd64a0" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x2ad0f3bd6168" loc="38:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x2ad0f3bd66e8" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x2ad0f3c702c0" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x2ad0f3c72da8" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2ad0f31241a0"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x2ad0f3d1e190" loc="480:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2ad0f312f8d8"/>
          <typename><typedef-ref name="sim_event_t" ref="0x2ad0f312fcb0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x2ad0f3c94940" loc="185:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2ad0f312f8d8"/>
          <typename><typedef-ref name="sim_event_t" ref="0x2ad0f312fcb0"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x2ad0f3c777d0" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x2ad0f3c77308" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x2ad0f3d5f358" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x2ad0f3d5f6b0" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x2ad0f3d71a70" loc="69:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x2ad0f3d716d0" loc="68:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x2ad0f3d72bc8"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x2ad0f3d71228"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="current" ref="0x2ad0f3e34020" loc="59:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x2ad0f3e346d8" loc="60:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x2ad0f3e35918"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x2ad0f3e35c70"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x2ad0f3e33020" loc="61:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
        </type-int>
      </type-array>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x2ad0f3514c00" loc="1075:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x2ad0f3502020" loc="943:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x2ad0f350bc30" loc="1132:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x2ad0f3516328" loc="1058:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x2ad0f3544020" loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x2ad0f34a2020" loc="140:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x2ad0f34a74a0" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x2ad0f34f4328" loc="786:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x2ad0f353c630" loc="1299:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x2ad0f35653a8" loc="133:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x2ad0f3baf8a0" loc="222:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x2ad0f3546e68" loc="80:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x2ad0f34d3940" loc="705:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x2ad0f3505c28" loc="924:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x2ad0f350b020" loc="1126:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x2ad0f352d630" loc="1154:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x2ad0f3506c50" loc="919:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x2ad0f3529c50" loc="1182:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x2ad0f3511958" loc="1093:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x2ad0f350fbe0" loc="1106:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x2ad0f34e6328" loc="876:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x2ad0f3508328" loc="902:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x2ad0f341c3c8" loc="98:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x2ad0f34d6cd0" loc="687:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x2ad0f34e5020" loc="882:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x2ad0f3500c38" loc="961:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x2ad0f34ca620" loc="763:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x2ad0f34cf020" loc="730:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x2ad0f3540c40" loc="1275:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PROTOCOL_LINKEDSTATE" ref="0x2ad0f34a0a48" loc="11:/home/adrian/git/tinyos-project1/pro1/src/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x2ad0f304a570" loc="298:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x2ad0f3baea08" loc="227:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x2ad0f34e9630" loc="858:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x2ad0f3505020" loc="920:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x2ad0f3bae338" loc="225:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x2ad0f3549978" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x2ad0f34bed98" loc="269:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x2ad0f34d1020" loc="714:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x2ad0f34ec610" loc="839:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x2ad0f3051878" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x2ad0f34c6dc0" loc="169:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x2ad0f3503958" loc="939:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x2ad0f354a0b0" loc="52:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x2ad0f3509020" loc="1138:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x2ad0f352b600" loc="1166:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x2ad0f34bca40" loc="283:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x2ad0f3500320" loc="956:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x2ad0f3527c00" loc="1194:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x2ad0f3522310" loc="1222:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PROTOCOL_NAME" ref="0x2ad0f34a0da0" loc="12:/home/adrian/git/tinyos-project1/pro1/src/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x2ad0f3b8b778" loc="58:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x2ad0f34eb938" loc="847:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x2ad0f3512928" loc="1086:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x2ad0f34d63d0" loc="684:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x2ad0f34ba398" loc="298:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x2ad0f34cbc50" loc="760:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x2ad0f34f0c30" loc="817:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x2ad0f34f9630" loc="1004:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x2ad0f3bb06a0" loc="217:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x2ad0f34ab810" loc="36:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x2ad0f34eb020" loc="844:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x2ad0f3523c40" loc="1218:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x2ad0f351e328" loc="1246:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x2ad0f3501950" loc="953:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x2ad0f3568ac8" loc="109:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x2ad0f3bae020" loc="224:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x2ad0f3508020" loc="901:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x2ad0f34c6a50" loc="166:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x2ad0f354dab0" loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x2ad0f3b873a8" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x2ad0f3b85310" loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x2ad0f350e930" loc="1112:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x2ad0f3b8d810" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x2ad0f34ce958" loc="740:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x2ad0f3511650" loc="1092:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x2ad0f351c630" loc="1261:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x2ad0f3055108" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x2ad0f341bd78" loc="106:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x2ad0f34aaa10" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x2ad0f34c4020" loc="182:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x2ad0f34c7b68" loc="154:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x2ad0f3229e30" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x2ad0f3501020" loc="948:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x2ad0f34f9328" loc="1003:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CMD_LINKLIST_DUMP" ref="0x2ad0f3965070" loc="15:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="MAX_TTL" ref="0x2ad0f34913a8" loc="16:/home/adrian/git/tinyos-project1/pro1/src/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x2ad0f34c8c60" loc="779:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x2ad0f34f0020" loc="811:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x2ad0f34ef8f0" loc="821:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x2ad0f351c310" loc="1258:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x2ad0f34f3628" loc="794:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x2ad0f353e020" loc="1283:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x2ad0f34fa640" loc="997:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x2ad0f3544cb8" loc="89:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x2ad0f3b86020" loc="85:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x2ad0f34c4dd0" loc="194:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:66" name="CMD_ERROR" ref="0x2ad0f3964168" loc="20:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x2ad0f34c8020" loc="773:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x2ad0f34d7a50" loc="679:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x2ad0f34d0c68" loc="727:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x2ad0f3548690" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x2ad0f35470b0" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x2ad0f34d0020" loc="721:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x2ad0f341d140" loc="89:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x2ad0f34f6c18" loc="1025:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x2ad0f3bb09e8" loc="218:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x2ad0f3564698" loc="145:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x2ad0f304a7e8" loc="299:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x2ad0f305fc40" loc="56:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x2ad0f35649c8" loc="146:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x2ad0f34bd140" loc="272:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x2ad0f3541920" loc="1267:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x2ad0f353ec20" loc="1289:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x2ad0f351b328" loc="1027:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x2ad0f352e920" loc="1148:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x2ad0f3529020" loc="1176:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x2ad0f3525620" loc="1204:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x2ad0f3521c20" loc="1232:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x2ad0f34f3328" loc="793:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x2ad0f3504c50" loc="933:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x2ad0f3521310" loc="1227:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x2ad0f34f5640" loc="782:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x2ad0f34fdc20" loc="980:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x2ad0f351d8f0" loc="1255:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x2ad0f3b8dbb0" loc="55:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x2ad0f351b648" loc="1030:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x2ad0f34a94a0" loc="54:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x2ad0f34abb70" loc="39:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x2ad0f34be398" loc="264:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x2ad0f34d1658" loc="718:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x2ad0f3b8b020" loc="56:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x2ad0f34c2380" loc="216:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x2ad0f34f2948" loc="802:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x2ad0f353f328" loc="1277:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x2ad0f353dc50" loc="1296:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x2ad0f34d4320" loc="696:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x2ad0f34e9c30" loc="860:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x2ad0f350c630" loc="1123:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x2ad0f34c0020" loc="238:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x2ad0f341b1f0" loc="103:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x2ad0f34a3b50" loc="139:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x2ad0f352ec48" loc="1151:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x2ad0f350f310" loc="1103:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x2ad0f34a3140" loc="134:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x2ad0f3565d08" loc="139:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x2ad0f350d920" loc="1117:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x2ad0f352e020" loc="1145:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x2ad0f352a620" loc="1173:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x2ad0f3526c10" loc="1201:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x2ad0f35656e8" loc="134:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x2ad0f3b8a020" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x2ad0f3bae6a0" loc="226:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x2ad0f3228cb0" loc="60:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x2ad0f34bc020" loc="278:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x2ad0f34ce020" loc="735:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x2ad0f3540328" loc="1272:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x2ad0f3541620" loc="1266:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x2ad0f353e920" loc="1288:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x2ad0f34ea020" loc="849:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x2ad0f34eb328" loc="845:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x2ad0f3507c60" loc="912:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x2ad0f354d720" loc="127:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="HASH_MAX_SIZE" ref="0x2ad0f34acb40" loc="10:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/hashmap.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x2ad0f34e7938" loc="873:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x2ad0f30ec968" loc="60:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x2ad0f34f6328" loc="1022:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x2ad0f3547d98" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x2ad0f34ba710" loc="301:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x2ad0f34b9548" loc="313:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x2ad0f30506d0" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x2ad0f3519020" loc="1040:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x2ad0f3512620" loc="1085:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x2ad0f34ee330" loc="826:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x2ad0f3566020" loc="121:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x2ad0f34c1828" loc="232:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x2ad0f34e3020" loc="894:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x2ad0f34ffc40" loc="968:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x2ad0f34f0638" loc="815:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x2ad0f34a7b70" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x2ad0f34d3c48" loc="706:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x2ad0f3528c40" loc="1187:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x2ad0f3523328" loc="1215:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x2ad0f351f958" loc="1243:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x2ad0f34c4380" loc="185:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5000" name="PING_TIMEOUT" ref="0x2ad0f39d1020" loc="9:/home/adrian/git/tinyos-project1/pro1/src/ping.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x2ad0f34c5890" loc="176:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x2ad0f3501630" loc="950:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x2ad0f34bb140" loc="287:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x2ad0f3549060" loc="61:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x2ad0f3547a68" loc="74:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x2ad0f35684a0" loc="107:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x2ad0f3520c20" loc="1237:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x2ad0f34c66e0" loc="163:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x2ad0f34cd938" loc="745:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x2ad0f34a37e0" loc="136:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x2ad0f34bea48" loc="268:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x2ad0f34c8630" loc="775:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x2ad0f30ec330" loc="58:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x2ad0f3548d10" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x2ad0f3547728" loc="73:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x2ad0f322a850" loc="52:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x2ad0f3545b58" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x2ad0f34ef020" loc="818:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x2ad0f3513c50" loc="1082:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x2ad0f3502630" loc="945:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x2ad0f350a310" loc="1134:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x2ad0f352c928" loc="1162:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x2ad0f34a2d98" loc="146:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x2ad0f34bf498" loc="254:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CMD_PING" ref="0x2ad0f3966948" loc="13:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x2ad0f34aed38" loc="27:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x2ad0f34a6a50" loc="99:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x2ad0f350b630" loc="1128:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x2ad0f352dc40" loc="1156:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x2ad0f3528328" loc="1184:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x2ad0f3524950" loc="1212:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x2ad0f3507650" loc="910:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x2ad0f34d3020" loc="700:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x2ad0f3519c30" loc="1044:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x2ad0f34f9940" loc="1005:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x2ad0f350e310" loc="1108:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x2ad0f34fb658" loc="992:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x2ad0f34c9650" loc="770:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x2ad0f34d5320" loc="689:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x2ad0f34f6020" loc="1021:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x2ad0f3b759f8" loc="189:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x2ad0f34e5640" loc="884:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x2ad0f34cac20" loc="765:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x2ad0f3566328" loc="122:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x2ad0f3bb0358" loc="216:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x2ad0f34e3638" loc="896:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x2ad0f34ecbf0" loc="841:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x2ad0f3517020" loc="1052:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x2ad0f322ac48" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x2ad0f34ff020" loc="962:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x2ad0f34aa360" loc="43:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x2ad0f3503348" loc="937:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x2ad0f352bbe0" loc="1168:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x2ad0f3526310" loc="1196:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x2ad0f35228f0" loc="1224:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x2ad0f351d020" loc="1252:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x2ad0f3511020" loc="1088:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x2ad0f34d69d0" loc="686:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x2ad0f34fc620" loc="985:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x2ad0f35464d8" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x2ad0f304b278" loc="205:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="PACKET_MAX_PAYLOAD_SIZE" ref="0x2ad0f3491070" loc="15:/home/adrian/git/tinyos-project1/pro1/src/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x2ad0f34ba020" loc="295:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x2ad0f3b869a0" loc="91:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x2ad0f32285a8" loc="58:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x2ad0f3b883f8" loc="71:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x2ad0f34a6390" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x2ad0f3515940" loc="1067:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x2ad0f351e938" loc="1248:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x2ad0f34ea620" loc="851:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x2ad0f32336a8" loc="99:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x2ad0f3506020" loc="913:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CMD_KILL" ref="0x2ad0f3965df8" loc="19:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x2ad0f34e3c60" loc="900:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x2ad0f3516c78" loc="1063:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x2ad0f34c31b8" loc="197:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x2ad0f350d020" loc="1114:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x2ad0f3509640" loc="1142:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x2ad0f34cb630" loc="756:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x2ad0f34ce328" loc="736:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x2ad0f351cc30" loc="1263:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x2ad0f34ccc70" loc="753:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x2ad0f34cb020" loc="754:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x2ad0f3504620" loc="929:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x2ad0f34e7020" loc="870:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x2ad0f34c1ba0" loc="235:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x2ad0f34e8330" loc="864:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x2ad0f34fbc68" loc="994:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x2ad0f34c3c28" loc="210:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x2ad0f34fa950" loc="998:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x2ad0f3517940" loc="1055:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x2ad0f3514320" loc="1072:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x2ad0f34f4020" loc="785:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x2ad0f34f1648" loc="808:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x2ad0f34ef600" loc="820:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x2ad0f353e600" loc="1285:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x2ad0f34baa88" loc="304:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x2ad0f34c77f0" loc="151:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x2ad0f34bb498" loc="288:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x2ad0f3501c40" loc="954:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x2ad0f3512020" loc="1083:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x2ad0f3510620" loc="1097:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x2ad0f3545828" loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x2ad0f3568de0" loc="110:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x2ad0f304b7a0" loc="209:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x2ad0f34e4660" loc="891:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x2ad0f34d0630" loc="723:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x2ad0f3518328" loc="1046:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x2ad0f34bc6e8" loc="282:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x2ad0f34b9c20" loc="319:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x2ad0f353d320" loc="1291:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x2ad0f31275d8" loc="76:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x2ad0f30ec020" loc="57:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x2ad0f355f510" loc="61:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x2ad0f3529620" loc="1178:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x2ad0f3525c20" loc="1206:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x2ad0f3520320" loc="1234:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x2ad0f3560dd0" loc="58:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x2ad0f34f2c58" loc="803:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x2ad0f3b8a7a0" loc="64:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x2ad0f34cdc40" loc="746:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x2ad0f304aa68" loc="300:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x2ad0f34d5928" loc="691:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x2ad0f3508c30" loc="905:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x2ad0f3511c58" loc="1094:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x2ad0f354de78" loc="129:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x2ad0f351a320" loc="1034:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x2ad0f350b940" loc="1131:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x2ad0f3b86330" loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x2ad0f34f5c58" loc="784:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x2ad0f314bae8" loc="48:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x2ad0f34ab4a0" loc="33:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x2ad0f353c328" loc="1298:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x2ad0f3b85020" loc="93:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x2ad0f34d4920" loc="698:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x2ad0f34d3640" loc="704:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PROTOCOL_TCP" ref="0x2ad0f349f140" loc="13:/home/adrian/git/tinyos-project1/pro1/src/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x2ad0f34c0da0" loc="250:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x2ad0f3505928" loc="923:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x2ad0f350cc40" loc="1125:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x2ad0f352d328" loc="1153:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x2ad0f3529948" loc="1181:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x2ad0f34fd320" loc="977:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="PING_CMD_LENGTH" ref="0x2ad0f39646d8" loc="25:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x2ad0f34fe938" loc="974:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x2ad0f350f8f0" loc="1105:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x2ad0f35461a8" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x2ad0f34e6c70" loc="881:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x2ad0f34c0a40" loc="247:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x2ad0f34ca320" loc="762:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x2ad0f34bd498" loc="273:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x2ad0f34bcd98" loc="284:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x2ad0f34cf938" loc="733:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x2ad0f3540938" loc="1274:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x2ad0f34e4020" loc="887:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x2ad0f3549c80" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x2ad0f34d2c48" loc="713:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x2ad0f34e6020" loc="875:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x2ad0f32294f0" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x2ad0f350abe0" loc="1137:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x2ad0f352b310" loc="1165:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x2ad0f3062380" loc="60:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x2ad0f3500020" loc="955:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x2ad0f3527910" loc="1193:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x2ad0f3522020" loc="1221:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x2ad0f34bae00" loc="307:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x2ad0f34eb630" loc="846:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x2ad0f34c51c8" loc="172:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x2ad0f34f2020" loc="799:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x2ad0f34ee930" loc="828:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x2ad0f34ed930" loc="835:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x2ad0f34cc960" loc="752:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x2ad0f3519630" loc="1042:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x2ad0f34cb950" loc="759:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x2ad0f3052a28" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x2ad0f351a020" loc="1033:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x2ad0f3b89b50" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x2ad0f34d2328" loc="708:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x2ad0f34a5140" loc="105:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x2ad0f34fa020" loc="995:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x2ad0f3523938" loc="1217:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x2ad0f351e020" loc="1245:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x2ad0f34d7448" loc="677:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x2ad0f34d60b0" loc="681:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x2ad0f34c7140" loc="149:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x2ad0f354aa28" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x2ad0f3542d88" loc="105:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x2ad0f350e630" loc="1111:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x2ad0f355f140" loc="59:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x2ad0f34cd328" loc="743:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x2ad0f3511348" loc="1091:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x2ad0f35489d0" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x2ad0f3516658" loc="1061:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x2ad0f35674b0" loc="112:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x2ad0f35454f8" loc="82:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x2ad0f34bfb68" loc="258:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x2ad0f3502c40" loc="947:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x2ad0f350a8f0" loc="1136:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x2ad0f34f9020" loc="1002:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x2ad0f34a2378" loc="141:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x2ad0f352b020" loc="1164:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x2ad0f3527620" loc="1192:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x2ad0f304ace8" loc="301:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_ROUTETABLE_DUMP" ref="0x2ad0f3965400" loc="16:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x2ad0f34f4948" loc="790:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x2ad0f351c020" loc="1257:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x2ad0f353fc30" loc="1282:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x2ad0f34fa330" loc="996:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SEND_BUFFER_SIZE" ref="0x2ad0f399b5c8" loc="9:/home/adrian/git/tinyos-project1/pro1/src/packBuffer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x2ad0f34c9c60" loc="772:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x2ad0f34a86e0" loc="69:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x2ad0f34d1c68" loc="720:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x2ad0f34f8620" loc="1011:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x2ad0f34d7d50" loc="680:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x2ad0f34c6380" loc="160:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x2ad0f3bb15c8" loc="212:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x2ad0f354c228" loc="130:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x2ad0f30957f8" loc="212:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x2ad0f352e620" loc="1147:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x2ad0f352ac20" loc="1175:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x2ad0f3525320" loc="1203:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x2ad0f3521920" loc="1231:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x2ad0f34f0328" loc="812:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x2ad0f3503020" loc="934:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x2ad0f35268f0" loc="1198:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x2ad0f34f5950" loc="783:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x2ad0f34fd920" loc="979:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x2ad0f3521020" loc="1226:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x2ad0f351d600" loc="1254:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x2ad0f34a4020" loc="119:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x2ad0f3515020" loc="1064:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x2ad0f3560670" loc="56:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x2ad0f34fc020" loc="983:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x2ad0f3b8ab30" loc="65:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x2ad0f34e9328" loc="857:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x2ad0f34d2648" loc="711:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x2ad0f34f7c20" loc="1020:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x2ad0f34f1340" loc="807:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x2ad0f34c46f0" loc="188:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x2ad0f31aa020" loc="62:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x2ad0f34a5810" loc="111:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x2ad0f34d4020" loc="695:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x2ad0f34e9930" loc="859:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x2ad0f3506620" loc="915:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x2ad0f3506948" loc="918:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x2ad0f3513630" loc="1078:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x2ad0f350c328" loc="1122:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CMD_TEST_CLIENT" ref="0x2ad0f3965768" loc="17:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x2ad0f34bf140" loc="253:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x2ad0f35473e8" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x2ad0f34c1148" loc="226:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x2ad0f3095528" loc="211:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x2ad0f3514900" loc="1074:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x2ad0f34f8920" loc="1012:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x2ad0f350f020" loc="1102:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x2ad0f341b978" loc="105:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x2ad0f3560a68" loc="57:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x2ad0f350d620" loc="1116:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x2ad0f3509c40" loc="1144:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x2ad0f352a320" loc="1172:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x2ad0f34cfc40" loc="734:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x2ad0f3540020" loc="1271:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x2ad0f3bb0020" loc="215:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x2ad0f3541320" loc="1265:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x2ad0f3568190" loc="106:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x2ad0f34d1350" loc="717:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x2ad0f3504020" loc="927:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PROTOCOL_PINGREPLY" ref="0x2ad0f34a06a8" loc="10:/home/adrian/git/tinyos-project1/pro1/src/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x2ad0f34ebc40" loc="848:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x2ad0f3507958" loc="911:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x2ad0f34e7630" loc="872:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x2ad0f31aa658" loc="64:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x2ad0f34f7310" loc="1015:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x2ad0f34efbf8" loc="822:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x2ad0f3544350" loc="86:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x2ad0f3513020" loc="1076:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x2ad0f34a8020" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x2ad0f34b8020" loc="322:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x2ad0f3b893d0" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x2ad0f3500930" loc="960:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x2ad0f34ff310" loc="963:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x2ad0f34fec38" loc="975:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x2ad0f3512320" loc="1084:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x2ad0f3566998" loc="127:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x2ad0f3518928" loc="1048:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x2ad0f34c14b8" loc="229:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x2ad0f34e4c80" loc="893:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x2ad0f34ee630" loc="827:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x2ad0f34a7140" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x2ad0f352c328" loc="1158:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x2ad0f34f4648" loc="789:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x2ad0f34ec020" loc="837:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x2ad0f3528938" loc="1186:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x2ad0f3523020" loc="1214:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x2ad0f34fb020" loc="988:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x2ad0f351f650" loc="1242:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x2ad0f3b756a8" loc="188:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x2ad0f34cc348" loc="750:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x2ad0f3501328" loc="949:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x2ad0f3549368" loc="62:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x2ad0f34ff610" loc="964:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x2ad0f34fe020" loc="969:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x2ad0f3524320" loc="1208:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x2ad0f3520920" loc="1236:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x2ad0f3bb1bf8" loc="214:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x2ad0f34f2330" loc="800:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x2ad0f3049020" loc="302:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x2ad0f34cd630" loc="744:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x2ad0f351a920" loc="1036:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x2ad0f34c0380" loc="241:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x2ad0f3510320" loc="1096:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x2ad0f3502328" loc="944:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x2ad0f3515c48" loc="1068:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x2ad0f350a020" loc="1133:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x2ad0f352c638" loc="1161:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x2ad0f34a6020" loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x2ad0f34c2020" loc="213:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x2ad0f3519328" loc="1041:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x2ad0f3095240" loc="210:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x2ad0f34d4c28" loc="699:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x2ad0f350b328" loc="1127:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x2ad0f352d938" loc="1155:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x2ad0f3528020" loc="1183:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x2ad0f3524648" loc="1211:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x2ad0f3515638" loc="1066:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x2ad0f350e020" loc="1107:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x2ad0f34e6630" loc="877:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x2ad0f3508630" loc="903:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x2ad0f3b8bb28" loc="59:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x2ad0f34c9348" loc="769:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x2ad0f34d5020" loc="688:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x2ad0f3560258" loc="55:/home/adrian/local/tinyos-2.1.1/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x2ad0f35687b0" loc="108:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x2ad0f34e8c60" loc="867:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x2ad0f34e5330" loc="883:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x2ad0f34ca920" loc="764:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x2ad0f34bc378" loc="279:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x2ad0f34cf328" loc="731:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x2ad0f3233a28" loc="103:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x2ad0f353f020" loc="1276:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x2ad0f353d948" loc="1295:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x2ad0f3567808" loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x2ad0f34eac48" loc="855:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x2ad0f3505328" loc="921:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x2ad0f3544680" loc="87:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x2ad0f3549670" loc="63:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x2ad0f3baf1d8" loc="220:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x2ad0f34ec900" loc="840:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x2ad0f34a2a40" loc="145:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x2ad0f34d9e08" loc="675:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x2ad0f3b89788" loc="68:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x2ad0f34a5ba0" loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x2ad0f341db78" loc="96:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x2ad0f34aa020" loc="41:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x2ad0f3063528" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x2ad0f3503650" loc="938:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x2ad0f34f7900" loc="1017:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x2ad0f352b8f0" loc="1167:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x2ad0f3500620" loc="957:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x2ad0f3526020" loc="1195:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x2ad0f3522600" loc="1223:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x2ad0f351ec48" loc="1251:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5333" name="PING_TIMER_PERIOD" ref="0x2ad0f39d3c40" loc="8:/home/adrian/git/tinyos-project1/pro1/src/ping.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x2ad0f3bb0d40" loc="219:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x2ad0f3512c30" loc="1087:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x2ad0f34d66d0" loc="685:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x2ad0f34f5330" loc="781:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x2ad0f34ed020" loc="830:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x2ad0f34fc320" loc="984:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x2ad0f3518020" loc="1045:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x2ad0f354c5c8" loc="131:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x2ad0f34eec30" loc="829:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x2ad0f34bbb68" loc="292:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x2ad0f3516020" loc="1057:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x2ad0f34a7810" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x2ad0f351e630" loc="1247:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x2ad0f34ea320" loc="850:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x2ad0f34cb328" loc="755:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x2ad0f3095af8" loc="213:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x2ad0f3517330" loc="1053:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x2ad0f3513950" loc="1081:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x2ad0f34a9140" loc="51:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x2ad0f3054de0" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PROTOCOL_PING" ref="0x2ad0f34a0320" loc="9:/home/adrian/git/tinyos-project1/pro1/src/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x2ad0f3422410" loc="27:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x2ad0f350ec30" loc="1113:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x2ad0f3509340" loc="1141:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x2ad0f34cec60" loc="741:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x2ad0f351c930" loc="1262:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x2ad0f34bb7f0" loc="289:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DUMP_NEIGHBOR_LENGTH" ref="0x2ad0f3964a98" loc="26:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x2ad0f3b88b78" loc="76:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x2ad0f341b5a8" loc="104:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x2ad0f34c6020" loc="157:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x2ad0f34c3538" loc="202:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x2ad0f34fb960" loc="993:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x2ad0f34bf7f0" loc="255:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x2ad0f304bd10" loc="213:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x2ad0f30562a8" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x2ad0f3566d00" loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x2ad0f341d7d8" loc="95:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x2ad0f34c26f0" loc="219:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x2ad0f34f1950" loc="809:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x2ad0f34ef310" loc="819:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x2ad0f353e310" loc="1284:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x2ad0f34f3c28" loc="796:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x2ad0f34a9818" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x2ad0f34c8328" loc="774:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x2ad0f305f940" loc="55:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x2ad0f304ba58" loc="211:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x2ad0f34e4350" loc="890:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x2ad0f34a8da0" loc="75:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x2ad0f34d0328" loc="722:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x2ad0f354ba68" loc="47:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x2ad0f3b8b3c8" loc="57:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x2ad0f34f7020" loc="1014:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x2ad0f351a620" loc="1035:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x2ad0f3546808" loc="78:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x2ad0f3228948" loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x2ad0f34bdb60" loc="277:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x2ad0f34f7600" loc="1016:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x2ad0f3b75368" loc="187:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x2ad0f354b6c8" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x2ad0f3541c20" loc="1268:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x2ad0f353d020" loc="1290:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x2ad0f3548358" loc="67:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x2ad0f351ac28" loc="1037:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x2ad0f34f0928" loc="816:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x2ad0f3514020" loc="1071:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x2ad0f3b89020" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x2ad0f3529320" loc="1177:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x2ad0f3525920" loc="1205:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x2ad0f3520020" loc="1233:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x2ad0f34f3020" loc="792:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x2ad0f3504948" loc="932:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x2ad0f3521600" loc="1228:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x2ad0f351dbe0" loc="1256:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x2ad0f34c5520" loc="173:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x2ad0f34fc920" loc="986:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x2ad0f353f940" loc="1281:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x2ad0f3baf538" loc="221:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x2ad0f34a3490" loc="135:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x2ad0f31aa330" loc="63:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x2ad0f3508930" loc="904:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:257" name="SIM_LOG_OUTPUT_COUNT" ref="0x2ad0f315e240" loc="64:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x2ad0f34fe328" loc="970:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x2ad0f3b88020" loc="70:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x2ad0f341ed48" loc="88:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x2ad0f34fd620" loc="978:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x2ad0f34f4c48" loc="791:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x2ad0f34f6918" loc="1024:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x2ad0f34c38b8" loc="207:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x2ad0f34f5020" loc="780:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x2ad0f353f630" loc="1278:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x2ad0f353c020" loc="1297:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x2ad0f3b87c40" loc="84:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x2ad0f34d4620" loc="697:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x2ad0f34d3340" loc="703:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x2ad0f30ec640" loc="59:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x2ad0f34e8020" loc="861:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x2ad0f3507348" loc="909:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x2ad0f34a26e8" loc="144:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x2ad0f3505628" loc="922:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x2ad0f350c938" loc="1124:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x2ad0f352d020" loc="1152:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x2ad0f350f600" loc="1104:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x2ad0f350dc20" loc="1118:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x2ad0f34e6960" loc="880:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x2ad0f352e320" loc="1146:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x2ad0f34ca020" loc="761:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x2ad0f352a920" loc="1174:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x2ad0f3525020" loc="1202:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x2ad0f3057450" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x2ad0f34cf630" loc="732:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x2ad0f3540630" loc="1273:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x2ad0f34d7750" loc="678:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x2ad0f34e5c58" loc="886:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x2ad0f34d2948" loc="712:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x2ad0f3548020" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x2ad0f34e7c40" loc="874:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x2ad0f34ff920" loc="965:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x2ad0f34be020" loc="261:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x2ad0f34a4dc0" loc="131:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x2ad0f351bc50" loc="1032:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x2ad0f34b98c0" loc="316:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x2ad0f34ec320" loc="838:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x2ad0f34e3330" loc="895:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x2ad0f34fe648" loc="973:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x2ad0f34f6618" loc="1023:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x2ad0f34a66f0" loc="96:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x2ad0f34d2020" loc="707:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x2ad0f34f3928" loc="795:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x2ad0f34ea940" loc="854:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x2ad0f3527020" loc="1188:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x2ad0f3523630" loc="1216:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x2ad0f351fc60" loc="1244:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x2ad0f354b020" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x2ad0f34f8c08" loc="1013:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x2ad0f304b520" loc="207:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x2ad0f3b87960" loc="83:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x2ad0f3514610" loc="1073:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x2ad0f354a460" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x2ad0f3b87020" loc="77:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x2ad0f3b75020" loc="186:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x2ad0f3229138" loc="54:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x2ad0f34fd020" loc="976:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x2ad0f35449b0" loc="88:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x2ad0f34a4a50" loc="128:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x2ad0f354ad30" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x2ad0f32413e0" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x2ad0f351f020" loc="1238:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x2ad0f34cd020" loc="742:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x2ad0f3518c58" loc="1051:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x2ad0f34c8938" loc="776:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x2ad0f34ed320" loc="831:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x2ad0f3518628" loc="1047:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x2ad0f354b3c0" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x2ad0f3502938" loc="946:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x2ad0f350a600" loc="1135:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x2ad0f352cc18" loc="1163:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x2ad0f3527330" loc="1191:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x2ad0f341c020" loc="97:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x2ad0f3054020" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x2ad0f34e8950" loc="866:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="PROTOCOL_CMD" ref="0x2ad0f349f4b0" loc="14:/home/adrian/git/tinyos-project1/pro1/src/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x2ad0f34aa6a0" loc="44:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x2ad0f34f1c50" loc="810:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x2ad0f34f9c50" loc="1006:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x2ad0f3517c50" loc="1056:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x2ad0f34c7498" loc="150:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x2ad0f34fac80" loc="1001:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x2ad0f34c9958" loc="771:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x2ad0f34d5620" loc="690:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x2ad0f351b948" loc="1031:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x2ad0f34c2a60" loc="222:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x2ad0f3bb18e0" loc="213:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x2ad0f34e5950" loc="885:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x2ad0f305f020" loc="52:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x2ad0f305f628" loc="54:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x2ad0f34d1960" loc="719:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x2ad0f34c9020" loc="766:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x2ad0f34ee020" loc="823:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x2ad0f34bd7f0" loc="274:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x2ad0f34e3940" loc="897:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x2ad0f3b86cb0" loc="92:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x2ad0f3564060" loc="140:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x2ad0f3516968" loc="1062:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x2ad0f3423e18" loc="15:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x2ad0f35451c8" loc="81:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x2ad0f305f320" loc="53:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x2ad0f3526600" loc="1197:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x2ad0f34f1020" loc="804:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x2ad0f3522be0" loc="1225:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x2ad0f351d310" loc="1253:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x2ad0f30611f8" loc="61:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x2ad0f34aad68" loc="48:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x2ad0f3517638" loc="1054:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x2ad0f34a4380" loc="122:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x2ad0f34e9020" loc="856:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x2ad0f30ecc90" loc="61:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x2ad0f3546b38" loc="79:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x2ad0f3543020" loc="90:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x2ad0f3513328" loc="1077:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x2ad0f34a6dc0" loc="102:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x2ad0f34d5c48" loc="694:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x2ad0f3506320" loc="914:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x2ad0f350c020" loc="1121:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x2ad0f34c06e0" loc="244:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x2ad0f34c4a60" loc="191:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x2ad0f3510c30" loc="1101:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x2ad0f34c5bf0" loc="179:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x2ad0f34be6f8" loc="267:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x2ad0f3567190" loc="111:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x2ad0f350d320" loc="1115:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x2ad0f3509940" loc="1143:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x2ad0f352a020" loc="1171:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x2ad0f34ce630" loc="737:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x2ad0f3541020" loc="1264:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CMD_TEST_SERVER" ref="0x2ad0f3965ad0" loc="18:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="AM_PACK" ref="0x2ad0f34ae020" loc="41:/home/adrian/git/tinyos-project1/pro1/src/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x2ad0f3504320" loc="928:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x2ad0f3b8d488" loc="53:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x2ad0f3422790" loc="28:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x2ad0f34e7328" loc="871:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x2ad0f3bafc08" loc="223:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x2ad0f34ed630" loc="834:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x2ad0f34f8020" loc="1007:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x2ad0f3515328" loc="1065:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x2ad0f34a9b90" loc="60:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x2ad0f34b91d0" loc="310:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x2ad0f34a8a40" loc="72:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x2ad0f34f8330" loc="1010:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_NEIGHBOR_DUMP" ref="0x2ad0f3966cc8" loc="14:/home/adrian/git/tinyos-project1/pro1/src/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x2ad0f354c948" loc="132:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x2ad0f3510920" loc="1098:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x2ad0f3233328" loc="96:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x2ad0f3519930" loc="1043:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x2ad0f34e4970" loc="892:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x2ad0f34d0938" loc="724:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="PACKET_HEADER_LENGTH" ref="0x2ad0f3492a50" loc="14:/home/adrian/git/tinyos-project1/pro1/src/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x2ad0f34ab140" loc="30:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x2ad0f34a54a0" loc="108:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x2ad0f34e8640" loc="865:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x2ad0f352c020" loc="1157:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x2ad0f34edc30" loc="836:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x2ad0f3528630" loc="1185:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x2ad0f34fcc28" loc="987:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x2ad0f3524c58" loc="1213:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x2ad0f351f348" loc="1241:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x2ad0f34d7140" loc="676:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x2ad0f34a8380" loc="66:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x2ad0f353d620" loc="1292:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x2ad0f34cc650" loc="751:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x2ad0f31278b8" loc="76:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x2ad0f3524020" loc="1207:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x2ad0f32281d0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x2ad0f3520620" loc="1235:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x2ad0f34a46e0" loc="125:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x2ad0f3503c78" loc="942:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x2ad0f34c2db8" loc="223:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x2ad0f34f2640" loc="801:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x2ad0f3053bd0" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x2ad0f34cc020" loc="747:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x2ad0f351b020" loc="1026:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x2ad0f3507020" loc="906:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x2ad0f34fb328" loc="989:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x2ad0f3510020" loc="1095:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x2ad0f3462190" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NUM_TASKS" ref="0x2ad0f3463e48" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="stopDoneTask" ref="0x2ad0f37e2af0" loc="101:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendDoneTask" ref="0x2ad0f37e3a70" loc="145:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="startDoneTask" ref="0x2ad0f3867a98" loc="96:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="sendBufferTask" ref="0x2ad0f3b444b8" loc="79:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x2ad0f3c13020" loc="45:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x2ad0f3c13340" loc="46:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x2ad0f3b8ebb0" loc="74:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x2ad0f3d73cc0" loc="56:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x2ad0f3d81a38" loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x2ad0f3d73980" loc="55:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="NUM_CLIENTS" ref="0x2ad0f3e3e6f8" loc="48:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x2ad0f3e3da70" loc="169:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x2ad0f3e3caf0" loc="126:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x2ad0f2541120" loc="120:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x2ad0f2541120"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x2ad0f3437380" loc="134:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x2ad0f3416998"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x2ad0f3437380"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x2ad0f3bab578" loc="247:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3bac7d8"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x2ad0f3bab578"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x2ad0f2e3a228" loc="201:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x2ad0f2e3a228"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x2ad0f2529a28" loc="324:/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x2ad0f2529a28"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x2ad0f35427b8" loc="99:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3542300"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x2ad0f35427b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x2ad0f2e183d0" loc="152:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x2ad0f2e183d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x2ad0f34204b8" loc="16:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x2ad0f3421e90"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x2ad0f34204b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_uint32_t" ref="0x2ad0f30862e8" loc="56:/usr/include/_G_config.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_uint32_t" ref="0x2ad0f30862e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int64_t" ref="0x2ad0f2dfab28" loc="44:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x2ad0f2dfab28"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x2ad0f2df1b38" loc="39:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x2ad0f2df1b38"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x2ad0f3416658" loc="129:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x2ad0f3418618"/>
        <typename><typedef-ref name="serial_header_t" ref="0x2ad0f3416658"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x2ad0f3465d28" loc="42:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f34659d0"/>
        <typename><typedef-ref name="TMilli" ref="0x2ad0f3465d28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_int16_t" ref="0x2ad0f30872e0" loc="53:/usr/include/_G_config.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_int16_t" ref="0x2ad0f30872e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_char" ref="0x2ad0f2df44d0" loc="31:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x2ad0f2df44d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x2ad0f3b83b90" loc="111:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x2ad0f3b83b90"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x2ad0f3ba6920" loc="278:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x2ad0f3ba6920"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x2ad0f2e093e0" loc="189:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__intptr_t" ref="0x2ad0f2e093e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x2ad0f2e01be8" loc="185:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x2ad0f2df93d0"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x2ad0f2e01be8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x2ad0f3b81c28" loc="116:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x2ad0f3b81c28"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x2ad0f2e19410" loc="76:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x2ad0f2e190b8"/>
        <typename><typedef-ref name="fd_set" ref="0x2ad0f2e19410"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x2ad0f31241a0" loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x2ad0f31241a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0x2ad0f2e09020" loc="186:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x2ad0f2e09020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x2ad0f2dfd988" loc="149:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__time_t" ref="0x2ad0f2dfd988"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0x2ad0f2e01420" loc="180:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ssize_t" ref="0x2ad0f2e01420"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x2ad0f2eae740" loc="31:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x2ad0f2eae740"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x2ad0f2e055b0" loc="71:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x2ad0f2e055b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="datatype2" ref="0x2ad0f3a017c8" loc="6:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsplist.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref name="nodeID" ref="0x2ad0f3a04528"/>
        <typename><typedef-ref name="datatype2" ref="0x2ad0f3a017c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x2ad0f3ba84b8" loc="262:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3baaba0"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x2ad0f3ba84b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x2ad0f3083020" loc="182:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x2ad0f3083020"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0x2ad0f253b768" loc="68:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x2ad0f253b768"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x2ad0f251f600"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x2ad0f251f4a0"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x2ad0f2dfa758" loc="42:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x2ad0f2dfa758"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x2ad0f34a1c50" loc="44:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f34a18f8"/>
        <typename><typedef-ref name="TMicro" ref="0x2ad0f34a1c50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x2ad0f2e02c40" loc="177:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x2ad0f2e02c40"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashmapEntry" ref="0x2ad0f39346e0" loc="16:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/hashmap.h">
      <type-tag size="I:4" alignment="I:2"><struct-ref name="hashmapEntry" ref="0x2ad0f34ace78"/>
        <typename><typedef-ref name="hashmapEntry" ref="0x2ad0f39346e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nlink_t" ref="0x2ad0f2e05958" loc="76:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="nlink_t" ref="0x2ad0f2e05958"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x2ad0f2e10bb0" loc="60:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x2ad0f2e10bb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x2ad0f3ba6540" loc="277:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x2ad0f3ba6540"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x2ad0f2e2dcf0" loc="136:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2ad0f2e2d8e8"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x2ad0f2e2dcf0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_list_t" ref="0x2ad0f2e2bc70" loc="65:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x2ad0f2e2b1c0"/>
        <typename><typedef-ref name="__pthread_list_t" ref="0x2ad0f2e2bc70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x2ad0f31bd560" loc="65:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/heap.h">
      <documentation loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x2ad0f31beb68"/>
        <typename><typedef-ref name="heap_t" ref="0x2ad0f31bd560"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x2ad0f2df73a0" loc="136:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x2ad0f2df73a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x2ad0f2d812f8" loc="446:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x2ad0f2d812f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x2ad0f3160740" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x2ad0f31619f0"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x2ad0f3160740"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x2ad0f2e083a0" loc="36:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x2ad0f2e083a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x2ad0f2e36500" loc="144:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x2ad0f2e36500"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0x2ad0f2e18738" loc="153:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x2ad0f2e18738"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x2ad0f34234f8" loc="11:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x2ad0f34234f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x2ad0f3ba8950" loc="265:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3baaba0"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x2ad0f3ba8950"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x2ad0f253d020" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x2ad0f253d020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x2ad0f2dff720" loc="144:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2ad0f2dff3c8"/>
        <typename><typedef-ref name="__fsid_t" ref="0x2ad0f2dff720"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x2ad0f3ba8d70" loc="269:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x2ad0f3ba8d70"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x2ad0f3ba7958" loc="272:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x2ad0f3ba7958"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x2ad0f253f938" loc="107:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast32_t" ref="0x2ad0f253f938"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x2ad0f2e241d0" loc="229:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blksize_t" ref="0x2ad0f2e241d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x2ad0f253bb28" loc="70:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x2ad0f253bb28"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x2ad0f3b9b0c8" loc="324:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b9dc90"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ad0f3b9b0c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0x2ad0f2df6e50" loc="143:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x2ad0f2df6e50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x2ad0f2df4c20" loc="33:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x2ad0f2df4c20"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x2ad0f3b81858" loc="115:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x2ad0f3b81858"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x2ad0f3ba6160" loc="276:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x2ad0f3ba6160"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x2ad0f312fcb0" loc="51:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x2ad0f312f8d8"/>
        <typename><typedef-ref name="sim_event_t" ref="0x2ad0f312fcb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x2ad0f328f5d8" loc="67:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x2ad0f328f5d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x2ad0f2e157c0" loc="24:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x2ad0f2e157c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x2ad0f3b76978" loc="178:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b76570"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x2ad0f3b76978"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0x2ad0f2dfc4b0" loc="153:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x2ad0f2dfc4b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x2ad0f2df7758" loc="137:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino_t" ref="0x2ad0f2df7758"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_uint16_t" ref="0x2ad0f3087d50" loc="55:/usr/include/_G_config.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="_G_uint16_t" ref="0x2ad0f3087d50"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x2ad0f253b020" loc="66:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x2ad0f253b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x2ad0f3079c78" loc="49:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/>
        <typename><typedef-ref name="FILE" ref="0x2ad0f3079c78"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x2ad0f2e84748" loc="742:/usr/include/stdlib.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x2ad0f2e84748"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x2ad0f2d9e4d8" loc="40:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x2ad0f2da0a50"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x2ad0f2d9e4d8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x2ad0f3562bd8" loc="161:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x2ad0f3562bd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x2ad0f2df6020" loc="139:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x2ad0f2df6020"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0x2ad0f2d9e8b8" loc="43:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x2ad0f2da0a50"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x2ad0f2d9e8b8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x2ad0f34182d8" loc="121:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x2ad0f341a128"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x2ad0f34182d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x2ad0f2e0f4f8" loc="92:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x2ad0f2e0f4f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x2ad0f3ba3d18" loc="291:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x2ad0f3ba3d18"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x2ad0f3ba1908" loc="294:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x2ad0f3ba1908"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x2ad0f2e05218" loc="66:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x2ad0f2e05218"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x2ad0f2e073b8" loc="40:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2ad0f2dff3c8"/>
        <typename><typedef-ref name="fsid_t" ref="0x2ad0f2e073b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nodeID" ref="0x2ad0f3a04a98" loc="11:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsp.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref name="nodeID" ref="0x2ad0f3a04528"/>
        <typename><typedef-ref name="nodeID" ref="0x2ad0f3a04a98"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x2ad0f34100c8" loc="59:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x2ad0f3411d48"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x2ad0f34100c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x2ad0f3562438" loc="158:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2ad0f3563cd8"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2ad0f3562438"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x2ad0f2539020" loc="37:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x2ad0f2539020"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x2ad0f31616a0" loc="54:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x2ad0f314be30"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x2ad0f31616a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x2ad0f2e1c0c8" loc="49:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="suseconds_t" ref="0x2ad0f2e1c0c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x2ad0f2e149e0" loc="38:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x2ad0f2e142a8"/>
        <typename><typedef-ref name="sigset_t" ref="0x2ad0f2e149e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="T32khz" ref="0x2ad0f34a14e8" loc="43:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f34a1190"/>
        <typename><typedef-ref name="T32khz" ref="0x2ad0f34a14e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x2ad0f2e08020" loc="35:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x2ad0f2e08020"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x2ad0f3421b50" loc="12:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x2ad0f3422b10"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x2ad0f3421b50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x2ad0f2529250" loc="150:/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x2ad0f2529250"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x2ad0f34654b0" loc="41:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/Timer.h">
      <documentation loc="1:/home/adrian/git/tinyos-project1/pro1/src/NodeC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.&#10;&#10; @author UCM ANDES Lab&#10; @date   Apr 28 2012&#10; &#10;</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x2ad0f3465158"/>
        <typename><typedef-ref name="TSecond" ref="0x2ad0f34654b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x2ad0f2e245b0" loc="236:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blkcnt_t" ref="0x2ad0f2e245b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x2ad0f253a778" loc="52:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x2ad0f253a778"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x2ad0f2d87110" loc="448:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x2ad0f2d87110"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x2ad0f2d7f460" loc="435:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x2ad0f2d7f460"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x2ad0f25414f0" loc="123:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x2ad0f25414f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x2ad0f2e103c8" loc="117:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x2ad0f2e103c8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x2ad0f2df1020" loc="34:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_long" ref="0x2ad0f2df1020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x2ad0f253fd30" loc="108:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x2ad0f253fd30"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x2ad0f3ba7578" loc="271:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x2ad0f3ba7578"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x2ad0f2dfa020" loc="40:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x2ad0f2dfa020"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x2ad0f2e09b40" loc="34:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x2ad0f2e09b40"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x2ad0f3550978" loc="120:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x2ad0f3550978"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x2ad0f253e5b8" loc="93:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast16_t" ref="0x2ad0f253e5b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x2ad0f3ba7d58" loc="275:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x2ad0f3ba7d58"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x2ad0f3ba4160" loc="280:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x2ad0f3ba4160"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x2ad0f30afc10" loc="111:/usr/include/stdio.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2ad0f308ae38"/>
        <typename><typedef-ref name="fpos_t" ref="0x2ad0f30afc10"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x2ad0f3bab0c8" loc="244:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3bac7d8"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x2ad0f3bab0c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x2ad0f2ddb668" loc="102:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2ad0f2ddb260"/>
        <typename><typedef-ref name="div_t" ref="0x2ad0f2ddb668"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x2ad0f32cbe50" loc="6:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x2ad0f32cb6b8"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x2ad0f32cbe50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x2ad0f2529660" loc="212:/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x2ad0f2529660"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x2ad0f2df1768" loc="38:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x2ad0f2df1768"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x2ad0f2e14600" loc="32:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x2ad0f2e142a8"/>
        <typename><typedef-ref name="__sigset_t" ref="0x2ad0f2e14600"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x2ad0f3b837b8" loc="110:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b84ce0"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x2ad0f3b837b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x2ad0f2e017f8" loc="184:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x2ad0f2e017f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x2ad0f2df7b28" loc="138:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x2ad0f2df7b28"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x2ad0f3424490" loc="6:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h">
      <documentation loc="34:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x2ad0f3424490"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x2ad0f3435900" loc="53:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_header" ref="0x2ad0f3435020"/>
        <typename><typedef-ref name="message_header_t" ref="0x2ad0f3435900"/></typename>
      </type-tag>
    </typedef>
    <typedef name="lspAlgorithm" ref="0x2ad0f3a03628" loc="15:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsp.h">
      <type-tag size="I:2" alignment="I:1"><struct-ref name="lspAlgorithm" ref="0x2ad0f3a04dd0"/>
        <typename><typedef-ref name="lspAlgorithm" ref="0x2ad0f3a03628"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x2ad0f32ba2d8" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x2ad0f32bc7e8"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x2ad0f32ba2d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x2ad0f34238b0" loc="12:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x2ad0f34238b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x2ad0f2d806c8" loc="433:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x2ad0f2d806c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x2ad0f3562808" loc="160:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x2ad0f3562808"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x2ad0f253d620" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x2ad0f253d620"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0x2ad0f309a590" loc="386:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x2ad0f309a590"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0x2ad0f253a020" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x2ad0f253a020"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x2ad0f2e0f088" loc="76:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x2ad0f2e0f088"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x2ad0f2d84060" loc="441:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x2ad0f2d84060"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x2ad0f2ddabd0" loc="122:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2ad0f2dda7c8"/>
        <typename><typedef-ref name="lldiv_t" ref="0x2ad0f2ddabd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0x2ad0f308dad8" loc="343:/usr/include/libio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x2ad0f308dad8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x2ad0f2e2cd90" loc="57:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref ref="0x2ad0f2e2c988"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x2ad0f2e2cd90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x2ad0f309bc28" loc="383:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x2ad0f2df6b08"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x2ad0f309bc28"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x2ad0f2e13408" loc="99:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x2ad0f2e13408"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x2ad0f2e0f900" loc="104:/usr/include/time.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x2ad0f2e0f900"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x2ad0f2e32df0" loc="195:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x2ad0f2e329e8"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x2ad0f2e32df0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x2ad0f3b81020" loc="112:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x2ad0f3b81020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x2ad0f2df9020" loc="45:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x2ad0f2df9020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x2ad0f2df9c00" loc="134:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x2ad0f2df9c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x2ad0f2d84e00" loc="443:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x2ad0f2d84e00"/></typename>
      </type-int>
    </typedef>
    <typedef name="pack" ref="0x2ad0f3490a80" loc="27:/home/adrian/git/tinyos-project1/pro1/src/packet.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2ad0f3491690"/>
        <typename><typedef-ref name="pack" ref="0x2ad0f3490a80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x2ad0f30af830" loc="80:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x2ad0f251f4a0"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x2ad0f30af830"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="sendInfo" ref="0x2ad0f399a358" loc="16:/home/adrian/git/tinyos-project1/pro1/src/packBuffer.h">
      <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x2ad0f399b8d8"/>
        <typename><typedef-ref name="sendInfo" ref="0x2ad0f399a358"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__off_t" ref="0x2ad0f2df6770" loc="141:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off_t" ref="0x2ad0f2df6770"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0x2ad0f253e200" loc="91:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x2ad0f253e200"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x2ad0f2e04b80" loc="169:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt_t" ref="0x2ad0f2e04b80"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x2ad0f341e358" loc="22:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x2ad0f3420808"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x2ad0f341e358"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_id_t" ref="0x2ad0f3423148" loc="10:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x2ad0f3423148"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x2ad0f25418a0" loc="135:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x2ad0f25418a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x2ad0f3bacbe0" loc="241:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3bac7d8"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ad0f3bacbe0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x2ad0f3b81480" loc="114:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b84ce0"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x2ad0f3b81480"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x2ad0f3437cb0" loc="138:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x2ad0f34376d0"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x2ad0f3437cb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x2ad0f2e02430" loc="173:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x2ad0f2e02430"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x2ad0f253a3e8" loc="50:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x2ad0f253a3e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pair" ref="0x2ad0f3985020" loc="9:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/pair.h">
      <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x2ad0f39867c8"/>
        <typename><typedef-ref name="pair" ref="0x2ad0f3985020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pingType" ref="0x2ad0f39bb378" loc="5:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/pingList.h">
      <type-tag size="I:28" alignment="I:4"><struct-ref name="pingInfo" ref="0x2ad0f39c65e8"/>
        <typename><typedef-ref name="pingType" ref="0x2ad0f39bb378"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x2ad0f30882a8" loc="26:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2ad0f308ae38"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x2ad0f30882a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x2ad0f2e18cb8" loc="201:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x2ad0f2e18cb8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x2ad0f3ba7198" loc="270:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x2ad0f3ba7198"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x2ad0f3ba3540" loc="287:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x2ad0f3ba3540"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x2ad0f3424988" loc="7:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x2ad0f3424988"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x2ad0f2e043d8" loc="161:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x2ad0f2e043d8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x2ad0f3433ca0" loc="61:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h">
      <type-tag size="I:4" alignment="I:1"><union-ref name="message_metadata" ref="0x2ad0f3433650"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x2ad0f3433ca0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x2ad0f309dc60" loc="374:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x2ad0f2e01420"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x2ad0f2529660"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x2ad0f309dc60"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0x2ad0f2e197f8" loc="83:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fd_mask" ref="0x2ad0f2e197f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x2ad0f2d7d2a0" loc="437:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x2ad0f2d7d2a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pingInfo" ref="0x2ad0f39c4238" loc="9:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/pingInfo.h">
      <type-tag size="I:28" alignment="I:4"><struct-ref name="pingInfo" ref="0x2ad0f39c65e8"/>
        <typename><typedef-ref name="pingInfo" ref="0x2ad0f39c4238"/></typename>
      </type-tag>
    </typedef>
    <typedef name="hashtable_t" ref="0x2ad0f3155a08" loc="10:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/hashtable.h">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x2ad0f3155630"/>
        <typename><typedef-ref name="hashtable_t" ref="0x2ad0f3155a08"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x2ad0f2e07e50" loc="61:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x2ad0f2e07e50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x2ad0f2df97a8" loc="54:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x2ad0f2df97a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__swblk_t" ref="0x2ad0f2dfc848" loc="154:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__swblk_t" ref="0x2ad0f2dfc848"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x2ad0f2e17780" loc="203:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x2ad0f2e17780"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x2ad0f2e24d80" loc="244:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x2ad0f2e24d80"/></typename>
      </type-int>
    </typedef>
    <typedef name="lsparrlist" ref="0x2ad0f3a004b8" loc="14:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsplist.h">
      <type-tag size="I:31" alignment="I:1"><struct-ref name="lsparrlist" ref="0x2ad0f3a01b08"/>
        <typename><typedef-ref name="lsparrlist" ref="0x2ad0f3a004b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x2ad0f253f148" loc="104:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x2ad0f253f148"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim64_t" ref="0x2ad0f2dfd280" loc="147:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x2ad0f2dfd280"/></typename>
      </type-int>
    </typedef>
    <typedef name="__key_t" ref="0x2ad0f2dfcb90" loc="155:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x2ad0f2dfcb90"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x2ad0f2dfdd40" loc="150:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x2ad0f2dfdd40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x2ad0f3b7f9e8" loc="130:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b7f5e0"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x2ad0f3b7f9e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x2ad0f3ba3160" loc="286:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x2ad0f3ba3160"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x2ad0f309ec08" loc="366:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x2ad0f2e01420"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x2ad0f2529660"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x2ad0f309ec08"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x2ad0f2d80020" loc="432:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x2ad0f2d80020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x2ad0f2543360" loc="35:/usr/include/inttypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x2ad0f2543360"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x2ad0f3ba1158" loc="292:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x2ad0f3ba1158"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0x2ad0f2e15250" loc="206:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x2ad0f2e15250"/></typename>
      </type-int>
    </typedef>
    <typedef name="sendBuffer" ref="0x2ad0f3999020" loc="21:/home/adrian/git/tinyos-project1/pro1/src/packBuffer.h">
      <type-tag size="I:4098" alignment="I:2"><struct-ref name="sendBuffer" ref="0x2ad0f399a678"/>
        <typename><typedef-ref name="sendBuffer" ref="0x2ad0f3999020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x2ad0f2e39dc0" loc="216:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2ad0f2e399b8"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x2ad0f2e39dc0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x2ad0f3b9fce0" loc="309:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b9f8d8"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ad0f3b9fce0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x2ad0f3b83178" loc="108:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/home/adrian/local/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b84ce0"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ad0f3b83178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x2ad0f2e13b20" loc="110:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x2ad0f2e13b20"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x2ad0f2df93d0" loc="53:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x2ad0f2df93d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x2ad0f25397e8" loc="39:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x2ad0f25397e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0x2ad0f253ab40" loc="56:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x2ad0f253ab40"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0x2ad0f2e08738" loc="37:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_long" ref="0x2ad0f2e08738"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x2ad0f3534020" loc="94:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x2ad0f3534020"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x2ad0f3049400" loc="303:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x2ad0f304a1f0"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x2ad0f3049400"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x2ad0f2d82508" loc="444:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x2ad0f2d82508"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x2ad0f2d84730" loc="442:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x2ad0f2d84730"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x2ad0f2e2c208" loc="50:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="pthread_t" ref="0x2ad0f2e2c208"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x2ad0f2e047a0" loc="164:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blksize_t" ref="0x2ad0f2e047a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x2ad0f2546088" loc="283:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2ad0f2543bf8"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x2ad0f2546088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x2ad0f2df63f0" loc="140:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__nlink_t" ref="0x2ad0f2df63f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x2ad0f3b73a28" loc="205:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b73170"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x2ad0f3b73a28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__id_t" ref="0x2ad0f2dfd5f8" loc="148:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x2ad0f2dfd5f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least32_t" ref="0x2ad0f253d9e8" loc="79:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x2ad0f253d9e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x2ad0f308a748" loc="95:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x2ad0f308a340"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x2ad0f308a748"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x2ad0f34332f0" loc="57:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x2ad0f3435c48"/>
        <typename><typedef-ref name="message_footer_t" ref="0x2ad0f34332f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x2ad0f3ba4d20" loc="285:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x2ad0f3ba4d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0x2ad0f2ddcc28" loc="72:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x2ad0f2ddc6c8"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0x2ad0f2ddcc28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x2ad0f2e02020" loc="170:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x2ad0f2e02020"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x2ad0f2e24998" loc="240:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x2ad0f2e24998"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x2ad0f2e13088" loc="87:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x2ad0f2e13088"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x2ad0f2df48a0" loc="32:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x2ad0f2df48a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x2ad0f2d80d70" loc="434:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x2ad0f2d80d70"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x2ad0f2e08ad0" loc="38:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x2ad0f2e08ad0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x2ad0f2dfc150" loc="151:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__suseconds_t" ref="0x2ad0f2dfc150"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x2ad0f2e39228" loc="210:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:8"><union-ref ref="0x2ad0f2e3a9e8"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x2ad0f2e39228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x2ad0f3ba8020" loc="259:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3baaba0"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ad0f3ba8020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x2ad0f2df13d0" loc="37:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x2ad0f2df13d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x2ad0f3088d88" loc="31:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2ad0f3088980"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x2ad0f3088d88"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x2ad0f2e04020" loc="158:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x2ad0f2e04020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x2ad0f253f540" loc="106:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast16_t" ref="0x2ad0f253f540"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x2ad0f3ba4940" loc="284:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x2ad0f3ba4940"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x2ad0f2541c70" loc="136:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x2ad0f2541c70"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x2ad0f3424d78" loc="8:/home/adrian/local/tinyos-2.1.1/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x2ad0f3424d78"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x2ad0f2dffab8" loc="145:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__clock_t" ref="0x2ad0f2dffab8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x2ad0f2d7fb28" loc="436:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x2ad0f2d7fb28"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x2ad0f2dffe80" loc="146:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim_t" ref="0x2ad0f2dffe80"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x2ad0f2e07020" loc="39:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x2ad0f2e07020"/></typename>
      </type-int>
    </typedef>
    <typedef name="iterator" ref="0x2ad0f39765e0" loc="14:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/iterator.h">
      <type-tag size="I:24" alignment="I:2"><struct-ref name="iterator" ref="0x2ad0f39779c0"/>
        <typename><typedef-ref name="iterator" ref="0x2ad0f39765e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int_fast32_t" ref="0x2ad0f253e970" loc="94:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast32_t" ref="0x2ad0f253e970"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x2ad0f253b3e0" loc="67:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x2ad0f253b3e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="lspList" ref="0x2ad0f3a04230" loc="8:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsp.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref name="lspList" ref="0x2ad0f3a05ca0"/>
        <typename><typedef-ref name="lspList" ref="0x2ad0f3a04230"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ldiv_t" ref="0x2ad0f2dda0d8" loc="110:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x2ad0f2ddbca0"/>
        <typename><typedef-ref name="ldiv_t" ref="0x2ad0f2dda0d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x2ad0f2e17cc8" loc="204:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x2ad0f2e17cc8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x2ad0f2e17238" loc="202:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x2ad0f2e17238"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x2ad0f3b798c0" loc="163:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b794b8"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ad0f3b798c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x2ad0f3bb1020" loc="208:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b73170"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x2ad0f3bb1020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x2ad0f253dde8" loc="81:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x2ad0f253dde8"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashmap" ref="0x2ad0f3933758" loc="22:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/hashmap.h">
      <type-tag size="I:102" alignment="I:2"><struct-ref name="hashmap" ref="0x2ad0f39349e0"/>
        <typename><typedef-ref name="hashmap" ref="0x2ad0f3933758"/></typename>
      </type-tag>
    </typedef>
    <typedef name="arrlist" ref="0x2ad0f3984020" loc="14:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/list.h">
      <type-tag size="I:61" alignment="I:1"><struct-ref name="arrlist" ref="0x2ad0f39856c8"/>
        <typename><typedef-ref name="arrlist" ref="0x2ad0f3984020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int32_t" ref="0x2ad0f2dfa3b8" loc="41:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x2ad0f2dfa3b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_int32_t" ref="0x2ad0f30877f8" loc="54:/usr/include/_G_config.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="_G_int32_t" ref="0x2ad0f30877f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x2ad0f2e32228" loc="189:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref ref="0x2ad0f2e33d30"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x2ad0f2e32228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x2ad0f2eaea98" loc="32:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x2ad0f2eaea98"/></typename>
      </type-float>
    </typedef>
    <typedef name="__fd_mask" ref="0x2ad0f2e1c480" loc="55:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fd_mask" ref="0x2ad0f2e1c480"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x2ad0f3127088" loc="65:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x2ad0f3127088"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x2ad0f2e02830" loc="174:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x2ad0f2e02830"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x2ad0f3240b00" loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x2ad0f3241760"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x2ad0f3240b00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x2ad0f308b120" loc="65:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x2ad0f30798a8"/>
        <typename><typedef-ref name="__FILE" ref="0x2ad0f308b120"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x2ad0f3086828" loc="40:/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x2ad0f251f4a0"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x2ad0f3086828"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x2ad0f2d82bd8" loc="445:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x2ad0f2d82bd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0x2ad0f2df6b08" loc="142:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x2ad0f2df6b08"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x2ad0f3ba1530" loc="293:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x2ad0f3ba1530"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x2ad0f2e01088" loc="178:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x2ad0f2e01088"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x2ad0f3ba4560" loc="283:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x2ad0f3ba4560"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x2ad0f3ba3920" loc="288:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x2ad0f3ba3920"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x2ad0f2539b68" loc="41:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x2ad0f2539b68"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x2ad0f25394a0" loc="38:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x2ad0f25394a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ulong" ref="0x2ad0f2e18020" loc="151:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ulong" ref="0x2ad0f2e18020"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x2ad0f253ed28" loc="95:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x2ad0f253ed28"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x2ad0f2e05cd8" loc="81:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x2ad0f2e05cd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x2ad0f3431570" loc="19:/home/adrian/local/tinyos-2.1.1/tos/types/message.h">
      <type-tag size="I:41" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ad0f3432020"/>
        <typename><typedef-ref name="message_t" ref="0x2ad0f3431570"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x2ad0f2d7d968" loc="438:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x2ad0f2d7d968"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x2ad0f3b7b178" loc="146:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b7dd48"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ad0f3b7b178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0x2ad0f2e07750" loc="45:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x2ad0f2e07750"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0x2ad0f2e097a8" loc="192:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x2ad0f2e097a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x2ad0f31cc088" loc="65:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x2ad0f31b6888"/>
        <typename><typedef-ref name="node_t" ref="0x2ad0f31cc088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x2ad0f2df7020" loc="135:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x2ad0f2df7020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x2ad0f2d7a8e8" loc="431:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x2ad0f2d7a8e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x2ad0f323ddd0" loc="83:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x2ad0f323e020"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x2ad0f323ddd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x2ad0f2e13778" loc="105:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x2ad0f2e13778"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x2ad0f2e29e68" loc="104:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:40" alignment="I:8"><union-ref ref="0x2ad0f2e299b0"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x2ad0f2e29e68"/></typename>
      </type-tag>
    </typedef>
    <typedef name="hashType" ref="0x2ad0f34ac4d0" loc="7:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/hashmap.h">
      <documentation loc="1:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.&#10;&#10; @author UCM ANDES Lab&#10; @date   Apr 28 2012&#10; &#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="hashType" ref="0x2ad0f34ac4d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x2ad0f3232810" loc="122:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x2ad0f3232810"/></typename>
      </type-int>
    </typedef>
    <typedef name="rLspList" ref="0x2ad0f3a01408" loc="19:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/lsp.h">
      <type-tag size="I:401" alignment="I:1"><struct-ref name="recieveLspList" ref="0x2ad0f3a03970"/>
        <typename><typedef-ref name="rLspList" ref="0x2ad0f3a01408"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x2ad0f2e2d178" loc="130:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:8"><union-ref ref="0x2ad0f2e2fc28"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x2ad0f2e2d178"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x2ad0f2e36150" loc="140:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x2ad0f2e36150"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x2ad0f2e07ad0" loc="49:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino_t" ref="0x2ad0f2e07ad0"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x2ad0f2e10020" loc="116:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x2ad0f2e10020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x2ad0f321e738" loc="63:/usr/include/x86_64-linux-gnu/sys/time.h">
      <documentation loc="32:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x2ad0f321e738"/></typename>
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0x2ad0f3220c58"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x2ad0f2d819f0" loc="447:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x2ad0f2d819f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x2ad0f2e10748" loc="123:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x2ad0f2e10748"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x2ad0f2e31a18" loc="110:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x2ad0f2e31610"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x2ad0f2e31a18"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pingList" ref="0x2ad0f39ba020" loc="13:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/pingList.h">
      <type-tag size="I:844" alignment="I:4"><struct-ref name="pingList" ref="0x2ad0f39bb688"/>
        <typename><typedef-ref name="pingList" ref="0x2ad0f39ba020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dataType" ref="0x2ad0f39853a8" loc="6:/home/adrian/git/tinyos-project1/pro1/src/dataStructures/list.h">
      <type-tag size="I:2" alignment="I:1"><struct-ref name="pair" ref="0x2ad0f39867c8"/>
        <typename><typedef-ref name="dataType" ref="0x2ad0f39853a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x2ad0f341e780" loc="83:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
      <documentation loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x2ad0f341e780"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x2ad0f3b73578" loc="202:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ad0f3b73170"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ad0f3b73578"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x2ad0f3ba6d00" loc="279:/home/adrian/local/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x2ad0f3ba6d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x2ad0f3866230" loc="96:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x2ad0f3867088" loc="101:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x2ad0f37e2020" loc="145:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x2ad0f3860cb0" loc="64:/home/adrian/local/tinyos-2.1.1/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:64" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x2ad0f3860860"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x2ad0f3860cb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_sendBufferTask" ref="0x2ad0f3b44a28" loc="79:/home/adrian/git/tinyos-project1/pro1/src/Node.nc">
      <component-ref qname="Node"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x2ad0f3d6a138" loc="74:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x2ad0f3d80020" loc="71:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x2ad0f3d71228" loc="66:/home/adrian/local/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x2ad0f3d72bc8"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x2ad0f3d71228"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0x2ad0f3e35c70" loc="57:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x2ad0f3e35918"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x2ad0f3e35c70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x2ad0f3e3c020" loc="169:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x2ad0f3e86088" loc="126:/home/adrian/local/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
